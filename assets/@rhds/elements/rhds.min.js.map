{
  "version": 3,
  "sources": ["elements/rh-dialog/yt-api.ts", "elements/rh-alert/rh-alert.ts", "elements/rh-alert/rh-alert.css.js", "elements/rh-blockquote/rh-blockquote.ts", "elements/rh-blockquote/rh-blockquote.css.js", "elements/rh-context-provider/rh-context-provider.ts", "lib/context/color.ts", "lib/context/event.ts", "lib/context/context-color.css.js", "elements/rh-context-provider/rh-context-provider.css.js", "elements/rh-cta/rh-cta.ts", "lib/DirController.ts", "elements/rh-cta/rh-cta.css.js", "elements/rh-demo/rh-demo.ts", "elements/rh-demo/rh-demo.css.js", "elements/rh-dialog/rh-dialog.ts", "lib/ScreenSizeController.ts", "lib/tokens.ts", "elements/rh-dialog/rh-dialog.css.js", "elements/rh-footer/RhFooter.ts", "elements/rh-footer/rh-footer.css.js", "elements/rh-footer/rh-footer-responsive.css.ts", "lib/MatchMediaController.ts", "elements/rh-footer/rh-footer-social-link.ts", "elements/rh-footer/rh-footer-social-link.css.js", "elements/rh-footer/rh-footer-links.ts", "elements/rh-footer/rh-footer-links.css.js", "elements/rh-footer/rh-footer-block.ts", "elements/rh-footer/rh-footer-block.css.js", "elements/rh-footer/rh-global-footer.ts", "elements/rh-footer/rh-footer-copyright.ts", "elements/rh-footer/rh-footer-copyright.css.js", "elements/rh-footer/rh-footer.ts", "elements/rh-pagination/rh-pagination.ts", "elements/rh-pagination/rh-pagination.css.js", "elements/rh-secondary-nav/rh-secondary-nav.ts", "elements/rh-secondary-nav/rh-secondary-nav-menu-section.ts", "lib/functions.ts", "elements/rh-secondary-nav/rh-secondary-nav-menu-section.css.js", "elements/rh-secondary-nav/rh-secondary-nav-overlay.ts", "elements/rh-secondary-nav/rh-secondary-nav-overlay.css.js", "elements/rh-secondary-nav/rh-secondary-nav-dropdown.ts", "elements/rh-secondary-nav/rh-secondary-nav-menu.ts", "elements/rh-secondary-nav/rh-secondary-nav-menu.css.js", "elements/rh-secondary-nav/rh-secondary-nav-dropdown.css.js", "elements/rh-secondary-nav/rh-secondary-nav.css.js", "elements/rh-stat/rh-stat.ts", "elements/rh-stat/rh-stat.css.js", "elements/rh-tooltip/rh-tooltip.ts", "elements/rh-tooltip/rh-tooltip.css.js"],
  "sourcesContent": ["declare class Player {\n  constructor(iframeOrID: string|HTMLIFrameElement, options?: {\n    events?: {\n      onReady?(event: Event): void;\n    }\n  });\n\n  pauseVideo(): void\n}\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady(): void;\n    YT: {\n      Player: typeof Player;\n    }\n  }\n}\n\nconst players = new WeakMap<HTMLIFrameElement, Player>();\n\nasync function getPlayer(iframe: HTMLIFrameElement): Promise<Player|void> {\n  return new Promise(r => {\n    let player = players.get(iframe);\n    if (!player) {\n      players.set(iframe, new window.YT.Player(iframe, {\n        events: {\n          onReady() {\n            player = players.get(iframe);\n            r(player);\n          }\n        }\n      }));\n    } else {\n      requestAnimationFrame(() => r(player));\n    }\n  });\n}\n\nexport async function pauseVideo(iframe: HTMLIFrameElement) {\n  if (!iframe.src.match(/enablejsapi=1/)) {\n    // eslint-disable-next-line no-console\n    console.warn('Cannot pause video, please add `enablejsapi=1` to iframe url.');\n    return;\n  }\n  // 2. This code loads the IFrame Player API code asynchronously.\n  if (!window.YT) {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const [firstScriptTag] = document.getElementsByTagName('script');\n    firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n    const orig = window.onYouTubeIframeAPIReady;\n    await new Promise(r => {\n      window.onYouTubeIframeAPIReady = function() {\n        r(void 0);\n      };\n    });\n    window.onYouTubeIframeAPIReady = orig;\n  }\n  const player = await getPlayer(iframe);\n  player?.pauseVideo();\n}\n", "import { LitElement, html, svg } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport styles from './rh-alert.css';\n\nconst ICONS = {\n  default: { viewBox: '0 0 896 1024', path: 'M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z' },\n  error: { viewBox: '0 0 512 512', path: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z' },\n  success: { viewBox: '0 0 512 512', path: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z' },\n  warning: { viewBox: '0 0 576 512', path: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z' },\n  danger: { viewBox: '0 0 512 512', path: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z' },\n  info: { viewBox: '0 0 512 512', path: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z' },\n  close: { viewBox: '0 0 352 512', path: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z' },\n  get(name: 'close' | 'default' | 'error' | 'success' | 'warning' | 'danger' | 'info') {\n    const { viewBox, path } = ICONS[name];\n    return svg`\n      <svg\n          aria-hidden=\"true\"\n          fill=\"currentColor\"\n          height=\"1em\" width=\"1em\"\n          style=\"vertical-align:-0.125em\"\n          viewBox=\"${viewBox}\">\n        <path d=\"${path}\"/>\n      </svg>`;\n  }\n};\n\n/**\n * An alert to display information on a website.\n *\n * By default it is black text on a black background\n *\n * @summary An alert to display information on a website.\n *\n *\n * @slot         - Provide a description for the alert message\n * @slot header  - Provide a header for the alert message.\n * @slot actions - Provide actions that the user can take for the alert\n *\n */\n@customElement('rh-alert')\nexport class RhAlert extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = styles;\n\n  private get icon() {\n    return ICONS.get(this.state) ?? ``;\n  }\n\n  @property({ reflect: true }) state: 'default' | 'error' | 'success' | 'warning' | 'danger' | 'info' = 'default';\n\n  @property({ reflect: true, type: Boolean }) variant = false;\n\n  @property({ reflect: true, type: Boolean }) toast = false;\n\n  render() {\n    return html`\n      <div id=\"container\" role=\"alert\" aria-hidden=\"false\">\n        <div id=\"left-column\">\n          <div id=\"icon\">${this.icon}</div>\n        </div>\n        <div id=\"middle-column\">\n          <header>\n            <div id=\"header\"><slot name=\"header\"></slot></div>\n            <div id=\"header-actions\">\n              <button id=\"close-button\" aria-label=\"Close\" confirm>${ICONS.get('close')}</button>\n            </div>\n          </header>\n          <div id=\"description\"><slot></slot></div>\n          <footer><slot name=\"actions\"></slot></footer>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-alert': RhAlert;\n  }\n}\n\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  --_background-color: var(--rh-color-cyan-50, #f2f9f9);\n  --_border-color: var(--rh-color-cyan-300, #009596);\n  --_header-color: var(--rh-color-cyan-500, #003737);\n  --_icon-color: var(--rh-color-cyan-300, #009596);\n  --_font-family: var(--rh-font-family-body-text, RedHatText, \"Red Hat Text\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([state=\"info\"]) {\n  --_border-color: var(--rh-color-blue-250, #2b9af3);\n  --_icon-color: var(--rh-color-blue-250, #2b9af3);\n  --_header-color: var(--rh-color-blue-600, #002952);\n  --_background-color: var(--rh-color-blue-50, #e7f1fa);\n}\n\n:host([state=\"success\"]) {\n  --_border-color: var(--rh-color-green-500, #3e8635);\n  --_icon-color: var(--rh-color-green-500, #3e8635);\n  --_header-color: var(--rh-color-green-600, #1e4f18);\n  --_background-color: var(--rh-color-green-50, #f3faf2);\n}\n\n:host([state=\"warning\"]) {\n  --_border-color: var(--rh-color-gold-400, #f0ab00);\n  --_icon-color: var(--rh-color-gold-400, #f0ab00);\n  --_header-color: var(--rh-color-gold-600, #795600);\n  --_background-color: var(--rh-color-gold-50, #fdf7e7);\n}\n\n:host([state=\"danger\"]) {\n  --_border-color: #c9190b; /* WARNING: not a recognized token value */\n  --_icon-color: #c9190b; /* WARNING: not a recognized token value */\n  --_header-color: #7d1007; /* WARNING: not a recognized token value */\n  --_background-color: var(--rh-color-red-50, #faeae8);\n}\n\n:host([toast]) {\n  --_background-color: var(--rh-color-surface-lightest, #ffffff);\n\n  max-width: 550px;\n}\n\n#container {\n  border-width: var(--rh-border-width-md, 2px);\n  border-color: var(--_border-color);\n  border-style: solid;\n  background-color: var(--_background-color);\n  padding: var(--rh-space-lg, 16px);\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  gap: var(--rh-space-xs, 4px);\n  font-family: var(--_font-family);\n}\n\n#left-column {\n  display: inline-block;\n  vertical-align: top;\n}\n\n#middle-column {\n  display: inline-block;\n  vertical-align: top;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-bottom: var(--rh-space-xs, 4px);\n}\n\nheader ::slotted(:is(h1,h2,h3,h4,h5,h6)) {\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem);\n  margin: 0;\n\n  --rh-font-family-heading: var(--_font-family);\n}\n\n#header-actions {\n  margin-right: var(--rh-space-xs, 4px);\n}\n\n#header {\n  color: var(--_header-color);\n  font-weight: var(--rh-font-weight-heading-medium, 500);\n  flex: 1 1 auto;\n}\n\n#icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--rh-font-size-body-text-2xl, 1.5rem);\n  height: var(--rh-font-size-body-text-2xl, 1.5rem);\n  color: var(--_icon-color);\n}\n\n#close-button {\n  color: var(--rh-color-text-secondary-on-light, #6a6e73);\n  background-color: transparent;\n  border: none;\n  height: var(--rh-length-xl, 24px);\n  width: var(--rh-length-xl, 24px);\n  cursor: pointer;\n}\n\n#close-button:hover {\n  color: var(--rh-color-text-primary-on-light, #151515);\n}\n\n#description {\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem);\n}\n\n#description > ::slotted(*) {\n  margin-top: var(--rh-space-md, 8px);\n  margin-bottom: var(--rh-space-lg, 16px);\n}\n\nfooter {\n  margin-top: var(--rh-space-lg, 16px);\n}\n\nfooter ::slotted([slot=\"actions\"]) {\n  margin-right: var(--actions-item--MarginRight, var(--rh-alert__actions--Gap, 24px)) !important;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  color: var(--rh-color-interactive-blue-darker, #0066cc);\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem);\n  font-family: var(--_font-family);\n}\n\n/* TODO: separate focus and hover styles */\nfooter ::slotted([slot=\"actions\"]:focus) {\n  text-decoration: underline;\n  color: var(--rh-color-interactive-blue-darkest, #004080);\n}\n\nfooter ::slotted([slot=\"actions\"]:hover) {\n  cursor: pointer;\n  text-decoration: underline;\n  color: var(--rh-color-interactive-blue-darkest, #004080);\n}\n\n:host(:not([variant])) #container,\n:host([toast]) #container {\n  border-left: 0;\n  border-bottom: none;\n  border-right: 0;\n}\n\n:host([toast]) #container {\n  box-shadow: var(--rh-box-shadow-lg, 0 6px 8px 2px rgba(21, 21, 21, 0.3));\n}\n`;\nexport default styles;\n", "import { LitElement, html, css, svg } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { pfelement } from '@patternfly/pfe-core/decorators.js';\n\nimport styles from './rh-blockquote.css';\n\n/**\n * A blockquote for displaying quote, author, and author title.\n *\n *\n * @summary  A blockquote for displaying quote, author, and author title.\n *\n *\n * @slot         - Provide a quote for the blockquote\n * @slot author  - Provide an author for the blockquote\n * @slot title   - Provide an author title for the blockquote\n *\n */\n@customElement('rh-blockquote')\nexport class RhBlockquote extends LitElement {\n  static readonly styles = styles;\n\n  @property({ type: String }) title = 'Blockquote';\n\n  /**\n   * Set the colorPalette of the blockquote. Possible values are:\n   * - `lightest` (default)\n   * - `darkest`\n   */\n  @property({ reflect: true, attribute: 'color-palette' })\n    colorPalette: 'darkest'|'lightest' = 'lightest';\n\n  /**\n   * Set the alignment of the blockquote. Possible values are:\n   * - `left` (default)\n   * - `center`\n   */\n  @property({ reflect: true })\n    align: 'center'|'inline-start' = 'inline-start';\n\n  /** Optional highlight attribute that, when present, shows a highlight on side of blockquote. */\n  @property({ reflect: true, type: Boolean })\n    highlight = false;\n\n  /**\n   * Set the text size of the blockquote. Possible values are:\n   * - `default`\n   * - `large`\n   */\n  @property({ reflect: true })\n    size: 'default'|'large' = 'default';\n\n  render() {\n    const { align, highlight, colorPalette, size } = this;\n    return html`\n      <figure id=\"container\">\n        <svg fill=\"currentColor\" height=\"20px\" width=\"29px\" aria-hidden=\"true\" role=\"img\" viewBox=\"4.3799147605896 8.372319221496582 27.240171432495117 19.24776840209961\">\n          <g>\n            <path d=\"M 10,15.38 H 5.63 C 5.7110461,11.992437 8.6223137,9.3690967 12,9.64 12.344668,9.6747086 12.649028,9.4157753 12.67,9.07 12.72,8.44 12.04,8.34 11.55,8.38 7.5982208,8.3522481 4.3799026,11.548123 4.38,15.5 V 27 C 4.3743,27.34475 4.6552502,27.6257 5,27.62 h 11 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 16.614493,18.346158 13.653842,15.385507 10,15.38 Z\"></path>\n            <path d=\"M 25,15.38 H 20.63 C 20.71105,11.992437 23.622314,9.3690967 27,9.64 27.342787,9.668766 27.643464,9.4129672 27.67,9.07 27.72,8.44 27.04,8.34 26.55,8.38 c -3.932267,0 -7.12,3.187733 -7.12,7.12 V 27 c -0.0057,0.34475 0.27525,0.6257 0.62,0.62 H 31 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 31.614493,18.346158 28.653842,15.385507 25,15.38 Z\"></path>\n          </g>\n        </svg>\n        <blockquote id=\"quote\">\n          <slot></slot>\n        </blockquote>\n        <figcaption>\n          <p id=\"author\"><slot name=\"author\"></slot></p>\n          <p id=\"title\"><slot name=\"title\"></slot></p>\n        </figcaption>\n      </figure>\n    `;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  color: var(--rh-color-black-900, #151515);\n  margin: 0 auto;\n  text-align: left;\n  background-color: var(--rh-element-background-color);\n  font-size: var(--rh-font-size-body-text-lg, 1.125rem);\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  line-height: var(--rh-line-height-body-text, 1.5);\n}\n\n@media (min-width: 700px) {\n  :host {\n    font-size: var(--rh-font-size-body-text-xl, 1.25rem);\n  }\n}\n\nblockquote {\n  margin: 0;\n}\n\nblockquote ::slotted(p) {\n  margin: var(--rh-length-md, 8px);\n}\n\nfigcaption {\n  color: var(--rh-color-black-600, #6a6e73);\n  font-family: var(--rh-font-family-text, \"RedHatText\", \"Overpass\", Overpass, Helvetica, Arial, sans-serif);\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem);\n}\n\nfigcaption p {\n  margin: 0;\n}\n\n#author {\n  font-weight: 500;\n}\n\nsvg {\n  color: var(--rh-color-brand-red-500, #ee0000);\n}\n\n:host([align=\"center\"]) {\n  text-align: center;\n}\n\n:host([size=\"large\"]) {\n  font-size: var(--rh-font-size-body-text-2xl, 1.5rem);\n  line-height: var(--rh-line-height-heading, 1.3);\n}\n\n@media (min-width: 700px) {\n  :host([size=\"large\"]) {\n    font-size: var(--rh-font-size-heading-md, 1.75rem);\n  }\n}\n\n:host([highlight]) {\n  --BorderWidth: 8px;\n  --BorderColor: #43adaf;\n  --BorderStyle: solid;\n}\n\n:host([highlight]) figure {\n  border-inline-start: var(--BorderWidth) var(--BorderStyle) var(--BorderColor);\n  padding-inline-start: var(--rh-length-lg, 16px);\n}\n\n:host([color-palette=\"darkest\"]) {\n  color: var(--rh-color-white, #ffffff);\n}\n\n:host([color-palette=\"darkest\"]) svg {\n  color: var(--rh-color-brand-red-400, #ff3333);\n}\n\n:host([color-palette=\"darkest\"]) figcaption {\n  color: var(--rh-color-black-300, #d2d2d2);\n}\n`;\nexport default styles;\n", "import type { ColorPalette, ColorTheme } from '../../lib/context/color.js';\nimport { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { colorContextConsumer, colorContextProvider } from '../../lib/context/color.js';\n\nimport contextStyle from '../../lib/context/context-color.css';\nimport style from './rh-context-provider.css';\n\n@customElement('rh-context-provider')\nexport class ContextProvider extends LitElement {\n  static readonly styles = [contextStyle, style];\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer()\n  @property({ reflect: true }) on?: ColorTheme;\n\n  render() {\n    return html`<slot></slot>`;\n  }\n}\n", "import type { Context, ContextCallback, UnknownContext } from './event.js';\n\nimport type { ReactiveController, ReactiveElement } from 'lit';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { StyleController } from '@patternfly/pfe-core/controllers/style-controller.js';\nimport { createContext, ContextEvent } from './event.js';\n\nimport CONTEXT_BASE_STYLES from './context-color.css';\n\n/**\n * A `ColorPalette` is a collection of specific color values\n * Choosing a palette sets both color properties and, if the component is a context provider,\n * implies a color theme for descendents.\n *\n * `ColorPalette` is associated with the `color-palette` attribute\n */\nexport type ColorPalette = (\n  | 'base'\n  | 'accent'\n  | 'complement'\n  | 'lighter'\n  | 'lightest'\n  | 'darker'\n  | 'darkest'\n);\n\n/**\n * A Color theme is a context-specific restriction on the available color palettes\n *\n * `ColorTheme` is associated with the `on` attribute and the `--context` css property\n */\nexport type ColorTheme = (\n  | 'dark'\n  | 'light'\n  | 'saturated'\n);\n\nexport interface ColorContextOptions {\n  prefix?: string;\n  attribute?: string;\n}\n\n// TODO: CSS\n// 1. move sass that maps from palette to theme from _colors.scss:198+ to color-context.scss (and rename them)\n// 2. except don't because hard, wait for design tokens instead\n\n// TODO: QA\n// 1. verify elements\n//   rh-band - (easy)\n//   rh-card - (easy)\n//   rh-tabs - (easy)\n//   rh-jump-links - (potentially fraught)\n//   rh-autocomplete - (anyways broken)\n//   rh-cta - (anyways broken)\n\n/**\n* Maps from consumer host elements to already-fired request events\n* We hold these in memory in order to re-fire the events every time a new provider connects.\n* This is a hedge against cases where an early-upgrading provider claims an early-upgrading\n* consumer before a late-upgrading provider has a chance to register as the rightful provider\n* @example Monkey-in-the-middle error\n*          In this example, we must re-fire the event from eager-consumer when late-provider\n*          upgrades, so as to ensure that late-provider claims it for itself\n*          ```html\n*          <early-provider>\n*            <late-provider>\n*              <eager-consumer>\n*            </late-provider>\n*          </early-provider>\n*          ```\n*/\nconst contextEvents = new Map<ReactiveElement, ContextEvent<UnknownContext>>();\n\n/**\n * Color context is derived from the `--context` css custom property,\n * which can be set by the `on` attribute, but *must* be set by the `color-palette` attribute\n * This property is set (in most cases) in `color-context.scss`,\n * which is added to components via `StyleController`.\n *\n * In this way, we avoid the need to execute javascript in order to convert from a given\n * `ColorPalette` to a given `ColorTheme`, since those relationships are specified in CSS.\n */\nabstract class ColorContextController implements ReactiveController {\n  abstract update(next: ColorTheme | null): void;\n\n  protected abstract attribute: string;\n\n  /** The context object which describes the host's colour context */\n  protected context: Context<ColorTheme|null>;\n\n  /** The style controller which provides the necessary CSS. */\n  protected styleController: StyleController;\n\n  /** Prefix for colour context. Set this in Options to create a separate context */\n  protected prefix = 'rh-';\n\n  /** The last-known color context on the host */\n  protected last: ColorTheme|null = null;\n\n  protected logger: Logger;\n\n  hostUpdate?(): void\n\n  constructor(protected host: ReactiveElement, options?: ColorContextOptions) {\n    this.prefix = options?.prefix ?? 'rh-';\n    this.context = createContext(`${this.prefix}-color-context`);\n    this.logger = new Logger(host);\n    this.styleController = new StyleController(host, CONTEXT_BASE_STYLES);\n    host.addController(this as ReactiveController);\n  }\n}\n\n/**\n * `ColorContextProvider` is responsible to derive a context value from CSS and provide it to its\n * descendents.\n */\nexport class ColorContextProvider extends ColorContextController implements ReactiveController {\n  protected attribute: string;\n\n  /** Cache of context callbacks. Call each to update consumers */\n  private callbacks = new Set<ContextCallback<ColorTheme|null>>();\n\n  /** Mutation observer which updates consumers when `on` or `color-palette` attributes change. */\n  private mo = new MutationObserver(() => this.update(this.contextVariable));\n\n  /**\n   * Cached (live) computed style declaration\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n   */\n  protected style: CSSStyleDeclaration;\n\n  /** Return the current CSS `--context` value, or null */\n  protected get contextVariable(): ColorTheme | null {\n    return this.style.getPropertyValue('--context').trim() as ColorTheme || null;\n  }\n\n  constructor(host: ReactiveElement, options?: ColorContextOptions) {\n    super(host, options);\n    this.style = window.getComputedStyle(host);\n    this.attribute = options?.attribute ?? 'color-palette';\n  }\n\n  /**\n   * When a context provider connects, it listens for context-request events\n   * it also fires all previously fired context-request events from their hosts,\n   * in case this context provider upgraded after and is closer to a given consumer.\n   */\n  hostConnected() {\n    this.host.addEventListener('context-request', e => this.#onChildContextEvent(e));\n    this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, 'on'] });\n    this.update(this.contextVariable);\n    for (const [host, fired] of contextEvents) {\n      host.dispatchEvent(fired);\n    }\n  }\n\n  /**\n   * When a context provider disconnects, it disconnects its mutation observer\n   */\n  hostDisconnected() {\n    this.callbacks.forEach(x => this.callbacks.delete(x));\n    this.mo.disconnect();\n  }\n\n  /** Was the context event fired requesting our colour-context context? */\n  private isColorContextEvent(\n    event: ContextEvent<UnknownContext>\n  ): event is ContextEvent<Context<ColorTheme|null>> {\n    return (\n      event.target !== this.host &&\n      event.context.name === `${this.prefix}-color-context`\n    );\n  }\n\n  /**\n   * Provider part of context API\n   * When a child connects, claim its context-request event\n   * and add its callback to the Set of children if it requests multiple updates\n   */\n  #onChildContextEvent(event: ContextEvent<UnknownContext>) {\n    // only handle ContextEvents relevant to colour context\n    if (this.isColorContextEvent(event)) {\n      // claim the context-request event for ourselves (required by context protocol)\n      event.stopPropagation();\n\n      // Run the callback to initialize the child's colour-context\n      event.callback(this.contextVariable);\n\n      // Cache the callback for future updates, if requested\n      if (event.multiple) {\n        this.callbacks.add(event.callback);\n      }\n    }\n  }\n\n  /** Sets the `on` attribute on the host and any children that requested multiple updates */\n  public update(next: ColorTheme | null) {\n    for (const cb of this.callbacks) {\n      cb(next);\n    }\n  }\n}\n\n/**\n * A color context consumer receives sets it's `on` attribute based on the context provided\n * by the closes color context provider.\n * The consumer has no direct access to the context, it must receive it from the provider.\n */\nexport class ColorContextConsumer extends ColorContextController implements ReactiveController {\n  protected attribute: string;\n\n  private dispose?: () => void;\n\n  private override: ColorTheme | null = null;\n\n  constructor(host: ReactiveElement, options?: ColorContextOptions) {\n    super(host, options);\n    this.attribute ??= 'on';\n  }\n\n  /**\n   * When a color context consumer connects,\n   * it requests colour context from the closest context provider,\n   * then updates it's host's `on` attribute\n   */\n  hostConnected() {\n    const event = new ContextEvent(this.context, e => this.contextCallback(e), true);\n    this.override = this.host.getAttribute(this.attribute) as ColorTheme;\n    this.host.dispatchEvent(event);\n    contextEvents.set(this.host, event);\n  }\n\n  /**\n   * When a color context consumer disconnects,\n   * it removes itself from the collection of components which request color context\n   * then updates it's host's `on` attribute\n   */\n  hostDisconnected() {\n    this.dispose?.();\n    this.dispose = undefined;\n    contextEvents.delete(this.host);\n  }\n\n  /** Register the dispose callback for hosts that requested multiple updates, then update the colour-context */\n  private contextCallback(value: ColorTheme|null, dispose?: () => void) {\n    // protect against changing providers\n    if (dispose && dispose !== this.dispose) {\n      this.dispose?.();\n      this.dispose = dispose;\n    }\n    this.update(value);\n  }\n\n  /** Sets the `on` attribute on the host and any children that requested multiple updates */\n  public update(next: ColorTheme|null) {\n    if (!this.override && next !== this.last) {\n      this.last = next;\n      this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${next}`);\n      if (next == null) {\n        this.host.removeAttribute(this.attribute);\n      } else {\n        this.host.setAttribute(this.attribute, next);\n      }\n    }\n  }\n}\n\nexport function colorContextProvider<T extends ReactiveElement>(options?: ColorContextOptions) {\n  return function(proto: T, _: string) {\n    (proto.constructor as typeof ReactiveElement).addInitializer(instance => {\n      // @ts-expect-error: this is strictly for debugging purposes\n      instance.__colorContextProvider =\n        new ColorContextProvider(instance, options);\n    });\n  };\n}\n\nexport function colorContextConsumer<T extends ReactiveElement>(options?: ColorContextOptions) {\n  return function(proto: T, _: string) {\n    (proto.constructor as typeof ReactiveElement).addInitializer(instance => {\n      // @ts-expect-error: this is strictly for debugging purposes\n      instance.__colorContextConsumer =\n        new ColorContextConsumer(instance, options);\n    });\n  };\n}\n", "/**\n * Context Protocol\n * @link https://github.com/webcomponents-cg/community-protocols/blob/main/proposals/context.md\n */\n\n/**\n * A Context object defines an optional initial value for a Context, as well as a name identifier for debugging purposes.\n */\nexport type Context<T> = {\n  name: string;\n  initialValue?: T;\n};\n\n/**\n * An unknown context typeU\n */\nexport type UnknownContext = Context<unknown>;\n\n/**\n * A helper type which can extract a Context value type from a Context type\n */\nexport type ContextType<T extends UnknownContext> = T extends Context<infer Y>\n  ? Y\n  : never;\n\n/**\n * A function which creates a Context value object\n */\nexport function createContext<T>(\n  name: string,\n  initialValue?: T\n): Readonly<Context<T>> {\n  return {\n    name,\n    initialValue,\n  };\n}\n\n/**\n * A callback which is provided by a context requester and is called with the value satisfying the request.\n * This callback can be called multiple times by context providers as the requested value is changed.\n */\nexport type ContextCallback<ValueType> = (\n  value: ValueType,\n  dispose?: () => void\n) => void;\n\n/**\n * An event fired by a context requester to signal it desires a named context.\n *\n * A provider should inspect the `context` property of the event to determine if it has a value that can\n * satisfy the request, calling the `callback` with the requested value if so.\n *\n * If the requested context event contains a truthy `multiple` value, then a provider can call the callback\n * multiple times if the value is changed, if this is the case the provider should pass a `dispose`\n * method to the callback which requesters can invoke to indicate they no longer wish to receive these updates.\n */\nexport class ContextEvent<T extends UnknownContext> extends Event {\n  public constructor(\n    public readonly context: T,\n    public readonly callback: ContextCallback<ContextType<T>>,\n    public readonly multiple?: boolean\n  ) {\n    super('context-request', { bubbles: true, composed: true });\n  }\n}\n\ndeclare global {\n  interface HTMLElementEventMap {\n    /**\n     * A 'context-request' event can be emitted by any element which desires\n     * a context value to be injected by an external provider.\n     */\n    'context-request': ContextEvent<UnknownContext>;\n  }\n}\n\n", "import {css} from 'lit';\nexport const styles = css`:host(:is([on=dark])) { --context: dark; }\n:host(:is([on=light])) { --context: light; }\n:host(:is([on=saturated])) { --context: saturated; }\n\n/**\n * It's important for \\`color-palette\\` to take precedence over \\`on\\`\n * when setting \\`--context\\`, because a \\`dark\\` card that's on a \\`light\\`\n * background must create a new \\`dark\\` context for its descendents\n */\n\n:host(:is([color-palette=darker],[color-palette=darkest])) {\n  --context: dark;\n  --rh-context-text: var(--rh-context-dark-color-text, #fff);\n  --rh-context-text-muted: var(--rh-context-dark-color-text-muted, #d2d2d2);\n  --rh-context-link: var(--rh-context-dark-color-text-link, #73bcf7);\n  --rh-context-link-hover: var(--rh-context-dark-color-text-link-hover, #bee1f4);\n  --rh-context-link-focus: var(--rh-context-dark-color-text-link-focus, #bee1f4);\n  --rh-context-link-visited: var(--rh-context-dark-color-text-link-visited, #a18fff);\n  --rh-context-link-visited-hover: var(--rh-context-dark-color-text-link-visited-hover, #cbc1ff);\n  /* --rh-context-link-decoration: var(--rh-theme--link-decoration--on-dark, none); */\n  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-dark, underline); */\n  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-dark, underline); */\n  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-dark, none); */\n}\n\n:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])) {\n  --context: light;\n  --rh-context-text: var(--rh-context-light-color-text, #151515);\n  --rh-context-text-muted: var(--rh-context-light-color-text-muted, #6a6e73);\n  --rh-context-link: var(--rh-context-light-color-text-link, #06c);\n  --rh-context-link-hover: var(--rh-context-light-color-text-link-hover, #004080);\n  --rh-context-link-focus: var(--rh-context-light-color-text-link-focus, #004080);\n  --rh-context-link-visited: var(--rh-context-light-color-text-link-visited, #6753ac);\n  --rh-context-link-visited-hover: var(--rh-context-light-color-text-link-visited-hover, #1f0066);\n  /* --rh-context-link-decoration: var(--rh-theme--link-decoration, none); */\n  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover, underline); */\n  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus, underline); */\n  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited, none); */\n}\n\n/* FIXME: Saturated colours TBD */\n/* :host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])) { */\n/*   --context: saturated; */\n/*   --rh-context-text: var(--rh-theme--color--text--on-saturated, #fff); */\n/*   --rh-context-text-muted: var(--rh-theme--color--text-muted--on-saturated, #d2d2d2); */\n/*   --rh-context-link: var(--rh-theme--color--link-on-saturated, #fff); */\n/*   --rh-context-link-hover: var(--rh-theme--color--link-hover--on-saturated, #fafafa); */\n/*   --rh-context-link-focus: var(--rh-theme--color--link-focus--on-saturated, #fafafa); */\n/*   --rh-context-link-visited: var(--rh-theme--color--link-visited--on-saturated, #d2d2d2); */\n/*   --rh-context-link-decoration: var(--rh-theme--link-decoration--on-saturated, underline); */\n/*   --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-saturated, underline); */\n/*   --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-saturated, underline); */\n/*   --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-saturated, underline); */\n/* } */\n\n:host(:is([color-palette=lightest])) {\n  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);\n}\n\n:host(:is([color-palette=lighter])) {\n  --rh-context-background-color: var(--rh-color-surface-lighter, #f5f5f5);\n}\n\n:host(:is([color-palette=base])) {\n  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);\n}\n\n:host(:is([color-palette=darker])) {\n  --rh-context-background-color: var(--rh-color-surface-darker, #212427);\n}\n\n:host(:is([color-palette=darkest])) {\n  --rh-context-background-color: var(--rh-color-surface-darkest, #151515);\n}\n\n/* FIXME: Saturated colors TBD */\n/* :host(:is([color-palette=complement])) { */\n/*   --rh-context-background-color: var(--rh-color-surface-complement, #004368); */\n/* } */\n/**/\n/* :host(:is([color-palette=accent])) { */\n/*   --rh-context-background-color: var(--rh-color-surface-accent, #00659c); */\n/* } */\n\n/* QUESTION: should be specified per component? */\n/* :host(:is([color-palette])) { */\n/*   background-color: var(--rh-context-background-color, var(--rh-color-surface-base)); */\n/* } */\n\n`;\nexport default styles;\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  background-color: var(--rh-context-background-color);\n  color: var(--rh-context-text);\n}\n`;\nexport default styles;\n", "import type { ColorPalette, ColorTheme } from '../../lib/context/color.js';\n\nimport { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { DirController } from '../../lib/DirController.js';\nimport { colorContextConsumer, colorContextProvider } from '../../lib/context/color.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport '@patternfly/pfe-icon';\n\nimport style from './rh-cta.css';\n\nexport interface CtaData {\n  href?: string;\n  text?: string;\n  title?: string;\n  color?: string;\n  type?: string;\n}\n\nconst supportedTags = ['a', 'button']; // add input later\nfunction isSupportedContent(el: Element|null): el is HTMLAnchorElement|HTMLButtonElement {\n  return !!el && supportedTags.includes(el.localName);\n}\n\nconst CONTENT = new WeakMap<Element, boolean>();\nfunction contentInitialized(el: Element|null): boolean {\n  return !!el && !!CONTENT.get(el);\n}\n\nfunction isButton(element: Element): element is HTMLButtonElement {\n  return element.tagName.toLowerCase() === 'button';\n}\n\n/**\n * Call to action stands out from regular hypertext links, and is used for linking users to webpages.\n *\n * @summary Directs a user to other pages or displays extra content\n *\n * @slot - We expect an anchor tag, `<a>` with an `href`, to be the first child inside `rh-cta` element. Less preferred but allowed for specific use-cases include: `<button>` (note however that the `button` tag is not supported for the default CTA styles).\n *\n * @csspart container - container element for slotted CTA\n *\n */\n@customElement('rh-cta')\nexport class RhCta extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [style];\n\n  /**\n   * Indicates the importance of this call-to-action in the context of the page.\n   * Will also influence how the call-to-action is styled.\n   *   - **Primary**: Use for the primary or most important link. This variant is the highest in\n   *       hierarchy and can also be used to play a video in a Modal or large container.\n   *   - **Secondary**: Use for secondary or general links. This variant is lower in hierarchy than\n   *       the Primary variant and can be used multiple times in the same container or layout.\n   *   - **Brick**: Use to group links together. Only the Brick variant can stretch to fit a\n   *       container or grid, otherwise the text label padding in other variants stays the same.\n   *   - Default (no variant): Use for tertiary or the least important links. This variant is the\n   *       lowest in hierarchy and can be used multiple times in the same container or layout.\n   */\n  @property({ reflect: true }) variant?: 'primary'|'secondary'|'brick';\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer()\n  @property({ reflect: true }) on?: ColorTheme;\n\n  @property({ reflect: true }) icon?: string;\n\n  /** The slotted `<a>` or `<button>` element */\n  public cta: HTMLAnchorElement|HTMLButtonElement|null = null;\n\n  /** true while the initializer method is running - to prevent double-execution */\n  #initializing = false;\n\n  /** Is the element in an RTL context? */\n  #dir = new DirController(this);\n\n  #logger = new Logger(this);\n\n  get #isDefault(): boolean {\n    return !this.hasAttribute('variant');\n  }\n\n  render() {\n    const rtl = this.#dir.dir === 'rtl';\n    return html`\n      <span id=\"container\" part=\"container\" class=\"${classMap({ rtl })}\">\n        <slot @slotchange=${this.firstUpdated}></slot>${!this.#isDefault && !this.icon ? '' : this.icon ? html`\n        <pfe-icon icon=${this.icon} size=\"sm\"></pfe-icon>` : html`&nbsp;<svg xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 31.56 31.56\" focusable=\"false\" width=\"1em\">\n          <path d=\"M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z\" />\n        </svg>`}\n      </span>\n    `;\n  }\n\n  firstUpdated() {\n    let [cta] = this.shadowRoot?.querySelector('slot')?.assignedElements() ?? [];\n\n    while (cta instanceof HTMLSlotElement) {\n      [cta] = cta.assignedElements();\n    }\n\n    if (contentInitialized(cta) || this.#initializing) {\n      return;\n    }\n\n    this.#initializing = true;\n\n    // If the first child does not exist or that child is not a supported tag\n    if (!isSupportedContent(cta)) {\n      return this.#logger.warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);\n    } else if (isButton(cta) && !this.variant) {\n      return this.#logger.warn(`Button tag is not supported semantically by the default link styles`);\n    } else {\n      // Capture the first child as the CTA element\n      this.cta = cta;\n\n      CONTENT.set(this.cta, true);\n      this.#initializing = false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-cta': RhCta;\n  }\n}\n\n", "import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\n/**\n * Discovers and reports the host element's closest `dir`,\n * even across shadow roots. Does not observe DOM changes.\n * @see https://caniuse.com/css-dir-pseudo\n */\nexport class DirController implements ReactiveController {\n  /** The element's current `dir` */\n  public dir: string;\n\n  constructor(public host: ReactiveControllerHost & Element) {\n    this.dir = this.#getDirContext();\n  }\n\n  hostConnected() {\n    this.dir = this.#getDirContext();\n  }\n\n  #getDirContext() {\n    let host = this.host as Element;\n    while (host) {\n      const dirContext = host.closest('[dir]');\n      if (dirContext?.hasAttribute('dir')) {\n        return dirContext?.getAttribute('dir') || 'ltr';\n      } else {\n        ({ host } = (host?.getRootNode() as ShadowRoot) ?? {});\n      }\n    }\n    return 'ltr';\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: inline-flex;\n  position: relative;\n  z-index: 0;\n  align-items: center;\n  max-width: max-content;\n  background-color: var(--rh-cta-background-color);\n  border-radius: var(--rh-border-radius-default, 3px);\n  border: var(--rh-border-width-sm, 1px);\n  cursor: pointer;\n\n  --rh-context-background-color: var(--rh-cta-background-color) !important;\n}\n\n::slotted(*) {\n  white-space: normal;\n  display: inline;\n  padding: var(--rh-space-md, 8px) 0 !important;\n  color: inherit !important;\n  font-family: inherit !important;\n  font-size: inherit !important;\n  font-weight: inherit !important;\n  line-height: inherit !important;\n  text-decoration: inherit !important;\n}\n\n::slotted(button),\n::slotted(input) {\n  background-color: transparent;\n  border: medium none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n#container {\n  display: block;\n  white-space: nowrap;\n  min-width: 100%;\n  color: var(--rh-cta-color);\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  font-size: var(--rh-font-size-text-xl, 1.125rem);\n  font-weight: var(--rh-font-weight-bold, 600);\n  line-height: var(--rh-line-height-lg, 1.5);\n  text-decoration: var(--rh-cta-text-decoration);\n\n  --_arrow-size: 13px;\n}\n\n/** Inner border */\n#container:after {\n  --_offset: 1px;\n\n  content: \"\";\n  display: block;\n  height: calc(100% - var(--_offset) * 2);\n  width: calc(100% - var(--_offset) * 2);\n  box-sizing: border-box;\n  position: absolute;\n  top: var(--_offset);\n  left: var(--_offset);\n  z-index: -1;\n  border: var(--rh-border-width-sm, 1px);\n  border-radius: 2px;\n  outline: none;\n}\n\n/** Default variant arrow icon */\nsvg {\n  display: inline;\n  fill: currentcolor;\n  width: var(--_arrow-size);\n  height: var(--_arrow-size);\n  margin-bottom: -1px;\n  padding-inline: 3px;\n  translate: 0 0;\n  transition: translate var(--_trans);\n\n  --_trans:\n    var(--rh-animation-speed, 0.3s)\n    var(--rh-animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n}\n\n#container.rtl svg {\n  rotate: 180deg;\n}\n\n/*****************************************************************************\n * FOCUS STATE                                                               *\n *****************************************************************************/\n\n:host(:is(:focus, :focus-within)),\n:host(:is(:focus, :focus-within)) ::slotted(*),\n::slotted(:focus) {\n  outline: none !important;\n}\n\n:host(:is(:focus, :focus-within)) {\n  border-color: var(--rh-cta-focus-border-color);\n\n  --rh-cta-inner-border-color: var(--rh-cta-focus-inner-border-color);\n  --rh-cta-background-color: var(--rh-cta-focus-background-color) !important;\n}\n\n:host(:is(:focus, :focus-within)) #container {\n  --rh-cta-color: var(--rh-cta-focus-color);\n  --rh-cta-text-decoration: var(--rh-cta-focus-text-decoration);\n\n  background-color:\n    var(\n      --rh-cta-focus-container-background-color,\n      var(--rh-cta-focus-background-color)\n    );\n}\n\n/*****************************************************************************\n * HOVER STATE                                                               *\n *****************************************************************************/\n\n:host(:hover) {\n  background-color: var(--rh-cta-hover-background-color);\n  border-color: var(--rh-cta-hover-border-color);\n\n  --rh-cta-inner-border-color: var(--rh-cta-hover-inner-border-color);\n}\n\n:host(:hover) #container {\n  color: var(--rh-cta-hover-color);\n\n  --rh-cta-text-decoration: var(--rh-cta-hover-text-decoration);\n}\n\n:host(:hover) #container svg {\n  translate: 3px 0;\n}\n\n:host(:hover) #container.rtl svg {\n  translate: -3px 0;\n}\n\n/*****************************************************************************\n * ACTIVE STATE                                                              *\n *****************************************************************************/\n\n:host(:active) {\n  background-color: var(--rh-cta-active-background-color);\n\n  --rh-cta-inner-border-color: var(--rh-cta-active-inner-border-color) !important;\n}\n\n:host(:active) #container {\n  --rh-cta-background-color:\n    var(\n      --rh-cta-active-container-background-color,\n      var(--rh-cta-active-background-color)\n    );\n}\n\n/*****************************************************************************\n * VARIANTS                                                                  *\n *****************************************************************************/\n\n:host([variant]) #container {\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  height: 100%;\n  background-color: transparent;\n}\n\n:host([variant\\$=\"ary\"]) ::slotted(*) {\n  font-size: var(--rh-cta-font-size-priority, var(--rh-font-size-text-lg, 1rem));\n  text-align: center;\n}\n\n:host([variant]) ::slotted(*) {\n  padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px) !important;\n}\n\n/* prefer to group state-bound styles */\n/* stylelint-disable-next-line no-descending-specificity */\n:host([variant]) #container svg {\n  display: none;\n}\n\n/*****************************************************************************\n * DEFAULT\n *****************************************************************************/\n\n:host(:not([variant])) {\n  --rh-cta-background-color: transparent;\n  --rh-cta-border-color: transparent;\n  --rh-cta-color: var(--rh-color-interactive-blue, #0066cc);\n  --rh-cta-hover-background-color: transparent;\n  --rh-cta-hover-border-color: transparent;\n  --rh-cta-hover-inner-border-color: transparent;\n  --rh-cta-hover-color: var(--rh-context-color-link-hover, #004080);\n  --rh-cta-hover-text-decoration: none;\n  --rh-cta-focus-background-color: transparent;\n\n  /* --rh-color-border-interactive-on-light with 10% opacity */\n  --rh-cta-focus-container-background-color: #0066cc1a;\n  --rh-cta-focus-border-color: transparent;\n  --rh-cta-focus-color: var(--rh-context-light-color-focus, #0066cc);\n  --rh-cta-focus-inner-border-color: transparent;\n  --rh-cta-focus-text-decoration: none;\n\n  /* --rh-color-border-interactive-on-light with 10% opacity */\n  --rh-cta-active-container-background-color: #0066cc1a;\n  --rh-cta-active-inner-border-color: transparent;\n  --rh-cta-active-text-decoration: none;\n}\n\n:host(:not([variant])[on=\"dark\"]) {\n  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);\n  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);\n\n  /* --rh-color-interactive-blue-lighter with 25% opacity */\n  --rh-cta-focus-container-background-color: #73bcf740;\n  --rh-cta-focus-border-color: transparent;\n  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);\n  --rh-cta-focus-inner-border-color: transparent;\n  --rh-cta-focus-text-decoration: none;\n\n  /* --rh-color-interactive-blue-lighter with 25% opacity */\n  --rh-cta-active-container-background-color: #73bcf740;\n  --rh-cta-active-text-decoration: none;\n}\n\n/*****************************************************************************\n * PRIMARY\n *****************************************************************************/\n\n:host([variant=\"primary\"]) {\n  --rh-cta-background-color: var(--rh-color-brand-red-on-light, #ee0000);\n  --rh-cta-border-color: var(--rh-color-brand-red-on-light, #ee0000);\n  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-hover-background-color: var(--rh-color-brand-red-dark, #be0000);\n  --rh-cta-hover-border-color: var(--rh-color-brand-red-dark, #be0000);\n  --rh-cta-hover-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-focus-background-color: var(--rh-color-brand-red-on-light, #ee0000);\n  --rh-cta-focus-border-color: var(--rh-color-brand-red-on-light, #ee0000);\n  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-focus-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-active-background-color: var(--rh-color-brand-red-dark, #be0000);\n  --rh-cta-active-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);\n}\n\n/*****************************************************************************\n * SECONDARY\n *****************************************************************************/\n\n:host([variant=\"secondary\"]) {\n  --rh-cta-background-color: transparent;\n  --rh-cta-border-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-color: var(--rh-color-text-primary-on-light, #151515);\n  --rh-cta-hover-background-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-hover-border-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-hover-color: var(--rh-color-primary-on-dark, #ffffff);\n  --rh-cta-focus-background-color: var(--rh-color-surface-light, #f0f0f0);\n  --rh-cta-focus-border-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-focus-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-focus-inner-border-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-active-color: var(--rh-color-surface-lightest, #ffffff);\n  --rh-cta-active-background-color: var(--rh-color-surface-darkest, #151515);\n  --rh-cta-active-inner-border-color: var(--rh-color-surface-light, #f0f0f0);\n}\n\n:host([variant=\"secondary\"][on=\"dark\"]) {\n  --rh-cta-border-color: var(--rh-color-border-strong-on-dark, #ffffff);\n  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-hover-background-color: var(--rh-color-surface-lightest, #ffffff);\n  --rh-cta-hover-border-color: var(--rh-color-surface-lightest, #ffffff);\n  --rh-cta-hover-color: var(--rh-color-text-primary-on-light, #151515);\n  --rh-cta-focus-background-color: var(--rh-color-surface-dark, #3c3f42);\n  --rh-cta-focus-border-color: var(--rh-color-border-strong-on-dark, #ffffff);\n  --rh-cta-focus-inner-border-color: var(--rh-color-border-strong-on-dark, #ffffff);\n  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --rh-cta-active-color: var(--rh-color-text-primary-on-light, #151515);\n  --rh-cta-active-background-color: var(--rh-color-surface-lightest, #ffffff);\n  --rh-cta-active-inner-border-color: var(--rh-color-border-strong-on-light, #151515);\n}\n\n/*****************************************************************************\n * BRICK\n *****************************************************************************/\n\n:host([variant=\"brick\"]) #container {\n  font-weight: var(--rh-font-weight-body-text-regular, 400);\n}\n\n:host([variant=\"brick\"]) {\n  --rh-cta-background-color: transparent;\n  --rh-cta-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  --rh-cta-color: var(--rh-color-interactive-blue-darker, #0066cc);\n  --rh-cta-hover-background-color: var(--rh-color-surface-lighter, #f5f5f5);\n  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  --rh-cta-hover-color: var(--rh-color-interactive-blue-darkest, #004080);\n  --rh-cta-hover-text-decoration: underline;\n  --rh-cta-focus-color: var(--rh-color-interactive-blue-darker, #0066cc);\n  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  --rh-cta-focus-text-decoration: none;\n  --rh-cta-active-background-color: var(--rh-color-surface-lighter, #f5f5f5);\n  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  --rh-cta-active-text-decoration: underline;\n}\n\n:host([variant=\"brick\"][on=\"dark\"]) {\n  --rh-cta-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);\n  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);\n  --rh-cta-hover-background-color: var(--rh-color-surface-darker, #212427);\n  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);\n  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);\n  --rh-cta-hover-text-decoration: underline;\n  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);\n  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);\n  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);\n  --rh-cta-focus-text-decoration: none;\n  --rh-cta-active-background-color: var(--rh-color-surface-darker, #212427);\n  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);\n  --rh-cta-active-text-decoration: underline;\n}\n\n/* chrome <= 103 */\n@supports not (translate: 0 0) {\n  svg {\n    transform: translate(0, 0);\n    transition: transform var(--_trans);\n  }\n\n  #container.rtl svg { transform: translate(0, 0) rotate(180deg); }\n  :host(:hover) #container svg { transform: translate(3px, 0); }\n  :host(:hover) #container.rtl svg { transform: translate(-3px, 0) rotate(180deg); }\n}\n`;\nexport default styles;\n", "import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport style from './rh-demo.css';\n\n@customElement('rh-demo')\nexport class RhDemo extends LitElement {\n  static readonly styles = style;\n\n  constructor() {\n    super();\n    import('@patternfly/pfe-accordion');\n    import('@lrnwebcomponents/code-sample');\n  }\n\n  protected createRenderRoot(): Element | ShadowRoot {\n    return this;\n  }\n\n  firstUpdated() {\n    this.syncCodeEditor();\n  }\n\n  public syncCodeEditor() {\n    const template = this.querySelector('template');\n    if (template) {\n      const output = this.renderRoot.querySelector(\n        '.rh-demo-code-area template'\n      );\n      if (output) {\n        output.innerHTML = template.innerHTML;\n        this.syncPreview();\n      }\n    }\n  }\n\n  public syncPreview() {\n    const preview = this.renderRoot.querySelector('.rh-demo-preview-area');\n    if (preview) {\n      preview.innerHTML =\n        this.renderRoot.querySelector('.rh-demo-code-area template')\n          ?.innerHTML || '';\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"rh-demo-preview-area\"></div>\n      <div part=\"code\" class=\"rh-demo-code-area\">\n        <pfe-accordion>\n          <pfe-accordion-header>\n            <h3>View code</h3>\n          </pfe-accordion-header>\n          <pfe-accordion-panel>\n            <code-sample>\n              <template></template>\n            </code-sample>\n          </pfe-accordion-panel>\n        </pfe-accordion>\n      </div>\n    `;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`pfe-accordion {\n  --pfe-accordion--MaxWidth--content: none;\n}\n\ncode-sample {\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n}\n`;\nexport default styles;\n", "import { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { observed } from '@patternfly/pfe-core/decorators/observed.js';\nimport { PfeModal } from '@patternfly/pfe-modal';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-dialog.css';\n\n/**\n * Dialog\n */\n@customElement('rh-dialog')\nexport class RhDialog extends PfeModal {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [...PfeModal.styles, styles];\n\n  protected static closeOnOutsideClick = true;\n\n  #screenSize = new ScreenSizeController(this);\n\n  @property({ reflect: true }) type?: 'video';\n\n  @observed\n  @property({ reflect: true, type: Boolean }) open = false;\n\n  render() {\n    const { mobile } = this.#screenSize;\n    return html`\n      <div id=\"rhds-wrapper\" class=${classMap({ mobile })}>\n        ${super.render()}\n      </div>\n    `;\n  }\n\n  protected async _openChanged(oldValue?: boolean, newValue?: boolean): Promise<void> {\n    super._openChanged(oldValue, newValue);\n    if (this.type === 'video' && oldValue === true && newValue === false) {\n      this.querySelector('video')?.pause?.();\n      const iframe = this.querySelector('iframe');\n      if (iframe?.src.match(/youtube/)) {\n        const { pauseVideo } = await import('./yt-api.js');\n        pauseVideo(iframe);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-dialog': RhDialog;\n  }\n}\n", "import type { ReactiveControllerHost, ReactiveController } from 'lit';\n\nimport { bound } from '@patternfly/pfe-core/decorators/bound.js';\n\nimport {\n  desktopLargeBreakpoint,\n  desktopSmallBreakpoint,\n  tabletLandscapeBreakpoint,\n  tabletPortraitBreakpoint,\n  mobileLandscapeBreakpoint,\n  mobilePortraitBreakpoint,\n} from './tokens.js';\n\nexport type BreakpointKey =\n  | 'mobile'\n  | 'mobileXl'\n  | 'desktopLarge'\n  | 'desktopSmall'\n  | 'tabletLandscape'\n  | 'tabletPortrait'\n  | 'mobileLandscape'\n  | 'mobilePortrait'\n\nexport class ScreenSizeController implements ReactiveController {\n  static instances = new Set<ScreenSizeController>();\n\n  static queries = new Map<BreakpointKey, MediaQueryList>([\n    ['mobile', matchMedia(`screen and (max-width: ${tabletPortraitBreakpoint})`)],\n    ['mobilePortrait', matchMedia(`screen and (min-width: ${mobilePortraitBreakpoint})`)],\n    ['mobileLandscape', matchMedia(`screen and (min-width: ${mobileLandscapeBreakpoint})`)],\n    ['tabletPortrait', matchMedia(`screen and (min-width: ${tabletPortraitBreakpoint})`)],\n    ['tabletLandscape', matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint})`)],\n    ['desktopSmall', matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopSmallBreakpoint})`)],\n    ['desktopLarge', matchMedia(`screen and (min-width: ${desktopLargeBreakpoint})`)],\n  ]);\n\n  public mobile = ScreenSizeController.queries.get('mobile')?.matches ?? false;\n\n  public size: Omit<BreakpointKey, 'mobile'>;\n\n  public matches = new Set<BreakpointKey>();\n\n  private onChange?(matches: boolean): void\n\n  constructor(\n    /** reference to the host element using this controller */\n    public host: ReactiveControllerHost,\n    private breakpoint: BreakpointKey | void,\n    options?: {\n      onChange?(matches: boolean): void\n    }\n  ) {\n    this.host.addController(this);\n    this.size = 'mobilePortrait';\n    this.breakpoint = breakpoint;\n    this.onChange = options?.onChange;\n\n    for (const [key, list] of ScreenSizeController.queries) {\n      if (key !== 'mobile' && list.matches) {\n        this.size = key;\n        this.matches.add(key);\n        this.evaluate();\n      }\n    }\n  }\n\n  hostConnected() {\n    ScreenSizeController.instances.add(this);\n  }\n\n  hostDisconnected() {\n    ScreenSizeController.instances.delete(this);\n  }\n\n  /** Requests a render and calls the onChange callback */\n  @bound evaluate() {\n    this.host.requestUpdate();\n    if (this.breakpoint) {\n      this.onChange?.(this.matches.has(this.breakpoint) ?? false);\n    }\n  }\n}\n\nfor (const [key, list] of ScreenSizeController.queries) {\n  if (key === 'mobile') {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        instance.mobile = event.matches;\n        instance.evaluate();\n      }\n    });\n  } else {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        if (event.matches) {\n          instance.size = key;\n          instance.matches.add(key);\n        } else {\n          instance.matches.delete(key);\n        }\n        instance.evaluate();\n      }\n    });\n  }\n}\n", "import { unsafeCSS } from 'lit';\n\nexport const mobilePortraitBreakpoint = unsafeCSS`320px`;\nexport const mobileLandscapeBreakpoint = unsafeCSS`576px`;\nexport const tabletPortraitBreakpoint = unsafeCSS`768px`;\nexport const tabletLandscapeBreakpoint = unsafeCSS`992px`;\nexport const desktopSmallBreakpoint = unsafeCSS`1200px`;\nexport const desktopLargeBreakpoint = unsafeCSS`1368px`;\n", "import {css} from 'lit';\nexport const styles = css`#rhds-wrapper {\n  display: contents;\n  font-family: \"Red Hat Text\", RedHatText, Overpass, Helvetica, sans-serif;\n\n  --offset: var(--rh-space-md, 8px);\n  --offset-top: var(--offset);\n  --offset-right: var(--offset);\n}\n\nheader ::slotted(:is(h1, h2, h3, h4, h5, h6)[slot=\"header\"]) {\n  font-family: \"Red Hat Display\", RedHatDisplay, Overpass, Helvetica, sans-serif;\n}\n\n[part=\"dialog\"] {\n  background-color: var(--rh-color-surface-lightest, #ffffff);\n  max-width: min(90%, 1140px);\n  border-radius: var(--rh-border-radius-default, 3px);\n  color: var(--rh-color-text-primary-on-light, #151515);\n  font-family: inherit;\n}\n\n[part=\"content\"] {\n  border-radius: var(--rh-border-radius-default, 3px);\n}\n\n[part=\"close-button\"] {\n  /* NB: hardcoded, no token colour matches this (yet) */\n  color: var(--rh-dialog-close-button-color, #6a6e73);\n}\n\n[part=\"close-button\"]:is(:hover, :focus-within, :focus-visible) svg:is(svg, :hover) {\n  fill: var(--rh-color-black-900, #151515);\n}\n\n:host([type=\"video\"]) {\n  --rh-dialog-close-button-color: white;\n}\n\n:host([type=\"video\"]) [part=\"close-button\"] {\n  top: var(--offset-top);\n  right: var(--offset-right);\n  padding: var(--rh-space-sm, 6px);\n  color: var(--rh-dialog-close-button-color, #6a6e73);\n}\n\n:host([type=\"video\"]) [part=\"content\"] {\n  overflow: hidden;\n}\n\n:host([type=\"video\"][open]) [part=\"overlay\"] {\n  background-color: #151515;\n  opacity: 0.65;\n}\n\n:host([type=\"video\"][open]) [part=\"dialog\"] {\n  --_aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);\n\n  aspect-ratio: var(--_aspect-ratio);\n  max-width: min(90%, calc(90vh * var(--_aspect-ratio) + var(--offset-top)));\n  padding: 0;\n  margin: 0;\n}\n\n:host([type=\"video\"]) #rhds-wrapper.mobile [part=\"close-button\"] {\n  --offset-right: var(--rh-space-sm, 6px);\n}\n\n:host([type=\"video\"]) #container,\n:host([type=\"video\"]) [part=\"content\"],\n:host([type=\"video\"]) ::slotted(:not([slot])) {\n  aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);\n\n  /* account for a 1px descrepency between dialog and container aspect ratio */\n  width: calc(100% + 1px);\n  position: absolute;\n  inset: 0;\n  max-height: none;\n}\n`;\nexport default styles;\n", "import type { ColorPalette } from '../../lib/context/color.js';\n\nimport { LitElement, html } from 'lit';\nimport { html as staticHtml, unsafeStatic } from 'lit/static-html.js';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport style from './rh-footer.css';\nimport { responsiveStyles } from './rh-footer-responsive.css.js';\n\nimport { tabletLandscapeBreakpoint } from '../../lib/tokens.js';\nimport { colorContextProvider } from '../../lib/context/color.js';\n// TODO: use ScreenSizeController\nimport { MatchMediaController } from '../../lib/MatchMediaController.js';\n\nimport './rh-footer-social-link.js';\nimport './rh-footer-links.js';\nimport './rh-footer-block.js';\nimport './rh-global-footer.js';\n\nimport '@patternfly/pfe-icon';\nimport '@patternfly/pfe-accordion';\n\nfunction isHeader(tagName: string) {\n  return !!tagName.match(/^H[1-6]$/i);\n}\n\n/**\n * @element rh-footer\n * @csspart base - main footer element, containing all footer content\n * @slot    base - Overrides everything. Do not use.\n * @slot    header - Overrides `header-*`, `logo`, `social-links`\n * @csspart header - footer header, typically containing main logo and social links\n * @slot    header-primary - primary footer header content, e.g. main logo. Overrides `logo`\n * @csspart header-primary - primary footer header content, e.g. main logo\n * @slot    header-secondary - secondary footer header content, e.g. social links. Overrides `social-links`\n * @csspart header-secondary - secondary footer header content, e.g. social links\n * @slot    logo - main page or product logo. Defaults to Red Hat corporate logo\n * @csspart logo - main page or product logo container\n * @slot    social-links - social media links (icons). Contains a default set of links\n * @csspart social-links - social links container `<rh-footer-links>`\n * @slot    main - main footer content. Overrides `main-*`\n * @csspart main - main content container.\n * @slot    main-primary - main footer region. typically a columnar grid\n * @csspart main-primary - container for main footer links\n * @slot    links - main footer links\n * @csspart links - container for main footer links\n * @csspart links-accordion-header - mobile links accordion header element\n * @csspart links-accordion-panel - mobile links panel container element\n * @slot    main-secondary - typically contains prose or promotional content\n * @csspart main-secondary - container fro prose or promotional content\n * @slot    global - must contain `<rh-global-footer>`\n *\n * @cssprop --rh-footer-icon-color - {@default #8a8d90}\n * @cssprop --rh-footer-icon-color-hover - {@default #b8bbbe}\n * @cssprop --rh-footer-border-color - {@default #6a6e73}\n * @cssprop --rh-footer-accent-color - {@default #e00}\n * @cssprop --rh-footer-section-side-gap - {@default 32px}\n * @cssprop --rh-footer-links-gap - {@default 8px}\n * @cssprop --rh-footer-link-header-font-size - {@default 0.875em}\n * @cssprop --rh-footer-nojs-min-height - {@default 750px}\n */\nexport class RhFooter extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [style, responsiveStyles];\n\n  /**\n   * Isomorphic import.meta.url function\n   * Requires a node.js dom shim that sets window.location\n   */\n  static getImportURL(relativeLocation: string | URL): string | URL {\n    const url = new URL(relativeLocation, import.meta.url);\n    if (url.protocol === 'file:') {\n      return new URL(relativeLocation, window.location.href);\n    }\n    return url;\n  }\n\n  #matchMedia = new MatchMediaController(this, `(min-width: ${tabletLandscapeBreakpoint})`);\n\n  #logger = new Logger(this);\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: ColorPalette = 'darker';\n\n  override connectedCallback() {\n    super.connectedCallback();\n    // wire up accessbility aria-labels with unordered lists\n    this.updateAccessibility();\n  }\n\n  override render() {\n    const isMobile = !this.#matchMedia.mediaQueryList?.matches;\n    return html`\n      <footer class=\"base ${classMap({ isMobile })}\" part=\"base\">\n        <slot name=\"base\">\n          <div class=\"section header\" part=\"section header\">\n            <slot name=\"header\">\n              <div class=\"header-primary\" part=\"header-primary\">\n                <slot name=\"header-primary\">\n                  <div class=\"logo\" part=\"logo\">\n                    <slot name=\"logo\">\n                      <a href=\"/en\">\n                        <img alt=\"Red Hat\" src=\"https://static.redhat.com/libs/redhat/brand-assets/2/corp/logo--on-dark.svg\"/>\n                      </a>\n                    </slot>\n                  </div>\n                </slot>\n              </div>\n              <div class=\"header-secondary\" part=\"header-secondary\">\n                <slot name=\"header-secondary\">\n                  <div class=\"social-links\">\n                    <rh-footer-links class=\"social-links-item\"\n                      part=\"social-links\"\n                      aria-label=\"Red Hat social media links\">\n                      <slot name=\"social-links\"></slot>\n                    </rh-footer-links>\n                  </div>\n                </slot>\n              </div>\n            </slot>\n          </div>\n          <div class=\"section main\" part=\"section main\">\n            <slot name=\"main\">\n              <div class=\"main-primary\" part=\"main-primary\">\n                <slot name=\"main-primary\">\n                  <div class=\"links\" part=\"links\">\n                    ${this.#renderLinksTemplate(isMobile)}\n                  </div>\n                </slot>\n              </div>\n              <div class=\"main-secondary\" part=\"main-secondary\">\n                <slot name=\"main-secondary\"></slot>\n              </div>\n            </slot>\n          </div>\n          <slot name=\"global\"></slot>\n        </slot>\n      </footer>\n    `;\n  }\n\n  #renderLinksTemplate(isMobile = false) {\n    // gather all of the links that need to be wrapped into the accordion\n    // give them a designation of either 'header' or 'panel'\n    const children = Array.from(this.querySelectorAll(':scope > [slot^=links]'), ref => ({\n      type: isHeader(ref.tagName) ? 'header' : 'panel',\n      ref,\n    }));\n\n    // Update the dynamic slot names if on mobile\n    children.forEach(({ ref }, i) => ref.setAttribute('slot', isMobile ? `links-${i}` : 'links'));\n\n    return !(isMobile && children) ? html`\n      <slot name=\"links\"></slot>\n      ` : html`\n      <pfe-accordion on=\"dark\" color-palette=\"darkest\">${children.map((child, index) => staticHtml`\n        <pfe-accordion-${unsafeStatic(child.type)} part=\"links-accordion-${child.type}\">\n          <slot name=\"links-${index}\"></slot>\n         </pfe-accordion-${unsafeStatic(child.type)}>`)}\n      </pfe-accordion>\n    `;\n  }\n\n  /**\n   * Get any `<ul>`s that are in the designated link slots\n   * and syncronously update each list and header if we need to.\n   */\n  public updateAccessibility(): void {\n    const listsSelector = ':is([slot^=links],[slot=footer-links-primary],[slot=footer-links-secondary]):is(ul)';\n    for (const list of this.querySelectorAll(listsSelector)) {\n      // if we already have a label then we assume that the user\n      // has wired this up themselves.\n      if (!list.hasAttribute('aria-labelledby')) {\n        // get the corresponding header that should be the previous sibling\n        const header = isHeader(list.previousElementSibling?.tagName ?? '') ? list.previousElementSibling : null;\n        if (!header) {\n          return this.#logger.warn('This links set doesn\\'t have a valid header associated with it.');\n        } else {\n          // add an ID to the header if we need it\n          header.id ||= getRandomId('rh-footer');\n          // add that header id to the aria-labelledby tagk\n          list.setAttribute('aria-labelledby', header.id);\n        }\n      }\n    }\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  /* apply sensible defaults based on redhat standards. */\n  color: var(--rh-color-white, #ffffff);\n  font-family: var(--rh-font-family-body-text, RedHatText, \"Red Hat Text\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif) !important;\n  line-height: var(--rh-line-height-body-text, 1.5);\n  font-weight: var(--_font-weight);\n  font-size: initial;\n  display: flex;\n  flex-direction: column;\n}\n\nfooter,\n.global-base {\n  --_icon-color: var(--rh-footer-icon-color, var(--rh-color-black-500, #8a8d90));\n  --_icon-color-hover: var(--rh-footer-icon-color-hover, var(--rh-color-black-400, #b8bbbe));\n  --_border-color: var(--rh-footer-border-color, var(--rh-color-black-600, #6a6e73));\n  --_accent-color: var(--rh-footer-accent-color, var(--rh-color-brand-red-on-light, #ee0000));\n  --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));\n  --_accordion-background: var(--rh-color-white, #ffffff);\n  --_logo-width: var(--rh-size-icon-04, 40px);\n  --_font-weight: var(--rh-font-weight-body-text-regular, 400);\n\n  /* Style Accordions */\n  --pfe-accordion--Color: var(--_accordion-background);\n  --pfe-accordion--Color--expanded: var(--_accordion-background);\n  --pfe-accordion--Color--active: var(--_accordion-background);\n  --pfe-accordion--BackgroundColor: transparent;\n  --pfe-accordion--BackgroundColor--active: transparent;\n  --pfe-accordion--BackgroundColor--expanded: var(--rh-color-surface-darkest, #151515);\n  --pfe-accordion--BorderColor: var(--_border-color);\n  --pfe-accordion--FontSize--header: initial;\n  --pfe-accordion--FontWeight--header: var(--_font-weight);\n  --pfe-accordion--accent--expanded: var(--_accent-color);\n  --pfe-accordion--accent--active: var(--_accent-color);\n}\n\npfe-accordion {\n  --pfe-context-background-color: transparent;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n::slotted(:is(h1,h2,h3,h4,h5,h6)) {\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif) !important;\n}\n\n/**\n * Debugging\n */\n:host([debug]) *:not(.spacer, .base, a, svg) {\n  /* make sure we have some */\n  min-height: var(--rh-length-xl, 24px);\n  position: relative;\n  outline: var(--rh-length-3xs, 2px) dotted red;\n}\n\n:host([debug]) *:not(.spacer, .base, a, svg):after {\n  content: attr(part);\n  display: block;\n  position: absolute;\n  color: white;\n  background-color: darkslategray;\n  padding: var(--rh-space-xs, 4px);\n  top: 0;\n  right: 0;\n  font-family: var(--rh-font-family-code, RedHatMono, \"Red Hat Mono\", \"Courier New\", Courier, monospace);\n  font-size: var(--rh-font-size-code-xs, 0.75rem);\n}\n\n/**\n * Regions\n */\n.section {\n  padding: var(--rh-space-2xl, 32px) var(--_section-side-gap);\n}\n\n.header {\n  background-color: var(--rh-color-surface-darker, #212427);\n\n  /* children should flex wrap on mobile */\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--rh-space-2xl, 32px);\n  align-items: center;\n  position: relative;\n}\n\n.header:after {\n  display: block;\n  content: \"\";\n  background-color: var(--_border-color);\n  height: var(--rh-length-4xs, 1px);\n  position: absolute;\n  bottom: 0;\n  width: calc(100% - var(--_section-side-gap) * 2);\n  left: var(--_section-side-gap);\n}\n\n.header-primary {\n  flex: 1 1 auto;\n}\n\n.header-secondary {\n  /* secondary should be push to the end */\n\n  /* of the line on mobile */\n  flex: 0 1 auto;\n}\n\n.main {\n  background-color: var(--rh-color-surface-darker, #212427);\n  display: grid;\n  gap: var(--rh-space-2xl, 32px);\n}\n\n.main-secondary {\n  display: grid;\n  gap: var(--pf-global--spacer--xl, 32px);\n  place-items: baseline;\n  place-content: start;\n}\n\n.global-base {\n  --rh-footer-link-font-size: var(--rh-font-size-body-text-xs, 0.75rem);\n\n  /* reduce the line-height for global links */\n  line-height: 100%;\n  background-color: var(--rh-color-surface-darkest, #151515);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    \"logo\"\n    \"primary\"\n    \"spacer\"\n    \"secondary\"\n    \"tertiary\";\n  gap: var(--rh-space-2xl, 32px) var(--rh-space-xl, 24px);\n}\n\n.global-logo {\n  grid-area: logo;\n  width: var(--_logo-width);\n}\n\n.global-logo-image {\n  fill: var(--_icon-color);\n}\n\n.global-logo-image:is(:hover, :focus-within) {\n  fill: var(--_icon-color-hover);\n}\n\n.global-primary {\n  grid-area: primary;\n}\n\n.global-secondary {\n  grid-area: secondary;\n  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);\n  display: flex;\n  flex-direction: column;\n  gap: var(--rh-space-lg, 16px);\n  justify-content: space-between;\n}\n\n.global-tertiary {\n  grid-area: tertiary;\n  display: grid;\n  justify-content: start;\n  align-items: start;\n}\n\n.global-links-primary {\n  display: flex;\n  flex-direction: column;\n  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);\n}\n\n.global-links-secondary {\n  display: flex;\n  flex-direction: column;\n  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);\n}\n\n/* reduce the font size of the content in these regions */\n:is(.global-primary, .global-secondary, .global-tertiary) ::slotted(*) {\n  font-size: var(--rh-font-size-body-text-xs, 0.75rem);\n}\n\n.logo {\n  /* fix wierd problem where there is extra space below logo */\n  line-height: 0px;\n}\n\n.social-links {\n  display: flex;\n  margin-inline-start: 0;\n  padding-inline-start: 0;\n}\n\n.social-links rh-footer-links,\n.social-links slot::slotted(rh-footer-links) {\n  display: flex;\n  flex-direction: row;\n  gap: var(--rh-space-xl, 24px);\n}\n\n:is(.links, .global-links-primary, .global-links-secondary) ::slotted(ul) {\n  padding: 0;\n  margin: 0;\n  display: contents;\n}\n\n.isMobile .links {\n  --rh-footer-link-header-font-size: var(--rh-font-size-body-text-lg, 1.125rem);\n}\n\n.isMobile .links ::slotted(ul) {\n  --rh-footer-link-font-size: 1em;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: calc(var(--rh-space-2xl, 32px) / 2);\n}\n\n[part=\"base\"]:not(.isMobile) .links {\n  display: grid;\n  grid-template-columns: repeat(1fr, 25%);\n  grid-template-rows: repeat(1, min-content auto);\n  grid-auto-columns: minmax(0, 1fr);\n  row-gap: var(--rh-space-lg, 16px);\n  column-gap: var(--rh-space-2xl, 32px);\n  grid-auto-flow: column;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(1)) {\n  grid-column: 1/2;\n  grid-row: 1/2;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(2)) {\n  grid-column: 2/3;\n  grid-row: 1/2;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(3)) {\n  grid-column: 3/4;\n  grid-row: 1/2;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(4)) {\n  grid-column: 4/5;\n  grid-row: 1/2;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(5)) {\n  grid-column: 1/2;\n  grid-row: 3/4;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(6)) {\n  grid-column: 2/3;\n  grid-row: 3/4;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(7)) {\n  grid-column: 3/4;\n  grid-row: 3/4;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(8)) {\n  grid-column: 4/5;\n  grid-row: 3/4;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(1))) {\n  grid-column: 1/2;\n  grid-row: 2/3;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(2))) {\n  grid-column: 2/3;\n  grid-row: 2/3;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(3))) {\n  grid-column: 3/4;\n  grid-row: 2/3;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(4))) {\n  grid-column: 4/5;\n  grid-row: 2/3;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(5))) {\n  grid-column: 1/2;\n  grid-row: 4/5;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(6))) {\n  grid-column: 2/3;\n  grid-row: 4/5;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(7))) {\n  grid-column: 3/4;\n  grid-row: 4/5;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(8))) {\n  grid-column: 4/5;\n  grid-row: 4/5;\n}\n\n[part=\"base\"]:not(.isMobile) .links ::slotted(ul) {\n  gap: var(--rh-footer-links-gap, var(--rh-space-lg, 16px));\n  display: flex;\n  flex-direction: column;\n}\n\n#footer-logo {\n  width: var(--_logo-width);\n}\n\n:is(.links, .global-links-primary, .global-links-secondary) ::slotted(:is(h1, h2, h3, h4, h5)) {\n  font-weight: var(--rh-font-weight-heading-medium, 500) !important;\n  margin-block: 0 !important;\n  margin-block-start: var(--_link-header-margin, 0) !important;\n  font-size:\n    var(\n      --rh-footer-link-header-font-size,\n      var(--rh-font-size-body-text-sm, 0.875rem)\n    ) !important;\n  color: var(--rh-color-white, #ffffff) !important; \n}\n`;\nexport default styles;\n", "import { css } from 'lit';\n\nimport {\n  mobilePortraitBreakpoint,\n  mobileLandscapeBreakpoint,\n  tabletPortraitBreakpoint,\n  tabletLandscapeBreakpoint,\n  desktopLargeBreakpoint,\n} from '../../lib/tokens.js';\n\nexport const responsiveStyles = css`\n  @media screen and (min-width: ${tabletPortraitBreakpoint}) {\n    .global-base {\n      grid-template-columns: 4fr 4fr 4fr;\n      grid-template-areas:\n        'logo      logo      logo'\n        'primary   primary   primary'\n        'spacer    spacer    spacer'\n        'secondary secondary secondary';\n    }\n    .global-base:is(.hasTertiary) {\n      grid-template-columns: 4fr 4fr 4fr;\n      grid-template-areas:\n        'logo      logo      logo'\n        'primary   primary   primary'\n        'spacer    spacer    spacer'\n        'secondary secondary tertiary';\n    }\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {\n    /* :not(.nothing) is a hack to match CSS specificity with :is(.hasTertiary) */\n    .global-base:not(.nothing) {\n      grid-template-columns: auto 10fr 2fr;\n      grid-template-rows: max-content max-content;\n      grid-template-areas:\n        'logo primary  tertiary'\n        'logo secondary tertiary';\n      gap: 24px 32px;\n    }\n\n    .global-primary {\n      display: flex;\n    }\n\n    .main {\n      padding-bottom: 64px;\n    }\n  }\n\n  .spacer {\n    grid-area: spacer;\n    border-bottom: 1px solid var(--_border-color);\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {\n    .spacer {\n      display: none;\n    }\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {\n    .global-tertiary {\n      display: grid;\n      justify-content: flex-end;\n      align-items: center;\n    }\n  }\n\n  @media screen and (min-width: ${mobilePortraitBreakpoint}) {\n    .global-links-primary {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    }\n    .global-links-secondary {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media screen and (min-width: ${tabletPortraitBreakpoint}) {\n    .global-links-primary {\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n\n    .global-links-secondary {\n      display: grid;\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n\n    .hasTertiary .global-links-secondary {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {\n    .global-links-primary {\n      display: flex;\n      flex-flow: row wrap;\n      align-items: center;\n    }\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {\n    :not(.hasTertiary) .global-links-secondary {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      gap: 8px 24px;\n    }\n  }\n\n  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {\n    .global-logo {\n      grid-area: logo;\n    }\n\n    .global-primary {\n      grid-area: primary;\n    }\n  }\n\n  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {\n    /* Equalize padding on mobile */\n    .section {\n      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));\n    }\n\n    /* hide the header border on mobile */\n    .header:after {\n      display: none;\n    }\n\n    /* force the mobile links menu to go flush against the header */\n    .main {\n      padding-top: 0;\n    }\n  }\n\n  @media screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopLargeBreakpoint}) {\n    /* Equalize padding on mobile */\n    .section {\n      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));\n    }\n\n    .header,\n    .main {\n      /* switch header to use grid instead */\n      display: grid;\n      grid-template-columns: 8fr 4fr;\n    }\n  }\n\n  @media screen and (min-width: ${desktopLargeBreakpoint}) {\n    .section {\n      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));\n    }\n\n    .header,\n    .main {\n      /* switch header to use grid instead */\n      display: grid;\n      grid-template-columns: 8fr 4fr;\n    }\n  }\n\n  @media screen and (min-width: ${tabletPortraitBreakpoint}) {\n    .isMobile .links ::slotted(ul) {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n`;\n", "import type { ReactiveControllerHost, ReactiveController } from 'lit';\n\nimport { bound } from '@patternfly/pfe-core/decorators/bound.js';\n\nexport class MatchMediaController implements ReactiveController {\n  /**\n   * The matchMedia result\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n   */\n  public mediaQueryList: MediaQueryList | null = null;\n\n  private onChange?(list: MediaQueryList): void\n\n  constructor(\n    /** reference to the host element using this controller */\n    public host: ReactiveControllerHost & Element,\n    private mediaQuery = '',\n    options?: {\n      onChange?(list: MediaQueryList): void\n    }\n  ) {\n    this.host.addController(this);\n    this.mediaQueryList = matchMedia(mediaQuery);\n    this.onChange = options?.onChange;\n  }\n\n  hostConnected() {\n    this.evaluate();\n    this.mediaQueryList?.addEventListener('change', this.evaluate);\n  }\n\n  hostDisconnected() {\n    this.mediaQueryList?.removeEventListener('change', this.evaluate);\n  }\n\n  /** Requests a render and calls the onChange callback */\n  @bound evaluate() {\n    this.host.requestUpdate();\n    this.onChange?.(this.mediaQueryList ?? matchMedia(this.mediaQuery));\n  }\n}\n", "import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport style from './rh-footer-social-link.css';\n\n@customElement('rh-footer-social-link')\nexport class RhFooterSocialLink extends LitElement {\n  static readonly styles = style;\n\n  private logger = new Logger(this);\n\n  @property() icon: string | null = null;\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'listitem');\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  updated() {\n    this.updateLightdom();\n  }\n\n  private updateLightdom() {\n    const oldDiv = this.querySelector('a');\n    if (oldDiv) {\n      const newDiv = oldDiv.cloneNode(true) as Element;\n      // remove the _rendered content\n      newDiv.querySelectorAll('[_rendered]').forEach(i => i.remove());\n      newDiv.innerHTML = `<pfe-icon icon=\"${this.icon}\">${newDiv.innerHTML}</pfe-icon>`;\n      // add a11y settings\n      /** @todo add logging that warns the user there is an empty label */\n      newDiv.setAttribute('aria-label', newDiv.textContent || '');\n      if (!newDiv.getAttribute('aria-label')) {\n        this.logger.warn('Must add aria-label to links');\n      }\n      if (oldDiv.parentNode) {\n        oldDiv.parentNode.replaceChild(newDiv, oldDiv);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-social-link': RhFooterSocialLink;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n\n  --pfe-icon--color: var(--_icon-color);\n  --pfe-icon--size: var(--rh-footer--social-icon--size, var(--rh-size-icon-02, 24px));\n}\n\n:host(:is(:hover, :focus-within)) {\n  --pfe-icon--color: var(--_icon-color-hover);\n}\n`;\nexport default styles;\n", "import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { initializer } from '@patternfly/pfe-core/decorators.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport style from './rh-footer-links.css';\n\n@customElement('rh-footer-links')\nexport class RhFooterLinks extends LitElement {\n  static readonly styles = style;\n\n  /**\n   * Visibily hide the header slot. Setting this to true will not affect\n   * aria-labelledby.\n   */\n  @property({ type: Boolean, attribute: 'header-hidden', reflect: true }) public headerHidden = false;\n\n  private logger = new Logger(this);\n\n  protected slots = new SlotController(this, {\n    slots: ['header'],\n  });\n\n  @initializer()\n  public updateAccessibility() {\n    // ensure we've rendered to our shadowroot\n    const header = this.querySelector('[slot=\"header\"]');\n    const ul = this.querySelector('ul');\n    if (header && ul) {\n      // ensure there is an id on the header slot\n      header.id ||= getRandomId('rh-footer-links');\n      ul.setAttribute('aria-labelledby', header.id);\n    } else {\n      this.logger.warn('This links set doesn\\'t have a valid header associated with it.');\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"header\" class=\"header\">\n        <slot name=\"header\"></slot>\n      </div>\n      <div part=\"default\" class=\"default\">\n        <slot name=\"panel\"></slot>\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-links': RhFooterLinks;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: flex;\n  flex-direction: column;\n  gap: 0.625em;\n}\n\n[part] {\n  display: contents;\n}\n\n::slotted(:is(h1, h2, h3, h4, h5)) {\n  font-weight: 500;\n  font-size: 0.875em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host([header-hidden]) .header ::slotted(*) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n`;\nexport default styles;\n", "import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport style from './rh-footer-block.css';\n\n@customElement('rh-footer-block')\nexport class RhFooterBlock extends LitElement {\n  static readonly styles = style;\n\n  render() {\n    return html`\n      <div class=\"base\" part=\"base\">\n        <div class=\"header\" part=\"header\">\n          <slot name=\"header\"></slot>\n        </div>\n        <div class=\"content\" part=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-block': RhFooterBlock;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n  position: relative;\n}\n\n/** Add margin to blocks that aren't first in the sidebar. */\n\n/** Add the separator to blocks in the middle */\n:host(:not(:last-of-type, :first-of-type)):after {\n  content: \"\";\n  display: block;\n  height: 1px;\n  width: 100%;\n  margin-block-start: var(--rh-space-2xl, 32px);\n  background: var(--_border-color);\n}\n\n::slotted(*) {\n  color: var(--rh-color-text-primary-on-dark, #ffffff);\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem);\n  text-decoration: none;\n  max-width: 650px;\n}\n\n::slotted(:is(h1, h2, h3, h4, h5)) {\n  font-weight: var(--rh-font-weight-heading-medium, 500) !important;\n  font-size: var(--rh-font-size-body-text-sm, 0.875rem) !important;\n  margin-block: 0 var(--rh-space-lg, 16px) !important;\n  color: var(--rh-color-white, #ffffff) !important; \n}\n\n::slotted(:last-child) {\n  margin-block-end: 0 !important;\n}\n\n.content ::slotted(*) {\n  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);\n  font-family: var(--rh-font-family-body-text, RedHatText, \"Red Hat Text\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  font-weight: var(--rh-font-weight-body-text-regular, 400);\n}\n`;\nexport default styles;\n", "import { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\nimport type { ColorPalette } from '../../lib/context/color.js';\n\nimport { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextProvider } from '../../lib/context/color.js';\n\nimport style from './rh-footer.css';\nimport { responsiveStyles } from './rh-footer-responsive.css.js';\n\nimport './rh-footer-copyright.js';\n\n/**\n * @csspart base\n * @csspart base\n * @slot    logo\n * @csspart logo\n * @slot    logo-image\n * @csspart logo-image\n * @slot    primary\n * @csspart primary\n * @slot    primary-start\n * @csspart primary-start\n * @slot    primary-end\n * @csspart primary-end\n * @slot    secondary\n * @csspart secondary\n * @slot    secondary-start\n * @csspart secondary-start\n * @slot    secondary-end\n * @csspart secondary-end\n * @slot    links-primary\n * @csspart links-primary\n * @slot    links-secondary\n * @csspart links-secondary\n * @slot    tertiary\n * @csspart tertiary\n */\n@customElement('rh-global-footer')\nexport class RhGlobalFooter extends LitElement {\n  static readonly styles = [style, responsiveStyles];\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: ColorPalette = 'darker';\n\n  #slots = new SlotController(this, {\n    slots: ['primary-start', 'primary-end', 'secondary-start', 'secondary-end', 'links-primary', 'links-secondary', 'tertiary']\n  });\n\n  override render() {\n    const hasTertiary = this.#slots.hasSlotted('tertiary');\n    return html`\n      <div class=\"section global-base ${classMap({ hasTertiary })}\" part=\"section base\">\n        <slot name=\"base\">\n          <div class=\"global-logo\" part=\"logo\">\n            <slot name=\"logo\">\n              <a class=\"global-logo-anchor\"\n                  part=\"logo-anchor\"\n                  href=\"/en\"\n                  alt=\"Visit Red Hat\">\n                <svg title=\"Red Hat logo\"\n                    class=\"global-logo-image\"\n                    part=\"logo-image\"\n                    data-name=\"Layer 1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 192 145\">\n                  <defs>\n                    <style>\n                      .band {\n                        fill: transparent;\n                      }\n                    </style>\n                  </defs>\n                  <path class=\"band\" d=\"M157.77,62.61a14,14,0,0,1,.31,3.42c0,14.88-18.1,17.46-30.61,17.46C78.83,83.49,42.53,53.26,42.53,44a6.43,6.43,0,0,1,.22-1.94l-3.66,9.06a18.45,18.45,0,0,0-1.51,7.33c0,18.11,41,45.48,87.74,45.48,20.69,0,36.43-7.76,36.43-21.77,0-1.08,0-1.94-1.73-10.13Z\" />\n                  <path class=\"cls-1\" d=\"M127.47,83.49c12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42l-7.45-32.36c-1.72-7.12-3.23-10.35-15.73-16.6C124.89,8.69,103.76.5,97.51.5,91.69.5,90,8,83.06,8c-6.68,0-11.64-5.6-17.89-5.6-6,0-9.91,4.09-12.93,12.5,0,0-8.41,23.72-9.49,27.16A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33C22.27,52,.5,55,.5,74.22c0,31.48,74.59,70.28,133.65,70.28,45.28,0,56.7-20.48,56.7-36.65,0-12.72-11-27.16-30.83-35.78\" />\n                </svg>\n              </a>\n            </slot>\n          </div>\n          <div class=\"global-primary\" part=\"primary\">\n            <slot name=\"primary\">\n              <div class=\"global-primary-start\" part=\"primary-start\" ?hidden=${!this.#slots.hasSlotted('primary-start')}>\n                <slot name=\"primary-start\"></slot>\n              </div>\n              <div class=\"global-links-primary\" part=\"links-primary\" ?hidden=${!this.#slots.hasSlotted('links-primary')}>\n                <slot name=\"links-primary\"></slot>\n              </div>\n              <div class=\"global-primary-end\" part=\"primary-end\" ?hidden=${!this.#slots.hasSlotted('primary-end')}>\n                <slot name=\"primary-end\"></slot>\n              </div>\n            </slot>\n          </div>\n          <div class=\"spacer\" part=\"spacer\"></div>\n          <div class=\"global-secondary\" part=\"secondary\">\n            <slot name=\"secondary\">\n              <div class=\"global-secondary-start\" part=\"secondary-start\" ?hidden=${!this.#slots.hasSlotted('secondary-start')}>\n                <slot name=\"secondary-start\"></slot>\n              </div>\n              <div class=\"global-links-secondary\" part=\"links-secondary\" ?hidden=${!this.#slots.hasSlotted('links-secondary')}>\n                <slot name=\"links-secondary\"></slot>\n              </div>\n              <div class=\"global-secondary-end\" part=\"secondary-end\" ?hidden=${!this.#slots.hasSlotted('secondary-end')}>\n                <slot name=\"secondary-end\"></slot>\n              </div>\n            </slot>\n          </div>\n          <div class=\"global-tertiary\" part=\"tertiary\" ?hidden=${!this.#slots.hasSlotted('tertiary')}>\n            <slot name=\"tertiary\"></slot>\n          </div>\n        </slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-global-footer': RhGlobalFooter;\n  }\n}\n", "import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport style from './rh-footer-copyright.css';\n\nconst currentYear = new Date().getFullYear();\n\n@customElement('rh-footer-copyright')\nexport class RhFooterCopyright extends LitElement {\n  static readonly styles = style;\n\n  render() {\n    return html`<slot>&copy; ${currentYear} Red Hat, Inc.</slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-copyright': RhFooterCopyright;\n  }\n}\n\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  flex: 1 1 auto;\n  display: block;\n  width: 100%;\n}\n`;\nexport default styles;\n", "import { RhFooter } from './RhFooter.js';\n\ncustomElements.define('rh-footer', RhFooter);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer': RhFooter;\n  }\n}\n", "import type { PropertyValues } from 'lit';\n\nimport { LitElement, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-pagination.css';\n\nconst L1 = html`\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 9 14\">\n    <path d=\"M.3 6.26 6.24.3C6.63-.1 7.3-.1 7.7.3l.99.99c.4.4.4 1.07 0 1.48L4.49 7l4.2 4.22c.41.4.41 1.07 0 1.48l-.98 1c-.41.4-1.07.4-1.48 0L.31 7.73a1.05 1.05 0 0 1 0-1.48Z\"/>\n  </svg>`;\n\nconst L2 = html`\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 17.44 14\">\n    <path d=\"M8.7 6.26 14.66.3a1.05 1.05 0 0 1 1.49 0l.98.99c.42.4.42 1.07 0 1.48L12.92 7l4.2 4.22c.42.4.42 1.07 0 1.48l-.98 1c-.41.4-1.08.4-1.48 0L8.7 7.73a1.05 1.05 0 0 1 0-1.48zM.3 7.74l5.96 5.95c.4.41 1.07.41 1.48 0l.99-.99c.4-.4.4-1.07 0-1.48L4.52 7l4.21-4.22c.41-.4.41-1.07 0-1.48l-.99-1a1.05 1.05 0 0 0-1.48 0L.31 6.27a1.05 1.05 0 0 0 0 1.48z\"/>\n  </svg>`;\n\n/**\n * Pagination\n * @slot - Place element content here\n */\n@customElement('rh-pagination')\nexport class RhPagination extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  /**\n   * Override `overflow` values set from HTML or JS.\n   * `overflow` should ideally be private, but because\n   * we can't do `::slotted(nav ol li)`, we need to reflect\n   * it to a host attribute, so that lightdom CSS can target\n   * the list items.\n   */\n  @property({ reflect: true }) overflow: 'start' | 'end' | 'both' | null = null;\n\n  /** Accessible label for the 'nav' element */\n  @property() label = 'Page navigation';\n\n  /** Accessible label for the 'first page' button */\n  @property({ attribute: 'label-first' }) labelFirst = 'first page';\n\n  /** Accessible label for the 'previous page' button */\n  @property({ attribute: 'label-previous' }) labelPrevious = 'previous page';\n\n  /** Accessible label for the 'next page' button */\n  @property({ attribute: 'label-next' }) labelNext = 'next page';\n\n  /** Accessible label for the 'last page' button */\n  @property({ attribute: 'label-last' }) labelLast = 'last page';\n\n  @query('input') private input?: HTMLInputElement;\n\n  #mo = new MutationObserver(() => this.#update());\n  #screen = new ScreenSizeController(this);\n  #logger = new Logger(this);\n\n  #ol = this.querySelector('ol');\n  #links = this.#ol?.querySelectorAll<HTMLAnchorElement>('li a');\n\n  #firstLink: HTMLAnchorElement | null = null;\n  #lastLink: HTMLAnchorElement | null = null;\n  #nextLink: HTMLAnchorElement | null = null;\n  #prevLink: HTMLAnchorElement | null = null;\n  #currentLink = this.#getCurrentLink();\n  #currentIndex = 0;\n  get #currentPage() {\n    return this.#currentIndex + 1;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.#mo.observe(this, { childList: true, subtree: true });\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.#mo.disconnect();\n  }\n\n  update(changed: PropertyValues<this>): void {\n    this.#update();\n    super.update(changed);\n  }\n\n  render() {\n    const { mobile, size } = this.#screen;\n    const { label, labelFirst, labelPrevious, labelNext, labelLast } = this;\n    const firstHref = this.#currentLink === this.#firstLink ? undefined : this.#firstLink?.href;\n    const prevHref = this.#prevLink?.href;\n    const nextHref = this.#nextLink?.href;\n    const lastHref = this.#currentLink === this.#lastLink ? undefined : this.#lastLink?.href;\n    const currentPage = this.#currentPage.toString();\n    return html`\n      <div id=\"container\" class=${classMap({ mobile, [size as string]: true })}>\n        <a id=\"first\" class=\"stepper\" href=${ifDefined(firstHref)} ?inert=${!firstHref} aria-label=${labelFirst}>${L2}</a>\n        <a id=\"prev\" class=\"stepper\" href=${ifDefined(prevHref)} ?inert=${!prevHref} aria-label=${labelPrevious}>${L1}</a>\n\n        <nav ?hidden=${mobile} ?inert=${mobile} aria-label=${label}>\n          <slot></slot>\n        </nav>\n\n        <a id=\"next\" class=\"stepper\" href=${ifDefined(nextHref)} ?inert=${!nextHref} aria-label=${labelNext}>${L1}</a>\n        <a id=\"last\" class=\"stepper\" href=${ifDefined(lastHref)} ?inert=${!lastHref} aria-label=${labelLast}>${L2}</a>\n\n        <div id=\"numeric\">\n          <span id=\"go-to-page\">\n            <slot name=\"go-to-page\">Go to page</slot>\n          </span>\n          <input inputmode=\"numeric\"\n              required\n              min=1 max=${this.#links?.length ?? 1}\n              aria-labelledby=\"go-to-page\"\n              @change=${this.#onChange}\n              @keyup=${this.#onKeyup}\n              .value=${currentPage}>\n          <slot name=\"out-of\">of</slot>\n          <a href=${ifDefined(lastHref)}>${this.#links?.length}</a>\n        </div>\n      </div>\n    `;\n  }\n\n  #update() {\n    this.querySelector('[aria-current=\"page\"]')?.removeAttribute('aria-current');\n    this.#updateLightDOMRefs();\n    this.overflow = this.#getOverflow();\n    this.#checkValidity();\n  }\n\n  #getOverflow(): 'start' | 'end' | 'both' | null {\n    const overflowAt = 9;\n    const length = this.#links?.length ?? 0;\n    if (length <= overflowAt) {\n      return null;\n    }\n\n    const current = this.#currentIndex + 1;\n\n    if (current > (overflowAt - 4) && current < (length - 4)) {\n      return 'both';\n    } else if (current <= (overflowAt - 4)) {\n      return 'end';\n    } else {\n      return 'start';\n    }\n  }\n\n  #getCurrentLink(): HTMLAnchorElement | null {\n    const ariaCurrent = this.querySelector<HTMLAnchorElement>('li a[aria-current=\"page\"]');\n    if (ariaCurrent) {\n      return ariaCurrent;\n    }\n    for (const link of this.#links ?? []) {\n      const url = new URL(link.href);\n      if (url.pathname === location.pathname && url.search === location.search && url.hash === location.hash) {\n        return link;\n      }\n    }\n    this.#logger.warn('could not determine current link');\n    return null;\n  }\n\n  #updateLightDOMRefs(): void {\n    // NB: order of operations! must set up state\n    this.#ol = this.querySelector('ol');\n    this.#links = this.querySelectorAll('li a');\n    this.#firstLink = this.querySelector('li:first-child a');\n    this.#lastLink = this.querySelector('li:last-child a');\n    this.#currentLink = this.#getCurrentLink();\n    if (this.#currentLink) {\n      const links = Array.from(this.#links);\n      this.#currentIndex = links.indexOf(this.#currentLink);\n      this.#prevLink = this.#links[this.#currentIndex - 1];\n      this.#nextLink = this.#links[this.#currentIndex + 1];\n      for (const link of this.querySelectorAll('[data-page]')) {\n        link.removeAttribute('data-page');\n      }\n      this.#currentLink.closest('li')?.setAttribute('data-page', 'current');\n      this.#prevLink?.closest('li')?.setAttribute('data-page', 'previous');\n      this.#nextLink?.closest('li')?.setAttribute('data-page', 'next');\n      if (this.#currentLink?.getAttribute('aria-current') !== 'page') {\n        this.#currentLink?.setAttribute('aria-current', 'page');\n      }\n    }\n  }\n\n  #checkValidity(): boolean {\n    let message = '';\n    // Validate DOM\n    if (!this.#ol || this.children.length > 1) {\n      message = 'must have a single <ol> element as it\\'s only child';\n    }\n    // Validate user input\n    if (this.input && this.#links) {\n      if (Number.isNaN(this.#currentPage)) {\n        message = `${this.#currentPage} is not a valid page number`;\n      } else if (this.#currentPage > this.#links.length || this.#currentPage < 1) {\n        message = `cannot navigate to page ${this.#currentPage}`;\n      }\n      this.input.setCustomValidity(message);\n    }\n    if (message) {\n      this.#logger.warn(this.input?.validationMessage || 'could not navigate');\n    }\n    this.input?.reportValidity();\n    return !message;\n  }\n\n  /**\n   * 1. Normalize the element state\n   * 2. validate and act on the input\n   * 3. update the element in case a full browser navigation was prevented (e.g. SPA routing)\n   */\n  async #go(id: 'first'|'prev'|'next'|'last'|number) {\n    await this.updateComplete;\n    if (typeof id === 'number') {\n      const link = this.#links?.[id - 1];\n      link?.click?.();\n    } else {\n      this.shadowRoot?.getElementById(id)?.click();\n    }\n    this.requestUpdate();\n    await this.updateComplete;\n    return this.#currentIndex;\n  }\n\n  #onKeyup(event: Event) {\n    if (!(event.target instanceof HTMLInputElement) || !this.#links) { return; }\n    const max = this.#links.length.toString();\n    const input = event.target;\n    if (parseInt(input.value) > parseInt(max)) {\n      input.value = max;\n    }\n  }\n\n  #onChange() {\n    if (!this.input || !this.#links) { return; }\n    const inputNum = parseInt(this.input.value);\n    this.#currentIndex = inputNum - 1;\n    if (this.#checkValidity()) {\n      this.#go(this.#currentPage);\n    }\n  }\n\n  /** Navigate to the first page */\n  first() {\n    return this.#go('first');\n  }\n\n  /** Navigate to the previous page */\n  prev() {\n    return this.#go('prev');\n  }\n\n  /** Navigate to the next page */\n  next() {\n    return this.#go('next');\n  }\n\n  /** Navigate to the last page */\n  last() {\n    return this.#go('last');\n  }\n\n  /** Navigate to a specific page */\n  go(page: 'first'|'prev'|'next'|'last'|number) {\n    return this.#go(page);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-pagination': RhPagination;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n  min-height: 4em;\n}\n\n[hidden] {\n  display: none !important;\n}\n\n#container {\n  display: flex;\n  gap: calc(var(--rh-space-xs, 4px) / 2);\n  flex-wrap: wrap;\n}\n\nnav {\n  display: contents;\n}\n\nsvg {\n  fill: currentcolor;\n}\n\n.stepper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 50px;\n  background: var(--rh-color-surface-light, #f0f0f0);\n  outline: none;\n  color: var(--rh-pagination-stepper-color, var(--rh-color-black-600, #6a6e73));\n  box-sizing: border-box;\n}\n\n.stepper:focus {\n  border: 2px solid var(--rh-color-border-interactive-on-light, #0066cc);\n}\n\n.stepper svg {\n  height: 14px;\n}\n\n:is(#next, #last) svg {\n  rotate: 180deg;\n}\n\n.stepper[inert] {\n  pointer-events: none;\n  color: var(--rh-pagination-background-focused, var(--rh-color-black-300, #d2d2d2));\n}\n\n/* MOBILE styles */\n\n.mobile .stepper:hover {\n  background: var(--rh-color-black-300, #d2d2d2);\n}\n\n#numeric {\n  margin-block-start: var(--rh-space-2xl, 32px);\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex: 1 1 100%;\n  gap: 0.5em;\n}\n\ninput {\n  height: var(--rh-length-2xl, 32px);\n  width: var(--rh-length-4xl, 64px);\n  font-size: var(--rh-font-size-body-text-md, 1rem);\n  background: var(--rh-color-surface-lightest, #ffffff);\n  border: 1px solid var(--rh-color-black-300, #d2d2d2);\n  border-block-end: 1px solid var(--rh-color-black-600, #6a6e73);\n  box-sizing: border-box;\n  padding: 2px;\n}\n\ninput:focus {\n  outline: none;\n  border: 2px solid var(--rh-pagination-accent-color, var(--rh-color-interactive-blue, #0066cc));\n  padding: 1px;\n}\n\ninput:invalid {\n  border-block-end: 1px solid var(--rh-color-border-danger-on-light, #ee0000);\n}\n\n:host([on=\"dark\"]) input:invalid {\n  border-block-end: 1px solid var(--rh-color-border-danger-on-dark, #ff3333);\n}\n\n#numeric a {\n  text-decoration: none;\n  color: var(--rh-color-interactive-blue-darker, #0066cc);\n}\n\n#numeric a:hover {\n  color: var(--rh-color-interactive-blue-darkest, #004080);\n}\n\n#numeric a:visited {\n  color: var(--rh-color-interactive-purple-darker, #6753ac);\n}\n\n#numeric a:visited:hover {\n  color: var(--rh-color-interactive-purple-darkest, #1f0066);\n}\n\n@media (min-width: 700px) {\n  #numeric {\n    margin-block-start: 0;\n    margin-inline-start: var(--rh-space-xl, 24px);\n    flex: 1 0 0%;\n  }\n\n  #container {\n    flex-wrap: nowrap;\n  }\n}\n`;\nexport default styles;\n", "import { LitElement, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { bound, observed } from '@patternfly/pfe-core/decorators.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport '../rh-context-provider/rh-context-provider.js';\n\nimport './rh-secondary-nav-menu-section.js';\n\nimport type { RhSecondaryNavOverlay } from './rh-secondary-nav-overlay.js';\n\nimport { SecondaryNavOverlayChangeEvent } from './rh-secondary-nav-overlay.js';\nimport { RhSecondaryNavDropdown, SecondaryNavDropdownExpandEvent } from './rh-secondary-nav-dropdown.js';\n\nimport { DirController } from '../../lib/DirController.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\nimport { colorContextProvider } from '../../lib/context/color.js';\n\nexport type NavPalette = (\n  | 'lighter'\n  | 'darker'\n);\n\nimport styles from './rh-secondary-nav.css';\n\n/**\n * Red Hat Secondary Nav\n *\n * @summary A non primary navigation bar.\n *\n * @slot logo           - Logo added to the main nav bar, expects a `<a> | <a><svg/></a> | <a><img/></a>`\n * @slot nav            - Navigation list added to the main nav bar, expects a `<ul>`\n * @slot cta            - Nav bar level CTA, expects a `<rh-cta>\n * @slot mobile-menu    - Text label for the mobile menu button, for l10n. Defaults to \"Menu\"\n *\n * @csspart nav         - container, <nav> element\n * @csspart container   - container, <div> element\n * @csspart cta         - container, <div> element\n *\n * @fires { SecondaryNavOverlayChangeEvent } overlay-change - Fires when an dropdown is opened or closed in desktop view or when\n *                                        the mobile menu button is toggled in mobile view.\n */\n@customElement('rh-secondary-nav')\nexport class RhSecondaryNav extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  #logger = new Logger(this);\n\n  #logoCopy: HTMLElement | null = null;\n\n  /** Is the element in an RTL context? */\n  #dir = new DirController(this);\n\n  /**\n   * executes this.shadowRoot.querySelector('rh-secondary-nav-overlay')\n   */\n  @query('rh-secondary-nav-overlay') _overlay!: RhSecondaryNavOverlay;\n\n  /**\n   * executes this.shadowRoot.querySelector('#container')\n   */\n  @query('#container') _container?: HTMLElement;\n\n  /**\n   * executes this.shadowRoot.querySelector('nav');\n   */\n  @query('nav') _nav?: HTMLElement;\n\n  /**\n   * executes this.shadowRoot.querySelector('button')\n   */\n  @query('button') _mobileMenuButton?: HTMLButtonElement;\n\n  /**\n   * `_compact` property is true when viewport `(min-width: ${tabletLandscapeBreakpoint})`.\n   * Property is observed for changes, and its value is updated using matchMediaController\n   * when viewport changes at breakpoint or first load of the component.\n   */\n  @observed\n  @state() private _compact = false;\n\n  /**\n   * ScreenSizeController effects callback to set _compact\n   */\n  protected screenSize = new ScreenSizeController(this, 'tabletLandscape', {\n    onChange: matches => {\n      this._compact = !matches;\n    }\n  });\n\n  /**\n   * `_mobileMenuExpanded` property is toggled when the mobile menu button is clicked,\n   * a focusout event occurs, or on an overlay click event.  It also switches state\n   * when the viewport changes breakpoints depending on if a dropdown is open or not.\n   */\n  @state() private _mobileMenuExpanded = false;\n\n  /**\n   * Define custom attribute 'main' and watch for DOM changes of the attribute\n   */\n  @property({ reflect: true, attribute: 'main', type: Boolean }) mainNav = false;\n\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: NavPalette = 'lighter';\n\n  /**\n   * If the host color-palette=\"lighter\", the cta color context should be on=\"light\"\n   * by default.  However when the host color-palette=\"darker\", the cta context should be\n   * on=\"dark\" when in desktop mode, but on=\"light\" when in mobile compact mode because the cta shifts\n   * to a white background in the mobile compact nav. This state property is set on firstUpdated()\n   * and __compactChanged() and is used on a wrapping `<rh-context-provider>` around the cta allowing\n   * it to dynamically change with viewport changes.\n   */\n  @state() private _ctaColorPalette: NavPalette | 'lightest' = this.colorPalette;\n\n  /**\n   * Checks if passed in element is a RhSecondaryNavDropdown\n   * @param element:\n   * @returns {boolean}\n   */\n  static isDropdown(element: Element | null): element is RhSecondaryNavDropdown {\n    return element instanceof RhSecondaryNavDropdown;\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('expand-request', this._dropdownChangeHandler);\n    this.addEventListener('overlay-change', this._toggleNavOverlay);\n    this.addEventListener('focusout', this._focusOutHandler);\n    this.addEventListener('keydown', this._keyboardControls);\n    this.#updateAccessibility();\n  }\n\n  firstUpdated() {\n    // after update the overlay should be available to attach an event listener to\n    this._overlay.addEventListener('click', this._overlayClickHandler);\n    // if compact menu and dark variant then set cta color to lightest\n    if (this.colorPalette === 'darker' && this._compact) {\n      this._ctaColorPalette = 'lightest';\n    }\n  }\n\n  render() {\n    const navClasses = { compact: this._compact, rtl: this.#dir.dir === 'rtl' };\n    const containerClasses = { 'expanded': this._mobileMenuExpanded };\n    return html`\n      <nav part=\"nav\" class=\"${classMap(navClasses)}\" aria-label=\"${this.#setNavOrder()}\">\n        ${this.#logoCopy}\n        <div id=\"container\" part=\"container\" class=\"${classMap(containerClasses)}\">\n          <slot name=\"logo\" id=\"logo\"></slot>\n          <button aria-controls=\"container\" aria-expanded=\"${this._mobileMenuExpanded}\" @click=\"${this.#toggleMobileMenu}\"><slot name=\"mobile-menu\">Menu</slot></button>\n          <slot name=\"nav\"></slot>\n          <div id=\"cta\" part=\"cta\">\n            <rh-context-provider color-palette=\"${this._ctaColorPalette}\">\n              <slot name=\"cta\"><slot>\n            </rh-context-provider>\n          </div>\n        </div>\n      </nav>\n      <rh-secondary-nav-overlay></rh-secondary-nav-overlay>\n    `;\n  }\n\n  /**\n   * Public API, opens a specific dropdown based on index.\n   * Closes all open dropdowns before opening specified.\n   * Toggles overlay to open\n   * @param index\n   * @returns {void}\n   */\n  public open(index: number): void {\n    if (index == null) {\n      return;\n    }\n    const dropdown = this.#dropdownByIndex(index);\n    if (dropdown && RhSecondaryNav.isDropdown(dropdown)) {\n      this.close();\n      this.#expand(index);\n      dropdown?.querySelector('a')?.focus();\n      this._overlay.open = true;\n    }\n  }\n\n  /**\n   * Public API, closes all open dropdowns\n   * @returns {void}\n   */\n  public close(): void {\n    const dropdowns = this.#allDropdowns();\n    dropdowns.forEach(dropdown => this.#closeDropdown(dropdown));\n  }\n\n  /**\n   * When dropdown event is triggered gets dropdown index that triggered\n   * event then closes all dropdowns.\n   * If the event is to open a dropdown, run #expand(index)\n   * If isMobile is set dispatch an SecondaryNavOverlayChangeEvent event\n   * to open the overlay\n   * @param event - {SecondaryNavDropdownExpandEvent}\n   * @return {void}\n   */\n  @bound\n  private _dropdownChangeHandler(event: Event): void {\n    if (event instanceof SecondaryNavDropdownExpandEvent) {\n      const index = this.#getDropdownIndex(event.target as Element);\n      if (index === null || index === undefined) {\n        return;\n      }\n      this.close();\n      if (event.expanded) {\n        this.#expand(index);\n      }\n      if (!this._nav?.classList.contains('compact')) {\n        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));\n      }\n    }\n  }\n\n  /**\n   * Handles when focus changes outside of the navigation\n   * If _compact is set, close the mobileMenu\n   * Closes all dropdowns and toggles overlay to closed\n   * @param event {FocusEvent}\n   */\n  @bound\n  private _focusOutHandler(event: FocusEvent) {\n    const target = event.relatedTarget as HTMLElement;\n    if (target?.closest('rh-secondary-nav') === this || target === null) {\n      // if the focus is still inside the rh-secondary-nav exit\n      return;\n    } else {\n      if (this._compact) {\n        this._mobileMenuExpanded = false;\n      }\n      this.close();\n      this._overlay.open = false;\n    }\n  }\n\n  /**\n   * Handles when the overlay receives a click event\n   * Closes all dropdowns and toggles overlay to closed\n   * If _compact then closes mobile menu to closed\n   * @param event {PointerEvent}\n   */\n  @bound\n  private _overlayClickHandler() {\n    this.close();\n    this._overlay.open = false;\n    if (this._compact) {\n      this._mobileMenuExpanded = false;\n    }\n  }\n\n  /**\n   * When _compact value is changed\n   * Get all open navMenus\n   * If _compact is true, open mobile menu\n   * If _compact is false, close mobile menu and close overlay\n   * @param oldVal {boolean | undefined}\n   * @param newVal {boolean | undefined}\n   * @returns {void}\n   */\n  private __compactChanged(oldVal?: boolean | undefined, newVal?: boolean | undefined): void {\n    if (newVal === undefined || newVal === oldVal) {\n      return;\n    }\n    const dropdownsOpen = this.#getOpenDropdowns().length;\n\n    if (newVal === true) {\n      // Switching to Mobile\n      if (dropdownsOpen > 0) {\n        this._mobileMenuExpanded = true;\n      }\n      if (this.colorPalette === 'darker') {\n        this._ctaColorPalette = 'lightest';\n      }\n    } else {\n      this._mobileMenuExpanded = false;\n      // Switching to Desktop\n      if (dropdownsOpen === 0) {\n        if (this._overlay) {\n          this._overlay.open = false;\n        }\n      }\n      if (this.colorPalette === 'darker') {\n        this._ctaColorPalette = this.colorPalette;\n      }\n    }\n  }\n\n  /**\n   * Closes dropdown menu on keydown, then places\n   * focus on last button clicked\n   * @param event {KeyboardEvent}\n   */\n  @bound\n  private _keyboardControls(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Escape':\n        if (this._compact) {\n          this._mobileMenuExpanded = false;\n          this._mobileMenuButton?.focus();\n        } else {\n          const open = this.#getOpenDropdowns();\n          open[0].querySelector('a')?.focus();\n        }\n        this.close();\n        this._overlay.open = false;\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Finds all open dropdowns\n   * @returns {RhSecondaryNavDropdown[]}\n   */\n  #getOpenDropdowns(): RhSecondaryNavDropdown[] {\n    const dropdowns = this.#allDropdowns();\n    const openDropdowns: RhSecondaryNavDropdown[] = [];\n    dropdowns.forEach(dropdown => {\n      if (dropdown.expanded) {\n        openDropdowns.push(dropdown);\n      }\n    });\n    return openDropdowns;\n  }\n\n  /**\n   * Gets all dropdowns and finds the element given and returns its index\n   * @param element {Element}\n   * @returns {void | number}\n   */\n  #getDropdownIndex(element: Element | null): void | number {\n    if (!RhSecondaryNav.isDropdown(element)) {\n      this.#logger.warn('The getDropdownIndex method expects to receive a dropdown element.');\n      return;\n    }\n    const dropdowns = this.#allDropdowns();\n    const index = dropdowns.findIndex(dropdown => dropdown.id === element.id);\n    return index;\n  }\n\n  /**\n   * Gets all dropdowns and returns the dropdown given an index\n   * @param index {number}\n   * @returns {void | RhSecondaryNavDropdown}\n   */\n  #dropdownByIndex(index: number): void | RhSecondaryNavDropdown {\n    const dropdowns = this.#allDropdowns();\n    if (dropdowns[index] === undefined) {\n      this.#logger.error('This dropdown index does not exist.');\n      return;\n    }\n    return dropdowns[index];\n  }\n\n  /**\n   * Opens a dropdown given an index\n   * @param index {number}\n   * @returns {void}\n   */\n  #expand(index: number): void {\n    if (index == null) {\n      return;\n    }\n    const dropdown = this.#dropdownByIndex(index);\n    if (dropdown && RhSecondaryNav.isDropdown(dropdown)) {\n      this.#openDropdown(dropdown);\n    }\n  }\n\n  /**\n   * Gets all dropdowns\n   * @returns {RhSecondaryNavDropdown[]}\n   */\n  #allDropdowns(): RhSecondaryNavDropdown[] {\n    return Array.from(this.querySelectorAll('rh-secondary-nav-dropdown')).filter(RhSecondaryNav.isDropdown);\n  }\n\n  /**\n   * Sets property expanded=false on dropdown given\n   * @param dropdown {RhSecondaryNavDropdown}\n   * @returns {void}\n   */\n  #closeDropdown(dropdown: RhSecondaryNavDropdown): void {\n    if (dropdown.expanded === false) {\n      return;\n    }\n    dropdown.expanded = false;\n  }\n\n  /**\n   * Sets property expanded=true on dropdown given\n   * @param dropdown {RhSecondaryNavDropdown}\n   * @returns {void}\n   */\n  #openDropdown(dropdown: RhSecondaryNavDropdown): void {\n    if (dropdown.expanded === true) {\n      return;\n    }\n    dropdown.expanded = true;\n  }\n\n  /**\n   * Toggles the overlay triggered by eventListener\n   * @param event {SecondaryNavOverlayChangeEvent}\n   */\n  @bound\n  private _toggleNavOverlay(event: Event) {\n    if (event instanceof SecondaryNavOverlayChangeEvent) {\n      if (this.contains(event.toggle)) {\n        this._overlay.open = event.open;\n      }\n    }\n  }\n\n  /**\n   * Upgrades the aria attributes on upgrade\n   * @returns {void}\n  */\n  #updateAccessibility(): void {\n    // remove role=\"navigation\" from host on upgrade\n    this.removeAttribute('role');\n    // remove aria-labelledby from slotted `<ul>` on upgrade\n    const nav = this.querySelector(':is([slot=\"nav\"]):is(ul)');\n    nav?.removeAttribute('aria-labelledby');\n  }\n\n  /**\n   * Toggles the mobile menu from `@click` of the _mobileMenuButton\n   */\n  #toggleMobileMenu() {\n    if (this._mobileMenuExpanded) {\n      this._mobileMenuExpanded = false;\n    } else {\n      this._mobileMenuExpanded = true;\n    }\n    this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this._mobileMenuExpanded, this));\n  }\n\n  /**\n   * Set the aria label on the custom tag to designate the nav as main or secondary based on attributes set by the content author\n   * @returns 'main' || 'secondary'\n   */\n  #setNavOrder() {\n    return this.mainNav ? 'main' : 'secondary';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav': RhSecondaryNav;\n  }\n}\n", "import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { isHeadingElement } from '../../lib/functions.js';\n\nimport styles from './rh-secondary-nav-menu-section.css';\n\n/**\n * @summary 'A menu section which auto upgrades header and sibling link list accessibility attributes'\n *\n * @slot header     - Adds a header tag to section, expects `<h1>, <h2>, <h3>, <h4>, <h5>, <h6>`\n * @slot links      - Adds a ul tag to section, expects `<ul>, <ol>`\n * @slot cta        - Adds a section level CTA, expects `<rh-cta>`\n *\n * @csspart base    - container, <section> element\n**/\n@customElement('rh-secondary-nav-menu-section')\nexport class RhSecondaryNavMenuSection extends LitElement {\n  static readonly styles = [styles];\n\n  #logger = new Logger(this);\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#updateAccessibility();\n  }\n\n  render() {\n    return html`\n      <section part=\"container\">\n        <slot name=\"header\"></slot>\n        <slot name=\"links\"></slot>\n        <slot name=\"cta\"></slot>\n      </section>\n    `;\n  }\n\n  /**\n   * Finds all list elements `<ul>, <ol>` and if the list does not have an\n   * `aria-labelledby` attribute finds the previousElementSibling header\n   * `<h1-6>` tags if available assigns an id or uses preexisting id\n   * to that header, then uses that id to the list on the `aria-labelledby`.\n   * @returns {void}\n   */\n  #updateAccessibility(): void {\n    const lists = this.querySelectorAll(':is([slot=\"links\"]):is(ul, ol)');\n\n    for (const list of lists) {\n      if (!list.hasAttribute('aria-labelledby')) {\n        const header = isHeadingElement(list.previousElementSibling) ? list.previousElementSibling : null;\n        if (!header) {\n          return this.#logger.warn('This links set doesn\\'t have a valid header associated with it.');\n        } else {\n          // add an ID to the header if we need it\n          header.id ||= getRandomId('rh-secondary-nav-menu-section');\n          // add that header id to the aria-labelledby tag\n          list.setAttribute('aria-labelledby', header.id);\n        }\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav-menu-section': RhSecondaryNavMenuSection;\n  }\n}\n", "/**\n * Checks if the given `node` is an instanceof HTMLHeadingElemnt\n * @returns {boolean}\n */\nexport function isHeadingElement(node: Node | null): node is HTMLHeadingElement {\n  return (node instanceof HTMLHeadingElement);\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n}\n\n::slotted([slot=\"header\"]) {\n  padding: 0;\n}\n\n::slotted(:is(h1,h2,h3,h4,h5,h6)) {\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif) !important;\n}\n\n::slotted([slot=\"links\"]:is(ul, ol)) {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--rh-font-size-body-text-md, 1rem);\n}\n\n::slotted([slot=\"cta\"]) {\n  padding: var(--rh-space-xl, 24px) 0 0;\n}\n\n::slotted([slot=\"cta\"]:last-of-type) {\n  padding: var(--rh-space-xl, 24px) 0;\n}\n\n@media screen and (min-width: 992px) {\n  ::slotted([slot=\"header\"]) {\n    padding: 0;\n  }\n\n  ::slotted([slot=\"links\"]) {\n    padding: 0;\n    margin: 0;\n  }\n}\n`;\nexport default styles;\n", "import { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { observed } from '@patternfly/pfe-core/decorators.js';\n\nimport styles from './rh-secondary-nav-overlay.css';\n\nexport class SecondaryNavOverlayChangeEvent extends ComposedEvent {\n  constructor(\n    public open: boolean,\n    public toggle: HTMLElement\n  ) {\n    super('overlay-change');\n  }\n}\n\n/**\n * @summary An overlay element to cover content with an opacity when navigation is expanded.\n */\n@customElement('rh-secondary-nav-overlay')\nexport class RhSecondaryNavOverlay extends LitElement {\n  static readonly styles = [styles];\n\n  @observed\n  @state() open = false;\n\n  render() {\n    return html``;\n  }\n\n  protected _openChanged(_oldValue?: boolean, newValue?: boolean) {\n    this.toggleAttribute('open', newValue);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav-overlay': RhSecondaryNavOverlay;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  position: fixed;\n  background: rgb(21, 21, 21, 0.75);\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: var(--rh-secondary-nav-overlay-z-index, -1);\n}\n\n:host([open]) {\n  display: block;\n}\n\n:host(:not([open])) {\n  display: none;\n}\n`;\nexport default styles;\n", "import { html, LitElement } from 'lit';\nimport { customElement, state, query, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { bound, observed } from '@patternfly/pfe-core/decorators.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport { colorContextProvider } from '../../lib/context/color.js';\n\nimport { RhSecondaryNavMenu } from './rh-secondary-nav-menu.js';\n\nexport class SecondaryNavDropdownExpandEvent extends ComposedEvent {\n  constructor(\n    public expanded: boolean,\n    public toggle: RhSecondaryNavDropdown,\n  ) {\n    super('expand-request');\n  }\n}\n\n// There is possibility of abstracting this component to a more 'generic' standalone component\n// in the future. Styles or functionality that are specific to rh-secondary-nav are commented\n// on as such for any future abstraction.\n\nimport styles from './rh-secondary-nav-dropdown.css';\n\n/**\n * @summary A wrapper component to upgrade a top level nav link to include dropdown functionality\n *\n * @slot link   - Link for dropdown, expects `<a>`\n * @slot menu   - Menu for dropdown, expects `<rh-secondary-nav-menu>`\n *\n * @fires { SecondaryNavDropdownExpandEvent } change - Fires when a dropdown is clicked\n**/\n@customElement('rh-secondary-nav-dropdown')\nexport class RhSecondaryNavDropdown extends LitElement {\n  static readonly styles = [styles];\n\n  #slots = new SlotController(this, { slots: ['link', 'menu'] });\n\n  #logger = new Logger(this);\n\n  @query('#container') _container?: HTMLElement;\n\n  @observed\n  @state() expanded = false;\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette = 'lighter';\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.id ||= getRandomId('rh-secondary-nav-dropdown');\n\n    const [link] = this.#slots.getSlotted<HTMLElement>('link');\n    const [menu] = this.#slots.getSlotted<HTMLElement>('menu');\n    if (link === undefined) {\n      this.#logger.warn('[rh-secondary-nav-dropdown][slot=\"link\"] expects a slotted <a> tag');\n      return;\n    }\n    if (menu === undefined) {\n      this.#logger.warn('[rh-secondary-nav-dropdown][slot=\"menu\"] expects a slotted <rh-secondary-nav-menu> tag');\n      return;\n    }\n\n    link.setAttribute('role', 'button');\n    link.setAttribute('aria-expanded', 'false');\n    link.setAttribute('aria-controls', menu.id);\n    link.addEventListener('click', this._clickHandler);\n  }\n\n  render() {\n    const classes = { 'expanded': this.expanded };\n\n    return html`\n      <div id=\"container\" part=\"container\" class=\"${classMap(classes)}\">\n        <slot name=\"link\"></slot>\n        <slot name=\"menu\"></slot>\n      </div>\n    `;\n  }\n\n  /**\n   * When expanded property changes, check the new value, if true\n   * run the `#open()` method, if false run the `#close()` method.\n   * @param oldVal {string} - Boolean value in string form\n   * @param newVal {string} - Boolean value in string form\n   * @returns {void}\n   */\n  protected _expandedChanged(oldVal?: 'false' | 'true', newVal?: 'false' | 'true'): void {\n    if (newVal === oldVal) {\n      return;\n    }\n    newVal ? this.#open() : this.#close();\n  }\n\n  /**\n   * When a dropdown is clicked set expanded to the opposite of the expanded property\n   * and then dispatch that value in a SecondaryNavDropdownExpandEvent\n   * @param event {MouseEvent}\n   */\n  @bound\n  private _clickHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.expanded = !this.expanded;\n    // trigger change event which evokes the mutation on this.expanded\n    this.dispatchEvent(new SecondaryNavDropdownExpandEvent(this.expanded, this));\n  }\n\n  /**\n   * Sets or removes attributes needed to open a dropdown menu\n   * @returns {void}\n   */\n  #open(): void {\n    const link = this.#slots.getSlotted('link').find(child => child instanceof HTMLAnchorElement);\n    link?.setAttribute('aria-expanded', 'true');\n    // menu as a RhSecondaryNavMenu in the slotted child is specific to rh-secondary-nav.\n    // If this component is abstracted to a standalone component. The RhSecondaryNavMenu\n    // could possibly become a sub component of the abstraction instead.\n    const menu = this.#slots.getSlotted('menu').find(child => child instanceof RhSecondaryNavMenu) as RhSecondaryNavMenu;\n    menu.visible = true;\n  }\n\n  /**\n   * Sets or removes attributes needed to close a dropdown menu\n   * @returns {void}\n   */\n  #close(): void {\n    const link = this.#slots.getSlotted('link').find(child => child instanceof HTMLAnchorElement);\n    link?.setAttribute('aria-expanded', 'false');\n    // Same as comment in #open()\n    // The RhSecondaryNavMenu could possibly become a sub component of the abstraction instead.\n    const menu = this.#slots.getSlotted('menu').find(child => child instanceof RhSecondaryNavMenu) as RhSecondaryNavMenu;\n    menu.visible = false;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav-dropdown': RhSecondaryNavDropdown;\n  }\n}\n", "import { html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { observed } from '@patternfly/pfe-core/decorators.js';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-secondary-nav-menu.css';\n\n/**\n * @summary 'A pop up menu for secondary nav, available in full-width and fixed-with sizes'\n *\n * @slot section          - Section, expects `<ul>, <ol>, <rh-secondary-nav-section>` elements, applies auto grid styles on full-width\n * @slot cta              - Menu level CTA, expects a `<rh-cta>`\n *\n * @csspart container     - container - <div> element, wrapper for menus\n * @csspart full-width    - container - <div> element, wrapper for full-width menus\n * @csspart fixed-width   - container - <div> element, wrapper for fixed-width menus\n * @csspart sections      - container - <div> element, wrapper for menu sections\n * @csspart cta           - container - <div> element, wrapper for cta\n */\n@customElement('rh-secondary-nav-menu')\nexport class RhSecondaryNavMenu extends LitElement {\n  static readonly styles = [styles];\n\n  @property({ reflect: true }) layout: 'fixed-width' | 'full-width' = 'full-width';\n\n  @query('#container') _container?: HTMLElement;\n\n  #screenSize = new ScreenSizeController(this);\n\n  /**\n   * `compact` property is true when viewport `(min-width: ${tabletLandscapeBreakpoint})`.\n   * Property is observed for changes, and its value is updated using matchMediaController\n   * when viewport changes at breakpoint or first load of the component.\n   */\n   @observed\n   @state() private _compact = false;\n\n   /**\n    * ScreenSizeController effects callback to set _compact\n    */\n   protected screenSize = new ScreenSizeController(this, 'tabletLandscape', {\n     onChange: matches => {\n       this._compact = !matches;\n     }\n   });\n\n  /**\n   * `visible` property is false initially then when a dropdown is clicked is toggled\n   */\n  @state() visible = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.id ||= getRandomId('rh-secondary-nav-menu');\n  }\n\n  render() {\n    const classes = { 'compact': this._compact, 'visible': this.visible };\n\n    return html`\n      <div id=\"container\" class=\"${classMap(classes)}\">${this.layout === 'full-width' ? html`\n        <div id=\"full-width\" part=\"full-width\">\n          <div id=\"sections\" part=\"sections\">\n            <slot></slot>\n          </div>\n        </div>` : html`\n        <div id=\"fixed-width\" part=\"fixed-width\">\n          <div id=\"sections\" part=\"sections\">\n            <slot></slot>\n          </div>\n        </div>`}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav-menu': RhSecondaryNavMenu;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n}\n\n#container {\n  position: relative;\n}\n\n#container:not(:is(.visible)) {\n  display: none;\n}\n\n#container.visible {\n  background-color: var(--rh-color-surface-lightest, #ffffff);\n}\n\n#sections {\n  padding: var(--rh-space-xl, 24px);\n}\n\n:host(:not([type=\"fixed-width\"])) #sections {\n  display: grid;\n  grid-template-columns:\n    var(\n      --rh-secondary-nav-menu-section-grid,\n      repeat(auto-fit, minmax(15.5rem, 1fr))\n    );\n  grid-template-rows: auto;\n  gap: var(--rh-secondary-nav-menu-section-grid-gap, var(--rh-space-2xl, 32px));\n}\n\n::slotted(:is(ul, ol)) {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--rh-font-size-body-text-md, 1rem);\n}\n\n@media screen and (min-width: 992px) {\n  #container.visible {\n    position: absolute;\n    left: 0;\n    right: 0;\n    padding: \n      var(--rh-space-4xl, 64px)\n      var(--rh-space-2xl, 32px)\n      var(--rh-space-3xl, 48px);\n    box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));\n    z-index: -1;\n    max-height: calc(100vh - (var(--rh-space-4xl, 64px)) - var(--_nav-min-height));\n    overflow-y: scroll;\n  }\n\n  :host([layout=\"fixed-width\"]) #container {\n    position: absolute;\n    top: var(--_nav-height);\n    left: auto;\n    right: auto;\n    bottom: auto;\n    margin-top: 0;\n    padding: 0;\n  }\n\n  #sections {\n    padding: 0;\n    max-width: var(--rh-secondary-nav-menu-content-max-width, 1136px);\n    margin: auto;\n  }\n\n  :host([layout=\"fixed-width\"]) #sections {\n    padding: var(--rh-space-2xl, 32px);\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  #container.visible {\n    padding: var(--rh-space-3xl, 48px) var(--rh-space-2xl, 32px);\n  }\n}\n\n@media screen and (min-width: 1440px) {\n  #container.visible {\n    padding: var(--rh-space-3xl, 48px) var(--rh-space-4xl, 64px);\n  }\n}\n\n@media screen and (min-width: 1600px) {\n  #full-width {\n    margin: auto;\n  }\n}\n`;\nexport default styles;\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n}\n\n#container {\n  border-inline-start: 3px solid transparent;\n  border-inline-end: 1px solid transparent;\n  display: block;\n  height: 100%;\n}\n\n/*\n * Move expanded back to an attribute if we decide\n * that we are going to abstract this component\n */\n#container.expanded {\n  border-inline-start-color: var(--rh-color-text-brand-on-light, #ee0000);\n  border-inline-end-color: var(--rh-color-border-subtle-on-light, #d2d2d2);\n  box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));\n}\n\n::slotted([slot=\"link\"]) {\n  justify-content: space-between;\n  position: relative;\n  gap: calc(var(--rh-font-size-body-text-md, 1rem) / 2);\n}\n\n::slotted([slot=\"link\"]):after {\n  box-sizing: content-box !important;\n  content: \"\";\n  display: block;\n  width: var(--_chevron-size);\n  height: var(--_chevron-size);\n  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);\n  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);\n  transform: var(--_chevron-transform-collapsed);\n}\n\n#container.expanded ::slotted([slot=\"link\"]):after {\n  transform: var(--_chevron-transform-expanded);\n}\n\n@media screen and (min-width: 992px) {\n  #container {\n    border-inline-start: none;\n    border-inline-end: none;\n  }\n\n  /*\n * Move expanded back to an attribute if we decide\n * that we are going to abstract this component\n */\n  #container.expanded {\n    box-shadow: none;\n  }\n\n  ::slotted([slot=\"link\"][aria-expanded=\"true\"]) {\n    background: var(--rh-color-surface-lightest, #ffffff) !important;\n    border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);\n    color: var(--rh-color-text-primary-on-light, #151515);\n\n    --_chevron-color: var(--rh-color-text-primary-on-light, #151515);\n  }\n}\n`;\nexport default styles;\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  --_chevron-size: calc(var(--rh-font-size-body-text-md, 1rem) * 0.35);\n  --_chevron-thickness: calc(var(--rh-font-size-body-text-md, 1rem) * 0.125);\n  --_chevron-up: 45deg;\n  --_chevron-down: -135deg;\n  --_chevron-correction-x: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);\n  --_chevron-correction-y: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);\n  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);\n  --_chevron-transform-collapsed: \n      rotate(var(--_chevron-up)) \n      translate(var(--_chevron-correction-x), var(--_chevron-correction-x));\n  --_chevron-transform-expanded: \n      rotate(var(--_chevron-down))\n      translate(var(--_chevron-correction-y), var(--_chevron-correction-y));\n  --_button-font-color: var(--rh-color-text-primary-on-light, #151515);\n  --_nav-max-height: var(--_max-height, max-content);\n  --_nav-min-height: var(--_min-height, 74px);\n\n  z-index: var(--rh-secondary-nav-z-index, 102);\n}\n\n:host([color-palette=\"darker\"]) {\n  --_button-font-color: var(--rh-color-text-primary-on-dark, #ffffff);\n  --_chevron-color: var(--rh-color-text-primary-on-dark, #ffffff);\n}\n\nnav {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  min-height: var(--_min-height);\n  z-index: var(--rh-secondary-nav-z-index, 102);\n}\n\n:host([color-palette=\"darker\"])nav.compact {\n  border-block-end: 1px solid var(--rh-color-border-subtle-on-dark, #6a6e73);\n}\n\nnav.rtl {\n  --_chevron-transform-collapsed: \n      rotate(calc(-1 * var(--_chevron-up))) \n      translate(calc(1 * var(--_chevron-correction-y)), var(--_chevron-correction-y));\n  --_chevron-transform-expanded: \n      rotate(calc(-1 * var(--_chevron-down))) \n      translate(calc(1 * var(--_chevron-correction-x)), var(--_chevron-correction-x));\n}\n\n#container {\n  display: grid;\n  position: relative;\n  z-index: var(--rh-secondary-nav-z-index, 102);\n  background-color: var(--rh-color-surface-light, #f0f0f0);\n  gap: 0 var(--rh-space-lg, 16px);\n  grid-template-rows: minmax(var(--_nav-min-height), var(--_nav-max-height)) max-content max-content;\n  grid-template-columns: 1fr max-content;\n  grid-template-areas:\n    \"logo menu\"\n    \"nav nav\"\n    \"cta cta\";\n  height: fit-content;\n  min-height: var(--_min-height);\n  max-height: 100vh;\n  overflow-y: auto;\n}\n\n#cta {\n  grid-area: cta;\n}\n\n#container.expanded {\n  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);\n}\n\n:host([color-palette=\"darker\"]) #container {\n  background-color: var(--rh-color-surface-dark, #3c3f42);\n}\n\n#container.expanded ::slotted([slot=\"nav\"]),\n#container.expanded ::slotted([slot=\"cta\"]) {\n  display: flex !important;\n}\n\n#container.expanded ::slotted([slot=\"nav\"]) {\n  list-style: none;\n  flex-direction: column;\n  padding: 2rem 1rem 0;\n  padding: \n    var(--rh-space-2xl, 32px)\n    var(--rh-space-lg, 16px)\n    0\n    var(--rh-space-lg, 16px);\n  margin: 0 !important;\n}\n\nnav.compact #container.expanded ::slotted([slot=\"nav\"]) {\n  background-color: var(--rh-color-surface-lightest, #ffffff);\n}\n\n#container.expanded ::slotted([slot=\"cta\"]) {\n  padding: 2rem 1rem;\n}\n\nnav.compact #container.expanded #cta {\n  background-color: var(--rh-color-surface-lightest, #ffffff);\n}\n\nbutton {\n  grid-area: menu;\n  border: none;\n  display: flex;\n  height: 100%;\n  align-items: center;\n  font-family: var(--rh-font-family-body-text, RedHatText, \"Red Hat Text\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  font-size: var(--rh-font-size-body-text-md, 1rem);\n  padding: var(--rh-space-lg, 16px);\n  border-block-start: var(--rh-border-width-lg, 3px) solid transparent;\n  margin-inline-end: var(--rh-space-lg, 16px);\n  color: var(--_button-font-color);\n  background-color: var(--rh-color-surface-light, #f0f0f0);\n  gap: var(--rh-space-md, 8px);\n}\n\nbutton:hover {\n  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);\n}\n\nbutton:after {\n  box-sizing: content-box !important;\n  content: \"\";\n  display: block;\n  width: var(--_chevron-size);\n  height: var(--_chevron-size);\n  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);\n  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);\n  transform: var(--_chevron-transform-collapsed);\n}\n\nbutton[aria-expanded=\"true\"]:after {\n  transform: var(--_chevron-transform-expanded);\n}\n\nbutton:focus {\n  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);\n}\n\n:host([color-palette=\"darker\"]) button {\n  background-color: var(--rh-color-surface-dark, #3c3f42);\n}\n\nbutton:active,\nbutton[aria-expanded=\"true\"],\n:host([color-palette=\"darker\"]) button[aria-expanded=\"true\"] {\n  color: var(--rh-color-text-primary-on-light, #151515);\n  background-color: var(--rh-color-surface-lightest, #ffffff);\n  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);\n  border-block-end: none;\n}\n\n:host([color-palette=\"darker\"]) button:active {\n  color: var(--rh-color-text-primary-on-dark, #ffffff);\n}\n\n:host([color-palette=\"darker\"]) button[aria-expanded=\"true\"]:active {\n  color: var(--rh-color-text-primary-on-light, #151515);\n}\n\n@media screen and (min-width: 768px) {\n  button {\n    margin-inline-end: var(--rh-space-2xl, 32px);\n  }\n\n  #container.expanded ::slotted([slot=\"nav\"]) {\n    padding: \n      var(--rh-space-2xl, 32px) \n      var(--rh-space-2xl, 32px)\n      0 !important;\n  }\n\n  #container.expanded ::slotted([slot=\"cta\"]) {\n    padding: var(--rh-space-2xl, 32px) !important;\n  }\n}\n\n@media screen and (min-width: 992px) {\n  nav {\n    position: relative;\n  }\n\n  #container {\n    grid-template-areas: \"logo nav cta\";\n    grid-template-rows: auto;\n    grid-template-columns: max-content 1fr max-content;\n    height: 100%;\n    max-height: initial;\n    overflow-y: initial;\n  }\n\n  #container.expanded ::slotted([slot=\"nav\"]) {\n    max-height: calc(100vh - var(--_nav-min-height));\n  }\n\n  button {\n    display: none;\n  }\n}\n`;\nexport default styles;\n", "import type { ColorTheme } from '../../lib/context/color.js';\n\nimport { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextConsumer } from '@patternfly/pfe-core/decorators.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-stat.css';\n\n/**\n * A statistic showcases a data point or quick fact in a way that visually stands out.\n * It consists of a number/percentage and body text in its simplest form.\n * It can also include an icon, title, and a call to action.\n *\n * @slot icon - Optional icon\n * @slot title - Statistic title\n * @slot statistic - Statistic data\n * @slot cta - Call to action\n * @slot - Description of the stat\n *\n */\n@customElement('rh-stat')\nexport class RhStat extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  @colorContextConsumer()\n  @property({ reflect: true }) on: ColorTheme = 'light';\n\n  @property({ reflect: true, type: String }) icon?: string;\n\n  @property({ reflect: true, type: String }) top: 'default'|'statistic' = 'default';\n\n  @property({ reflect: true, type: String }) size: 'default'|'large' = 'default';\n\n  @property({ type: Boolean, reflect: true, attribute: 'is-mobile' }) isMobile = false;\n\n  #screenSize = new ScreenSizeController(this);\n\n  #slots = new SlotController(this, null, 'icon', 'title', 'statistic', 'cta');\n\n  #mo = new MutationObserver(() => this.#onMutation());\n\n  #logger = new Logger(this);\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.#updateIcons();\n    this.#mo.observe(this, { childList: true });\n    this.#onMutation();\n  }\n\n  render() {\n    const hasIcon = this.#slots.hasSlotted('icon') || !!this.icon;\n    const hasTitle = this.#slots.hasSlotted('title');\n    const hasStatistic = this.#slots.hasSlotted('statistic');\n    const hasCta = this.#slots.hasSlotted('cta');\n    const isMobile = !this.#screenSize.matches.has('tabletPortrait');\n    return html`\n      <div class=\"${classMap({ isMobile, hasIcon, hasTitle, hasStatistic, hasCta })}\">\n        <span id=\"icon\">\n          <slot name=\"icon\" @slotchange=\"${this.#updateIcons}\">${!this.icon ? '' : html`\n            <pfe-icon size=${this.size === 'default' ? 'md' : 'lg'} icon=${this.icon}></pfe-icon>`}\n          </slot>\n        </span>\n        <span id=\"title\"><slot name=\"title\"></slot></span>\n        <span id=\"statistic\"><slot name=\"statistic\"></slot></span>\n        <span id=\"content\"><slot></slot></span>\n        <span id=\"cta\"><slot name=\"cta\"></slot></span>\n      </div>\n    `;\n  }\n\n  #updateIcons(): void {\n    this.querySelector('pfe-icon[slot=\"icon\"]')\n      ?.setAttribute?.('size', this.size === 'default' ? 'md' : 'lg');\n  }\n\n  #onMutation() {\n    if (!this.#slots.hasSlotted('stat')) {\n      this.#logger.warn('Must contain stat content');\n    }\n    if (!this.querySelectorAll(':not([slot])').length) {\n      this.#logger.warn('Must contain description content');\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-stat': RhStat;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host {\n  display: block;\n}\n\ndiv {\n  width: 100%;\n  height: 100%;\n  display: flex;\n\n  --_accent-color: var(--rh-color-brand-red, #ee0000);\n\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: space-around;\n}\n\n:host([on=\"dark\"]) div {\n  --_accent-color: #ffffff;\n}\n\nspan,\n::slotted(*) {\n  display: block;\n  text-align: center;\n}\n\npfe-icon[size=\"md\"],\n::slotted(pfe-icon[size=\"md\"]) {\n  --pfe-icon--size: var(--rh-font-size-heading-xl, 2.5rem);\n\n  display: contents;\n}\n\n.hasIcon ::slotted([slot=\"icon\"]),\n.hasIcon pfe-icon[size=\"md\"] {\n  order: 1;\n  display: block;\n  color: black;\n  margin-bottom: 16px;\n}\n\n#title {\n  order: 1;\n  color: var(--_accent-color);\n  font-size: var(--rh-font-size-body-text-xl, 1.25rem);\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  font-weight: var(--rh-font-weight-regular, 400);\n  text-transform: uppercase;\n}\n\n#statistic {\n  order: 2;\n  color: var(--_accent-color);\n  font-size: var(--rh-font-size-heading-lg, 2.25rem);\n  font-weight: var(--rh-font-weight-regular, 300);\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n}\n\n#content {\n  order: 3;\n  font-size: var(--rh-font-size-body-text-lg, 1.125rem);\n  font-family: var(--rh-font-family-text, \"RedHatText\", \"Overpass\", Helvetica, Arial, sans-serif);\n  margin-top: var(--rh-space-sm, 6px);\n}\n\n#cta {\n  order: 4;\n  font-size: var(--rh-font-size-body-text-lg, 1.125rem);\n  font-family: var(--rh-font-family-heading, RedHatDisplay, \"Red Hat Display\", \"Noto Sans Arabic\", \"Noto Sans Hebrew\", \"Noto Sans JP\", \"Noto Sans KR\", \"Noto Sans Malayalam\", \"Noto Sans SC\", \"Noto Sans TC\", \"Noto Sans Thai\", Overpass, Helvetica, Arial, sans-serif);\n  margin-top: var(--rh-space-lg, 16px);\n}\n\n:not(.hasIcon) #icon,\n:not(.hasStatistic) #statistic,\n:not(.hasTitle) #title,\n:not(.hasCta) #cta {\n  display: none;\n}\n\n:host([size=\"large\"]) #statistic {\n  font-size: var(--rh-font-size-heading-2xl, 3rem);\n}\n\n.isMobile #content {\n  font-size: var(--rh-font-size-body-text-lg, 1.125rem);\n}\n\n.isMobile #statistic {\n  font-size: 32px;\n}\n\n:host([top=\"statistic\"]) #statistic {\n  order: 1;\n}\n\n:host([top=\"statistic\"]) #title {\n  order: 2;\n}\n`;\nexport default styles;\n", "import type { ColorTheme } from '@patternfly/pfe-core';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { colorContextConsumer } from '@patternfly/pfe-core/decorators.js';\nimport { BaseTooltip } from '@patternfly/pfe-tooltip/BaseTooltip.js';\n\nimport styles from './rh-tooltip.css';\n\n/**\n * Tooltip\n * @slot - Place element content here\n */\n@customElement('rh-tooltip')\nexport class RhTooltip extends BaseTooltip {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [...BaseTooltip.styles, styles];\n\n  @colorContextConsumer()\n  @property({ reflect: true }) on: ColorTheme = 'light';\n\n  constructor() {\n    super();\n    if (['top', 'bottom'].includes(this.position)) {\n      this.offset = [-4, 16];\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tooltip': RhTooltip;\n  }\n}\n", "import {css} from 'lit';\nexport const styles = css`:host([on=\"dark\"]) {\n  --pf-c-tooltip__content--BackgroundColor: #ffffff;\n  --pf-c-tooltip__content--Color: #151515;\n}\n\n:host {\n  --pf-c-tooltip--BoxShadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));\n  --pf-c-tooltip__content--PaddingTop: var(--rh-space-lg, 16px);\n  --pf-c-tooltip__content--PaddingRight: var(--rh-space-lg, 16px);\n  --pf-c-tooltip__content--PaddingBottom: var(--rh-space-lg, 16px);\n  --pf-c-tooltip__content--PaddingLeft: var(--rh-space-lg, 16px);\n  --pf-c-tooltip__arrow--Width: 11px;\n  --pf-c-tooltip__arrow--Height: 11px;\n}\n`;\nexport default styles;\n"],
  "mappings": "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",
  "names": ["RhAlert", "LitElement", "html", "css", "svg", "customElement", "property", "css", "styles", "RhBlockquote", "LitElement", "html", "__decorate", "property", "customElement", "html", "LitElement", "customElement", "property", "css", "styles", "css", "styles", "ContextProvider", "LitElement", "html", "__decorate", "property", "customElement", "LitElement", "html", "customElement", "property", "Logger", "__classPrivateFieldGet", "css", "styles", "RhCta", "LitElement", "Logger", "__classPrivateFieldGet", "html", "__decorate", "property", "customElement", "LitElement", "html", "customElement", "css", "styles", "RhDemo", "LitElement", "html", "__decorate", "customElement", "html", "customElement", "property", "classMap", "__decorate", "css", "styles", "RhDialog", "__classPrivateFieldGet", "html", "classMap", "pauseVideo", "__decorate", "property", "customElement", "LitElement", "html", "property", "classMap", "getRandomId", "Logger", "css", "styles", "css", "css", "bound", "__decorate", "bound", "LitElement", "html", "customElement", "property", "Logger", "css", "styles", "RhFooterSocialLink", "LitElement", "Logger", "html", "__decorate", "property", "customElement", "LitElement", "html", "customElement", "property", "Logger", "css", "styles", "RhFooterLinks", "LitElement", "Logger", "html", "__decorate", "property", "customElement", "LitElement", "html", "customElement", "css", "styles", "RhFooterBlock", "LitElement", "html", "__decorate", "customElement", "SlotController", "LitElement", "html", "customElement", "property", "classMap", "LitElement", "html", "customElement", "css", "styles", "RhFooterCopyright", "LitElement", "html", "__decorate", "customElement", "RhGlobalFooter", "LitElement", "SlotController", "__classPrivateFieldGet", "html", "classMap", "__decorate", "property", "customElement", "LitElement", "Logger", "__classPrivateFieldGet", "html", "classMap", "getRandomId", "__decorate", "property", "LitElement", "html", "customElement", "property", "classMap", "Logger", "css", "styles", "html", "RhPagination", "LitElement", "__classPrivateFieldGet", "Logger", "classMap", "_RhPagination_update", "_RhPagination_getOverflow", "_RhPagination_getCurrentLink", "_RhPagination_updateLightDOMRefs", "__classPrivateFieldSet", "_RhPagination_checkValidity", "_RhPagination_go", "_RhPagination_onKeyup", "_RhPagination_onChange", "__decorate", "property", "customElement", "LitElement", "html", "customElement", "property", "query", "state", "classMap", "bound", "observed", "Logger", "html", "LitElement", "customElement", "getRandomId", "Logger", "css", "styles", "RhSecondaryNavMenuSection", "LitElement", "Logger", "__classPrivateFieldGet", "html", "getRandomId", "__decorate", "customElement", "html", "LitElement", "customElement", "observed", "css", "styles", "RhSecondaryNavOverlay", "LitElement", "html", "__decorate", "observed", "customElement", "html", "LitElement", "customElement", "state", "query", "property", "classMap", "ComposedEvent", "Logger", "bound", "observed", "SlotController", "getRandomId", "html", "LitElement", "customElement", "property", "query", "state", "classMap", "observed", "getRandomId", "css", "styles", "RhSecondaryNavMenu", "LitElement", "getRandomId", "html", "classMap", "__decorate", "property", "query", "observed", "state", "customElement", "css", "styles", "ComposedEvent", "RhSecondaryNavDropdown", "LitElement", "SlotController", "Logger", "getRandomId", "__classPrivateFieldGet", "html", "classMap", "_RhSecondaryNavDropdown_close", "__decorate", "query", "observed", "state", "property", "bound", "customElement", "css", "styles", "RhSecondaryNav", "LitElement", "Logger", "__classPrivateFieldGet", "html", "classMap", "_RhSecondaryNav_getDropdownIndex", "_RhSecondaryNav_dropdownByIndex", "_RhSecondaryNav_expand", "_RhSecondaryNav_allDropdowns", "_RhSecondaryNav_closeDropdown", "_RhSecondaryNav_openDropdown", "_RhSecondaryNav_updateAccessibility", "_RhSecondaryNav_toggleMobileMenu", "_RhSecondaryNav_setNavOrder", "__decorate", "query", "observed", "state", "property", "bound", "customElement", "LitElement", "html", "customElement", "property", "classMap", "colorContextConsumer", "SlotController", "Logger", "css", "styles", "RhStat", "LitElement", "SlotController", "__classPrivateFieldGet", "Logger", "html", "classMap", "_RhStat_onMutation", "__decorate", "colorContextConsumer", "property", "customElement", "customElement", "property", "colorContextConsumer", "css", "styles", "RhTooltip", "__decorate", "colorContextConsumer", "property", "customElement"]
}
