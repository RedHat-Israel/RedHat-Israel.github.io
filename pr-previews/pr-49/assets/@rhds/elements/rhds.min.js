var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// elements/rh-dialog/yt-api.js
var yt_api_exports = {};
__export(yt_api_exports, {
  pauseVideo: () => pauseVideo
});
async function getPlayer(iframe) {
  return new Promise((r) => {
    let player = players.get(iframe);
    if (!player) {
      players.set(iframe, new window.YT.Player(iframe, {
        events: {
          onReady() {
            player = players.get(iframe);
            r(player);
          }
        }
      }));
    } else {
      requestAnimationFrame(() => r(player));
    }
  });
}
async function pauseVideo(iframe) {
  if (!iframe.src.match(/enablejsapi=1/)) {
    console.warn("Cannot pause video, please add `enablejsapi=1` to iframe url.");
    return;
  }
  if (!window.YT) {
    const tag = document.createElement("script");
    tag.src = "https://www.youtube.com/iframe_api";
    const [firstScriptTag] = document.getElementsByTagName("script");
    firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);
    const orig = window.onYouTubeIframeAPIReady;
    await new Promise((r) => {
      window.onYouTubeIframeAPIReady = function() {
        r(void 0);
      };
    });
    window.onYouTubeIframeAPIReady = orig;
  }
  const player = await getPlayer(iframe);
  player?.pauseVideo();
}
var players;
var init_yt_api = __esm({
  "elements/rh-dialog/yt-api.js"() {
    "use strict";
    players = /* @__PURE__ */ new WeakMap();
    __name(getPlayer, "getPlayer");
    __name(pauseVideo, "pauseVideo");
  }
});

// elements/rh-alert/rh-alert.js
import { __decorate } from "tslib";
import { LitElement, html, svg } from "lit";
import { customElement, property } from "lit/decorators.js";

// elements/rh-alert/rh-alert.css.js
import { css } from "lit";
var styles = css`:host {
  --_background-color: var(--rh-color-cyan-50, #f2f9f9);
  --_border-color: var(--rh-color-cyan-300, #009596);
  --_header-color: var(--rh-color-cyan-500, #003737);
  --_icon-color: var(--rh-color-cyan-300, #009596);
  --_font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);

  display: block;
}

:host([hidden]) {
  display: none;
}

:host([state="info"]) {
  --_border-color: var(--rh-color-blue-250, #2b9af3);
  --_icon-color: var(--rh-color-blue-250, #2b9af3);
  --_header-color: var(--rh-color-blue-600, #002952);
  --_background-color: var(--rh-color-blue-50, #e7f1fa);
}

:host([state="success"]) {
  --_border-color: var(--rh-color-green-500, #3e8635);
  --_icon-color: var(--rh-color-green-500, #3e8635);
  --_header-color: var(--rh-color-green-600, #1e4f18);
  --_background-color: var(--rh-color-green-50, #f3faf2);
}

:host([state="warning"]) {
  --_border-color: var(--rh-color-gold-400, #f0ab00);
  --_icon-color: var(--rh-color-gold-400, #f0ab00);
  --_header-color: var(--rh-color-gold-600, #795600);
  --_background-color: var(--rh-color-gold-50, #fdf7e7);
}

:host([state="danger"]) {
  --_border-color: #c9190b; /* WARNING: not a recognized token value */
  --_icon-color: #c9190b; /* WARNING: not a recognized token value */
  --_header-color: #7d1007; /* WARNING: not a recognized token value */
  --_background-color: var(--rh-color-red-50, #faeae8);
}

:host([toast]) {
  --_background-color: var(--rh-color-surface-lightest, #ffffff);

  max-width: 550px;
}

#container {
  border-width: var(--rh-border-width-md, 2px);
  border-color: var(--_border-color);
  border-style: solid;
  background-color: var(--_background-color);
  padding: var(--rh-space-lg, 16px);
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: var(--rh-space-xs, 4px);
  font-family: var(--_font-family);
}

#left-column {
  display: inline-block;
  vertical-align: top;
}

#middle-column {
  display: inline-block;
  vertical-align: top;
}

header {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: var(--rh-space-xs, 4px);
}

header ::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  margin: 0;

  --rh-font-family-heading: var(--_font-family);
}

#header-actions {
  margin-right: var(--rh-space-xs, 4px);
}

#header {
  color: var(--_header-color);
  font-weight: var(--rh-font-weight-heading-medium, 500);
  flex: 1 1 auto;
}

#icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--rh-font-size-body-text-2xl, 1.5rem);
  height: var(--rh-font-size-body-text-2xl, 1.5rem);
  color: var(--_icon-color);
}

#close-button {
  color: var(--rh-color-text-secondary-on-light, #6a6e73);
  background-color: transparent;
  border: none;
  height: var(--rh-length-xl, 24px);
  width: var(--rh-length-xl, 24px);
  cursor: pointer;
}

#close-button:hover {
  color: var(--rh-color-text-primary-on-light, #151515);
}

#description {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

#description > ::slotted(*) {
  margin-top: var(--rh-space-md, 8px);
  margin-bottom: var(--rh-space-lg, 16px);
}

footer {
  margin-top: var(--rh-space-lg, 16px);
}

footer ::slotted([slot="actions"]) {
  margin-right: var(--actions-item--MarginRight, var(--rh-alert__actions--Gap, 24px)) !important;
  padding: 0;
  border: none;
  background-color: transparent;
  color: var(--rh-color-interactive-blue-darker, #0066cc);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  font-family: var(--_font-family);
}

/* TODO: separate focus and hover styles */
footer ::slotted([slot="actions"]:focus) {
  text-decoration: underline;
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

footer ::slotted([slot="actions"]:hover) {
  cursor: pointer;
  text-decoration: underline;
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

:host(:not([variant])) #container,
:host([toast]) #container {
  border-left: 0;
  border-bottom: none;
  border-right: 0;
}

:host([toast]) #container {
  box-shadow: var(--rh-box-shadow-lg, 0 6px 8px 2px rgba(21, 21, 21, 0.3));
}
`;
var rh_alert_css_default = styles;

// elements/rh-alert/rh-alert.js
var ICONS = {
  default: { viewBox: "0 0 896 1024", path: "M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z" },
  error: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  success: { viewBox: "0 0 512 512", path: "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z" },
  warning: { viewBox: "0 0 576 512", path: "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  danger: { viewBox: "0 0 512 512", path: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  info: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  close: { viewBox: "0 0 352 512", path: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" },
  get(name) {
    const { viewBox, path } = ICONS[name];
    return svg`
      <svg
          aria-hidden="true"
          fill="currentColor"
          height="1em" width="1em"
          style="vertical-align:-0.125em"
          viewBox="${viewBox}">
        <path d="${path}"/>
      </svg>`;
  }
};
var RhAlert = /* @__PURE__ */ __name(class RhAlert2 extends LitElement {
  constructor() {
    super(...arguments);
    this.state = "default";
    this.variant = false;
    this.toast = false;
  }
  get icon() {
    return ICONS.get(this.state) ?? ``;
  }
  render() {
    return html`
      <div id="container" role="alert" aria-hidden="false">
        <div id="left-column">
          <div id="icon">${this.icon}</div>
        </div>
        <div id="middle-column">
          <header>
            <div id="header"><slot name="header"></slot></div>
            <div id="header-actions">
              <button id="close-button" aria-label="Close" confirm>${ICONS.get("close")}</button>
            </div>
          </header>
          <div id="description"><slot></slot></div>
          <footer><slot name="actions"></slot></footer>
        </div>
      </div>
    `;
  }
}, "RhAlert");
RhAlert.version = "{{version}}";
RhAlert.styles = rh_alert_css_default;
__decorate([
  property({ reflect: true })
], RhAlert.prototype, "state", void 0);
__decorate([
  property({ reflect: true, type: Boolean })
], RhAlert.prototype, "variant", void 0);
__decorate([
  property({ reflect: true, type: Boolean })
], RhAlert.prototype, "toast", void 0);
RhAlert = __decorate([
  customElement("rh-alert")
], RhAlert);

// elements/rh-blockquote/rh-blockquote.js
import { __decorate as __decorate2 } from "tslib";
import { LitElement as LitElement2, html as html2, css as css3, svg as svg2 } from "lit";
import { customElement as customElement2, property as property2 } from "lit/decorators.js";
import { pfelement } from "@patternfly/pfe-core/decorators.js";

// elements/rh-blockquote/rh-blockquote.css.js
import { css as css2 } from "lit";
var styles2 = css2`:host {
  color: var(--rh-color-black-900, #151515);
  margin: 0 auto;
  text-align: left;
  background-color: var(--rh-element-background-color);
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  line-height: var(--rh-line-height-body-text, 1.5);
}

@media (min-width: 700px) {
  :host {
    font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  }
}

blockquote {
  margin: 0;
}

blockquote ::slotted(p) {
  margin: var(--rh-length-md, 8px);
}

figcaption {
  color: var(--rh-color-black-600, #6a6e73);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

figcaption p {
  margin: 0;
}

#author {
  font-weight: 500;
}

svg {
  color: var(--rh-color-brand-red-500, #ee0000);
}

:host([align="center"]) {
  text-align: center;
}

:host([size="large"]) {
  font-size: var(--rh-font-size-body-text-2xl, 1.5rem);
  line-height: var(--rh-line-height-heading, 1.3);
}

@media (min-width: 700px) {
  :host([size="large"]) {
    font-size: var(--rh-font-size-heading-md, 1.75rem);
  }
}

:host([highlight]) {
  --BorderWidth: 8px;
  --BorderColor: #43adaf;
  --BorderStyle: solid;
}

:host([highlight]) figure {
  border-inline-start: var(--BorderWidth) var(--BorderStyle) var(--BorderColor);
  padding-inline-start: var(--rh-length-lg, 16px);
}

:host([color-palette="darkest"]) {
  color: var(--rh-color-white, #ffffff);
}

:host([color-palette="darkest"]) svg {
  color: var(--rh-color-brand-red-400, #ff3333);
}

:host([color-palette="darkest"]) figcaption {
  color: var(--rh-color-black-300, #d2d2d2);
}
`;
var rh_blockquote_css_default = styles2;

// elements/rh-blockquote/rh-blockquote.js
var RhBlockquote = /* @__PURE__ */ __name(class RhBlockquote2 extends LitElement2 {
  constructor() {
    super(...arguments);
    this.title = "Blockquote";
    this.colorPalette = "lightest";
    this.align = "inline-start";
    this.highlight = false;
    this.size = "default";
  }
  render() {
    const { align, highlight, colorPalette, size } = this;
    return html2`
      <figure id="container">
        <svg fill="currentColor" height="20px" width="29px" aria-hidden="true" role="img" viewBox="4.3799147605896 8.372319221496582 27.240171432495117 19.24776840209961">
          <g>
            <path d="M 10,15.38 H 5.63 C 5.7110461,11.992437 8.6223137,9.3690967 12,9.64 12.344668,9.6747086 12.649028,9.4157753 12.67,9.07 12.72,8.44 12.04,8.34 11.55,8.38 7.5982208,8.3522481 4.3799026,11.548123 4.38,15.5 V 27 C 4.3743,27.34475 4.6552502,27.6257 5,27.62 h 11 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 16.614493,18.346158 13.653842,15.385507 10,15.38 Z"></path>
            <path d="M 25,15.38 H 20.63 C 20.71105,11.992437 23.622314,9.3690967 27,9.64 27.342787,9.668766 27.643464,9.4129672 27.67,9.07 27.72,8.44 27.04,8.34 26.55,8.38 c -3.932267,0 -7.12,3.187733 -7.12,7.12 V 27 c -0.0057,0.34475 0.27525,0.6257 0.62,0.62 H 31 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 31.614493,18.346158 28.653842,15.385507 25,15.38 Z"></path>
          </g>
        </svg>
        <blockquote id="quote">
          <slot></slot>
        </blockquote>
        <figcaption>
          <p id="author"><slot name="author"></slot></p>
          <p id="title"><slot name="title"></slot></p>
        </figcaption>
      </figure>
    `;
  }
}, "RhBlockquote");
RhBlockquote.styles = rh_blockquote_css_default;
__decorate2([
  property2({ type: String })
], RhBlockquote.prototype, "title", void 0);
__decorate2([
  property2({ reflect: true, attribute: "color-palette" })
], RhBlockquote.prototype, "colorPalette", void 0);
__decorate2([
  property2({ reflect: true })
], RhBlockquote.prototype, "align", void 0);
__decorate2([
  property2({ reflect: true, type: Boolean })
], RhBlockquote.prototype, "highlight", void 0);
__decorate2([
  property2({ reflect: true })
], RhBlockquote.prototype, "size", void 0);
RhBlockquote = __decorate2([
  customElement2("rh-blockquote")
], RhBlockquote);

// elements/rh-context-provider/rh-context-provider.js
import { __decorate as __decorate3 } from "tslib";
import { html as html3, LitElement as LitElement3 } from "lit";
import { customElement as customElement3, property as property3 } from "lit/decorators.js";

// lib/context/color.js
import { __classPrivateFieldGet } from "tslib";
import { Logger } from "@patternfly/pfe-core/controllers/logger.js";
import { StyleController } from "@patternfly/pfe-core/controllers/style-controller.js";

// lib/context/event.js
function createContext(name, initialValue) {
  return {
    name,
    initialValue
  };
}
__name(createContext, "createContext");
var ContextEvent = class extends Event {
  constructor(context, callback, multiple) {
    super("context-request", { bubbles: true, composed: true });
    this.context = context;
    this.callback = callback;
    this.multiple = multiple;
  }
};
__name(ContextEvent, "ContextEvent");

// lib/context/context-color.css.js
import { css as css4 } from "lit";
var styles3 = css4`:host(:is([on=dark])) { --context: dark; }
:host(:is([on=light])) { --context: light; }
:host(:is([on=saturated])) { --context: saturated; }

/**
 * It's important for \`color-palette\` to take precedence over \`on\`
 * when setting \`--context\`, because a \`dark\` card that's on a \`light\`
 * background must create a new \`dark\` context for its descendents
 */

:host(:is([color-palette=darker],[color-palette=darkest])) {
  --context: dark;
  --rh-context-text: var(--rh-context-dark-color-text, #fff);
  --rh-context-text-muted: var(--rh-context-dark-color-text-muted, #d2d2d2);
  --rh-context-link: var(--rh-context-dark-color-text-link, #73bcf7);
  --rh-context-link-hover: var(--rh-context-dark-color-text-link-hover, #bee1f4);
  --rh-context-link-focus: var(--rh-context-dark-color-text-link-focus, #bee1f4);
  --rh-context-link-visited: var(--rh-context-dark-color-text-link-visited, #a18fff);
  --rh-context-link-visited-hover: var(--rh-context-dark-color-text-link-visited-hover, #cbc1ff);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration--on-dark, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-dark, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-dark, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-dark, none); */
}

:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])) {
  --context: light;
  --rh-context-text: var(--rh-context-light-color-text, #151515);
  --rh-context-text-muted: var(--rh-context-light-color-text-muted, #6a6e73);
  --rh-context-link: var(--rh-context-light-color-text-link, #06c);
  --rh-context-link-hover: var(--rh-context-light-color-text-link-hover, #004080);
  --rh-context-link-focus: var(--rh-context-light-color-text-link-focus, #004080);
  --rh-context-link-visited: var(--rh-context-light-color-text-link-visited, #6753ac);
  --rh-context-link-visited-hover: var(--rh-context-light-color-text-link-visited-hover, #1f0066);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited, none); */
}

/* FIXME: Saturated colours TBD */
/* :host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])) { */
/*   --context: saturated; */
/*   --rh-context-text: var(--rh-theme--color--text--on-saturated, #fff); */
/*   --rh-context-text-muted: var(--rh-theme--color--text-muted--on-saturated, #d2d2d2); */
/*   --rh-context-link: var(--rh-theme--color--link-on-saturated, #fff); */
/*   --rh-context-link-hover: var(--rh-theme--color--link-hover--on-saturated, #fafafa); */
/*   --rh-context-link-focus: var(--rh-theme--color--link-focus--on-saturated, #fafafa); */
/*   --rh-context-link-visited: var(--rh-theme--color--link-visited--on-saturated, #d2d2d2); */
/*   --rh-context-link-decoration: var(--rh-theme--link-decoration--on-saturated, underline); */
/*   --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-saturated, underline); */
/*   --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-saturated, underline); */
/*   --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-saturated, underline); */
/* } */

:host(:is([color-palette=lightest])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=lighter])) {
  --rh-context-background-color: var(--rh-color-surface-lighter, #f5f5f5);
}

:host(:is([color-palette=base])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=darker])) {
  --rh-context-background-color: var(--rh-color-surface-darker, #212427);
}

:host(:is([color-palette=darkest])) {
  --rh-context-background-color: var(--rh-color-surface-darkest, #151515);
}

/* FIXME: Saturated colors TBD */
/* :host(:is([color-palette=complement])) { */
/*   --rh-context-background-color: var(--rh-color-surface-complement, #004368); */
/* } */
/**/
/* :host(:is([color-palette=accent])) { */
/*   --rh-context-background-color: var(--rh-color-surface-accent, #00659c); */
/* } */

/* QUESTION: should be specified per component? */
/* :host(:is([color-palette])) { */
/*   background-color: var(--rh-context-background-color, var(--rh-color-surface-base)); */
/* } */

`;
var context_color_css_default = styles3;

// lib/context/color.js
var _ColorContextProvider_instances;
var _ColorContextProvider_onChildContextEvent;
var contextEvents = /* @__PURE__ */ new Map();
var ColorContextController = class {
  constructor(host, options) {
    this.host = host;
    this.prefix = "rh-";
    this.last = null;
    this.prefix = options?.prefix ?? "rh-";
    this.context = createContext(`${this.prefix}-color-context`);
    this.logger = new Logger(host);
    this.styleController = new StyleController(host, context_color_css_default);
    host.addController(this);
  }
};
__name(ColorContextController, "ColorContextController");
var ColorContextProvider = class extends ColorContextController {
  constructor(host, options) {
    super(host, options);
    _ColorContextProvider_instances.add(this);
    this.callbacks = /* @__PURE__ */ new Set();
    this.mo = new MutationObserver(() => this.update(this.contextVariable));
    this.style = window.getComputedStyle(host);
    this.attribute = options?.attribute ?? "color-palette";
  }
  get contextVariable() {
    return this.style.getPropertyValue("--context").trim() || null;
  }
  hostConnected() {
    this.host.addEventListener("context-request", (e) => __classPrivateFieldGet(this, _ColorContextProvider_instances, "m", _ColorContextProvider_onChildContextEvent).call(this, e));
    this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, "on"] });
    this.update(this.contextVariable);
    for (const [host, fired] of contextEvents) {
      host.dispatchEvent(fired);
    }
  }
  hostDisconnected() {
    this.callbacks.forEach((x) => this.callbacks.delete(x));
    this.mo.disconnect();
  }
  isColorContextEvent(event) {
    return event.target !== this.host && event.context.name === `${this.prefix}-color-context`;
  }
  update(next) {
    for (const cb of this.callbacks) {
      cb(next);
    }
  }
};
__name(ColorContextProvider, "ColorContextProvider");
_ColorContextProvider_instances = /* @__PURE__ */ new WeakSet(), _ColorContextProvider_onChildContextEvent = /* @__PURE__ */ __name(function _ColorContextProvider_onChildContextEvent2(event) {
  if (this.isColorContextEvent(event)) {
    event.stopPropagation();
    event.callback(this.contextVariable);
    if (event.multiple) {
      this.callbacks.add(event.callback);
    }
  }
}, "_ColorContextProvider_onChildContextEvent");
var ColorContextConsumer = class extends ColorContextController {
  constructor(host, options) {
    super(host, options);
    this.override = null;
    this.attribute ?? (this.attribute = "on");
  }
  hostConnected() {
    const event = new ContextEvent(this.context, (e) => this.contextCallback(e), true);
    this.override = this.host.getAttribute(this.attribute);
    this.host.dispatchEvent(event);
    contextEvents.set(this.host, event);
  }
  hostDisconnected() {
    this.dispose?.();
    this.dispose = void 0;
    contextEvents.delete(this.host);
  }
  contextCallback(value, dispose) {
    if (dispose && dispose !== this.dispose) {
      this.dispose?.();
      this.dispose = dispose;
    }
    this.update(value);
  }
  update(next) {
    if (!this.override && next !== this.last) {
      this.last = next;
      this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${next}`);
      if (next == null) {
        this.host.removeAttribute(this.attribute);
      } else {
        this.host.setAttribute(this.attribute, next);
      }
    }
  }
};
__name(ColorContextConsumer, "ColorContextConsumer");
function colorContextProvider(options) {
  return function(proto, _) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextProvider = new ColorContextProvider(instance, options);
    });
  };
}
__name(colorContextProvider, "colorContextProvider");
function colorContextConsumer(options) {
  return function(proto, _) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextConsumer = new ColorContextConsumer(instance, options);
    });
  };
}
__name(colorContextConsumer, "colorContextConsumer");

// elements/rh-context-provider/rh-context-provider.css.js
import { css as css5 } from "lit";
var styles4 = css5`:host {
  background-color: var(--rh-context-background-color);
  color: var(--rh-context-text);
}
`;
var rh_context_provider_css_default = styles4;

// elements/rh-context-provider/rh-context-provider.js
var ContextProvider = /* @__PURE__ */ __name(class ContextProvider2 extends LitElement3 {
  render() {
    return html3`<slot></slot>`;
  }
}, "ContextProvider");
ContextProvider.styles = [context_color_css_default, rh_context_provider_css_default];
__decorate3([
  colorContextProvider(),
  property3({ reflect: true, attribute: "color-palette" })
], ContextProvider.prototype, "colorPalette", void 0);
__decorate3([
  colorContextConsumer(),
  property3({ reflect: true })
], ContextProvider.prototype, "on", void 0);
ContextProvider = __decorate3([
  customElement3("rh-context-provider")
], ContextProvider);

// elements/rh-cta/rh-cta.js
import { __classPrivateFieldGet as __classPrivateFieldGet3, __classPrivateFieldSet, __decorate as __decorate4 } from "tslib";
import { LitElement as LitElement4, html as html4 } from "lit";
import { customElement as customElement4, property as property4 } from "lit/decorators.js";
import { Logger as Logger2 } from "@patternfly/pfe-core/controllers/logger.js";

// lib/DirController.js
import { __classPrivateFieldGet as __classPrivateFieldGet2 } from "tslib";
var _DirController_instances;
var _DirController_getDirContext;
var DirController = class {
  constructor(host) {
    this.host = host;
    _DirController_instances.add(this);
    this.dir = __classPrivateFieldGet2(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
  hostConnected() {
    this.dir = __classPrivateFieldGet2(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
};
__name(DirController, "DirController");
_DirController_instances = /* @__PURE__ */ new WeakSet(), _DirController_getDirContext = /* @__PURE__ */ __name(function _DirController_getDirContext2() {
  let host = this.host;
  while (host) {
    const dirContext = host.closest("[dir]");
    if (dirContext?.hasAttribute("dir")) {
      return dirContext?.getAttribute("dir") || "ltr";
    } else {
      ({ host } = host?.getRootNode() ?? {});
    }
  }
  return "ltr";
}, "_DirController_getDirContext");

// elements/rh-cta/rh-cta.js
import { classMap } from "lit/directives/class-map.js";
import "@patternfly/pfe-icon";

// elements/rh-cta/rh-cta.css.js
import { css as css6 } from "lit";
var styles5 = css6`:host {
  display: inline-flex;
  position: relative;
  z-index: 0;
  align-items: center;
  max-width: max-content;
  background-color: var(--rh-cta-background-color);
  border-radius: var(--rh-border-radius-default, 3px);
  border: var(--rh-border-width-sm, 1px);
  cursor: pointer;

  --rh-context-background-color: var(--rh-cta-background-color) !important;
}

::slotted(*) {
  white-space: normal;
  display: inline;
  padding: var(--rh-space-md, 8px) 0 !important;
  color: inherit !important;
  font-family: inherit !important;
  font-size: inherit !important;
  font-weight: inherit !important;
  line-height: inherit !important;
  text-decoration: inherit !important;
}

::slotted(button),
::slotted(input) {
  background-color: transparent;
  border: medium none;
  margin: 0;
  padding: 0;
  text-align: left;
}

#container {
  display: block;
  white-space: nowrap;
  min-width: 100%;
  color: var(--rh-cta-color);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-text-xl, 1.125rem);
  font-weight: var(--rh-font-weight-bold, 600);
  line-height: var(--rh-line-height-lg, 1.5);
  text-decoration: var(--rh-cta-text-decoration);

  --_arrow-size: 13px;
}

/** Inner border */
#container:after {
  --_offset: 1px;

  content: "";
  display: block;
  height: calc(100% - var(--_offset) * 2);
  width: calc(100% - var(--_offset) * 2);
  box-sizing: border-box;
  position: absolute;
  top: var(--_offset);
  left: var(--_offset);
  z-index: -1;
  border: var(--rh-border-width-sm, 1px);
  border-radius: 2px;
  outline: none;
}

/** Default variant arrow icon */
svg {
  display: inline;
  fill: currentcolor;
  width: var(--_arrow-size);
  height: var(--_arrow-size);
  margin-bottom: -1px;
  padding-inline: 3px;
  translate: 0 0;
  transition: translate var(--_trans);

  --_trans:
    var(--rh-animation-speed, 0.3s)
    var(--rh-animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));
}

#container.rtl svg {
  rotate: 180deg;
}

/*****************************************************************************
 * FOCUS STATE                                                               *
 *****************************************************************************/

:host(:is(:focus, :focus-within)),
:host(:is(:focus, :focus-within)) ::slotted(*),
::slotted(:focus) {
  outline: none !important;
}

:host(:is(:focus, :focus-within)) {
  border-color: var(--rh-cta-focus-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-focus-inner-border-color);
  --rh-cta-background-color: var(--rh-cta-focus-background-color) !important;
}

:host(:is(:focus, :focus-within)) #container {
  --rh-cta-color: var(--rh-cta-focus-color);
  --rh-cta-text-decoration: var(--rh-cta-focus-text-decoration);

  background-color:
    var(
      --rh-cta-focus-container-background-color,
      var(--rh-cta-focus-background-color)
    );
}

/*****************************************************************************
 * HOVER STATE                                                               *
 *****************************************************************************/

:host(:hover) {
  background-color: var(--rh-cta-hover-background-color);
  border-color: var(--rh-cta-hover-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-hover-inner-border-color);
}

:host(:hover) #container {
  color: var(--rh-cta-hover-color);

  --rh-cta-text-decoration: var(--rh-cta-hover-text-decoration);
}

:host(:hover) #container svg {
  translate: 3px 0;
}

:host(:hover) #container.rtl svg {
  translate: -3px 0;
}

/*****************************************************************************
 * ACTIVE STATE                                                              *
 *****************************************************************************/

:host(:active) {
  background-color: var(--rh-cta-active-background-color);

  --rh-cta-inner-border-color: var(--rh-cta-active-inner-border-color) !important;
}

:host(:active) #container {
  --rh-cta-background-color:
    var(
      --rh-cta-active-container-background-color,
      var(--rh-cta-active-background-color)
    );
}

/*****************************************************************************
 * VARIANTS                                                                  *
 *****************************************************************************/

:host([variant]) #container {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  height: 100%;
  background-color: transparent;
}

:host([variant\$="ary"]) ::slotted(*) {
  font-size: var(--rh-cta-font-size-priority, var(--rh-font-size-text-lg, 1rem));
  text-align: center;
}

:host([variant]) ::slotted(*) {
  padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px) !important;
}

/* prefer to group state-bound styles */
/* stylelint-disable-next-line no-descending-specificity */
:host([variant]) #container svg {
  display: none;
}

/*****************************************************************************
 * DEFAULT
 *****************************************************************************/

:host(:not([variant])) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: transparent;
  --rh-cta-color: var(--rh-color-interactive-blue, #0066cc);
  --rh-cta-hover-background-color: transparent;
  --rh-cta-hover-border-color: transparent;
  --rh-cta-hover-inner-border-color: transparent;
  --rh-cta-hover-color: var(--rh-context-color-link-hover, #004080);
  --rh-cta-hover-text-decoration: none;
  --rh-cta-focus-background-color: transparent;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-focus-container-background-color: #0066cc1a;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-context-light-color-focus, #0066cc);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-active-container-background-color: #0066cc1a;
  --rh-cta-active-inner-border-color: transparent;
  --rh-cta-active-text-decoration: none;
}

:host(:not([variant])[on="dark"]) {
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-focus-container-background-color: #73bcf740;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-active-container-background-color: #73bcf740;
  --rh-cta-active-text-decoration: none;
}

/*****************************************************************************
 * PRIMARY
 *****************************************************************************/

:host([variant="primary"]) {
  --rh-cta-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-border-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-active-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

/*****************************************************************************
 * SECONDARY
 *****************************************************************************/

:host([variant="secondary"]) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-hover-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-color: var(--rh-color-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-surface-light, #f0f0f0);
  --rh-cta-focus-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-inner-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-inner-border-color: var(--rh-color-surface-light, #f0f0f0);
}

:host([variant="secondary"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-border-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-focus-background-color: var(--rh-color-surface-dark, #3c3f42);
  --rh-cta-focus-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-active-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-inner-border-color: var(--rh-color-border-strong-on-light, #151515);
}

/*****************************************************************************
 * BRICK
 *****************************************************************************/

:host([variant="brick"]) #container {
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}

:host([variant="brick"]) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-hover-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-darkest, #004080);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-active-text-decoration: underline;
}

:host([variant="brick"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-active-text-decoration: underline;
}

/* chrome <= 103 */
@supports not (translate: 0 0) {
  svg {
    transform: translate(0, 0);
    transition: transform var(--_trans);
  }

  #container.rtl svg { transform: translate(0, 0) rotate(180deg); }
  :host(:hover) #container svg { transform: translate(3px, 0); }
  :host(:hover) #container.rtl svg { transform: translate(-3px, 0) rotate(180deg); }
}
`;
var rh_cta_css_default = styles5;

// elements/rh-cta/rh-cta.js
var _RhCta_instances;
var _RhCta_initializing;
var _RhCta_dir;
var _RhCta_logger;
var _RhCta_isDefault_get;
var supportedTags = ["a", "button"];
function isSupportedContent(el) {
  return !!el && supportedTags.includes(el.localName);
}
__name(isSupportedContent, "isSupportedContent");
var CONTENT = /* @__PURE__ */ new WeakMap();
function contentInitialized(el) {
  return !!el && !!CONTENT.get(el);
}
__name(contentInitialized, "contentInitialized");
function isButton(element) {
  return element.tagName.toLowerCase() === "button";
}
__name(isButton, "isButton");
var RhCta = /* @__PURE__ */ __name(class RhCta2 extends LitElement4 {
  constructor() {
    super(...arguments);
    _RhCta_instances.add(this);
    this.cta = null;
    _RhCta_initializing.set(this, false);
    _RhCta_dir.set(this, new DirController(this));
    _RhCta_logger.set(this, new Logger2(this));
  }
  render() {
    const rtl = __classPrivateFieldGet3(this, _RhCta_dir, "f").dir === "rtl";
    return html4`
      <span id="container" part="container" class="${classMap({ rtl })}">
        <slot @slotchange=${this.firstUpdated}></slot>${!__classPrivateFieldGet3(this, _RhCta_instances, "a", _RhCta_isDefault_get) && !this.icon ? "" : this.icon ? html4`
        <pfe-icon icon=${this.icon} size="sm"></pfe-icon>` : html4`&nbsp;<svg xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 31.56 31.56" focusable="false" width="1em">
          <path d="M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z" />
        </svg>`}
      </span>
    `;
  }
  firstUpdated() {
    let [cta] = this.shadowRoot?.querySelector("slot")?.assignedElements() ?? [];
    while (cta instanceof HTMLSlotElement) {
      [cta] = cta.assignedElements();
    }
    if (contentInitialized(cta) || __classPrivateFieldGet3(this, _RhCta_initializing, "f")) {
      return;
    }
    __classPrivateFieldSet(this, _RhCta_initializing, true, "f");
    if (!isSupportedContent(cta)) {
      return __classPrivateFieldGet3(this, _RhCta_logger, "f").warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);
    } else if (isButton(cta) && !this.variant) {
      return __classPrivateFieldGet3(this, _RhCta_logger, "f").warn(`Button tag is not supported semantically by the default link styles`);
    } else {
      this.cta = cta;
      CONTENT.set(this.cta, true);
      __classPrivateFieldSet(this, _RhCta_initializing, false, "f");
    }
  }
}, "RhCta");
_RhCta_initializing = /* @__PURE__ */ new WeakMap(), _RhCta_dir = /* @__PURE__ */ new WeakMap(), _RhCta_logger = /* @__PURE__ */ new WeakMap(), _RhCta_instances = /* @__PURE__ */ new WeakSet(), _RhCta_isDefault_get = /* @__PURE__ */ __name(function _RhCta_isDefault_get2() {
  return !this.hasAttribute("variant");
}, "_RhCta_isDefault_get");
RhCta.version = "{{version}}";
RhCta.styles = [rh_cta_css_default];
__decorate4([
  property4({ reflect: true })
], RhCta.prototype, "variant", void 0);
__decorate4([
  colorContextProvider(),
  property4({ reflect: true, attribute: "color-palette" })
], RhCta.prototype, "colorPalette", void 0);
__decorate4([
  colorContextConsumer(),
  property4({ reflect: true })
], RhCta.prototype, "on", void 0);
__decorate4([
  property4({ reflect: true })
], RhCta.prototype, "icon", void 0);
RhCta = __decorate4([
  customElement4("rh-cta")
], RhCta);

// elements/rh-demo/rh-demo.js
import { __decorate as __decorate5 } from "tslib";
import { LitElement as LitElement5, html as html5 } from "lit";
import { customElement as customElement5 } from "lit/decorators.js";

// elements/rh-demo/rh-demo.css.js
import { css as css7 } from "lit";
var styles6 = css7`pfe-accordion {
  --pfe-accordion--MaxWidth--content: none;
}

code-sample {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
}
`;
var rh_demo_css_default = styles6;

// elements/rh-demo/rh-demo.js
var RhDemo = /* @__PURE__ */ __name(class RhDemo2 extends LitElement5 {
  constructor() {
    super();
    import("@patternfly/pfe-accordion");
    import("@lrnwebcomponents/code-sample");
  }
  createRenderRoot() {
    return this;
  }
  firstUpdated() {
    this.syncCodeEditor();
  }
  syncCodeEditor() {
    const template = this.querySelector("template");
    if (template) {
      const output = this.renderRoot.querySelector(".rh-demo-code-area template");
      if (output) {
        output.innerHTML = template.innerHTML;
        this.syncPreview();
      }
    }
  }
  syncPreview() {
    const preview = this.renderRoot.querySelector(".rh-demo-preview-area");
    if (preview) {
      preview.innerHTML = this.renderRoot.querySelector(".rh-demo-code-area template")?.innerHTML || "";
    }
  }
  render() {
    return html5`
      <div class="rh-demo-preview-area"></div>
      <div part="code" class="rh-demo-code-area">
        <pfe-accordion>
          <pfe-accordion-header>
            <h3>View code</h3>
          </pfe-accordion-header>
          <pfe-accordion-panel>
            <code-sample>
              <template></template>
            </code-sample>
          </pfe-accordion-panel>
        </pfe-accordion>
      </div>
    `;
  }
}, "RhDemo");
RhDemo.styles = rh_demo_css_default;
RhDemo = __decorate5([
  customElement5("rh-demo")
], RhDemo);

// elements/rh-dialog/rh-dialog.js
import { __classPrivateFieldGet as __classPrivateFieldGet4, __decorate as __decorate7 } from "tslib";
import { html as html6 } from "lit";
import { customElement as customElement6, property as property5 } from "lit/decorators.js";
import { classMap as classMap2 } from "lit/directives/class-map.js";
import { observed } from "@patternfly/pfe-core/decorators/observed.js";
import { PfeModal } from "@patternfly/pfe-modal";

// lib/ScreenSizeController.js
import { __decorate as __decorate6 } from "tslib";
import { bound } from "@patternfly/pfe-core/decorators/bound.js";

// lib/tokens.js
import { unsafeCSS } from "lit";
var mobilePortraitBreakpoint = unsafeCSS`320px`;
var mobileLandscapeBreakpoint = unsafeCSS`576px`;
var tabletPortraitBreakpoint = unsafeCSS`768px`;
var tabletLandscapeBreakpoint = unsafeCSS`992px`;
var desktopSmallBreakpoint = unsafeCSS`1200px`;
var desktopLargeBreakpoint = unsafeCSS`1368px`;

// lib/ScreenSizeController.js
var ScreenSizeController = class {
  constructor(host, breakpoint, options) {
    this.host = host;
    this.breakpoint = breakpoint;
    this.mobile = ScreenSizeController.queries.get("mobile")?.matches ?? false;
    this.matches = /* @__PURE__ */ new Set();
    this.host.addController(this);
    this.size = "mobilePortrait";
    this.breakpoint = breakpoint;
    this.onChange = options?.onChange;
    for (const [key, list] of ScreenSizeController.queries) {
      if (key !== "mobile" && list.matches) {
        this.size = key;
        this.matches.add(key);
        this.evaluate();
      }
    }
  }
  hostConnected() {
    ScreenSizeController.instances.add(this);
  }
  hostDisconnected() {
    ScreenSizeController.instances.delete(this);
  }
  evaluate() {
    this.host.requestUpdate();
    if (this.breakpoint) {
      this.onChange?.(this.matches.has(this.breakpoint) ?? false);
    }
  }
};
__name(ScreenSizeController, "ScreenSizeController");
ScreenSizeController.instances = /* @__PURE__ */ new Set();
ScreenSizeController.queries = /* @__PURE__ */ new Map([
  ["mobile", matchMedia(`screen and (max-width: ${tabletPortraitBreakpoint})`)],
  ["mobilePortrait", matchMedia(`screen and (min-width: ${mobilePortraitBreakpoint})`)],
  ["mobileLandscape", matchMedia(`screen and (min-width: ${mobileLandscapeBreakpoint})`)],
  ["tabletPortrait", matchMedia(`screen and (min-width: ${tabletPortraitBreakpoint})`)],
  ["tabletLandscape", matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint})`)],
  ["desktopSmall", matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopSmallBreakpoint})`)],
  ["desktopLarge", matchMedia(`screen and (min-width: ${desktopLargeBreakpoint})`)]
]);
__decorate6([
  bound
], ScreenSizeController.prototype, "evaluate", null);
for (const [key, list] of ScreenSizeController.queries) {
  if (key === "mobile") {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        instance.mobile = event.matches;
        instance.evaluate();
      }
    });
  } else {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        if (event.matches) {
          instance.size = key;
          instance.matches.add(key);
        } else {
          instance.matches.delete(key);
        }
        instance.evaluate();
      }
    });
  }
}

// elements/rh-dialog/rh-dialog.css.js
import { css as css8 } from "lit";
var styles7 = css8`#rhds-wrapper {
  display: contents;
  font-family: "Red Hat Text", RedHatText, Overpass, Helvetica, sans-serif;

  --offset: var(--rh-space-md, 8px);
  --offset-top: var(--offset);
  --offset-right: var(--offset);
}

header ::slotted(:is(h1, h2, h3, h4, h5, h6)[slot="header"]) {
  font-family: "Red Hat Display", RedHatDisplay, Overpass, Helvetica, sans-serif;
}

[part="dialog"] {
  background-color: var(--rh-color-surface-lightest, #ffffff);
  max-width: min(90%, 1140px);
  border-radius: var(--rh-border-radius-default, 3px);
  color: var(--rh-color-text-primary-on-light, #151515);
  font-family: inherit;
}

[part="content"] {
  border-radius: var(--rh-border-radius-default, 3px);
}

[part="close-button"] {
  /* NB: hardcoded, no token colour matches this (yet) */
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

[part="close-button"]:is(:hover, :focus-within, :focus-visible) svg:is(svg, :hover) {
  fill: var(--rh-color-black-900, #151515);
}

:host([type="video"]) {
  --rh-dialog-close-button-color: white;
}

:host([type="video"]) [part="close-button"] {
  top: var(--offset-top);
  right: var(--offset-right);
  padding: var(--rh-space-sm, 6px);
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

:host([type="video"]) [part="content"] {
  overflow: hidden;
}

:host([type="video"][open]) [part="overlay"] {
  background-color: #151515;
  opacity: 0.65;
}

:host([type="video"][open]) [part="dialog"] {
  --_aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  aspect-ratio: var(--_aspect-ratio);
  max-width: min(90%, calc(90vh * var(--_aspect-ratio) + var(--offset-top)));
  padding: 0;
  margin: 0;
}

:host([type="video"]) #rhds-wrapper.mobile [part="close-button"] {
  --offset-right: var(--rh-space-sm, 6px);
}

:host([type="video"]) #container,
:host([type="video"]) [part="content"],
:host([type="video"]) ::slotted(:not([slot])) {
  aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  /* account for a 1px descrepency between dialog and container aspect ratio */
  width: calc(100% + 1px);
  position: absolute;
  inset: 0;
  max-height: none;
}
`;
var rh_dialog_css_default = styles7;

// elements/rh-dialog/rh-dialog.js
var _RhDialog_screenSize;
var RhDialog = /* @__PURE__ */ __name(class RhDialog2 extends PfeModal {
  constructor() {
    super(...arguments);
    _RhDialog_screenSize.set(this, new ScreenSizeController(this));
    this.open = false;
  }
  render() {
    const { mobile } = __classPrivateFieldGet4(this, _RhDialog_screenSize, "f");
    return html6`
      <div id="rhds-wrapper" class=${classMap2({ mobile })}>
        ${super.render()}
      </div>
    `;
  }
  async _openChanged(oldValue, newValue) {
    super._openChanged(oldValue, newValue);
    if (this.type === "video" && oldValue === true && newValue === false) {
      this.querySelector("video")?.pause?.();
      const iframe = this.querySelector("iframe");
      if (iframe?.src.match(/youtube/)) {
        const { pauseVideo: pauseVideo2 } = await Promise.resolve().then(() => (init_yt_api(), yt_api_exports));
        pauseVideo2(iframe);
      }
    }
  }
}, "RhDialog");
_RhDialog_screenSize = /* @__PURE__ */ new WeakMap();
RhDialog.version = "{{version}}";
RhDialog.styles = [...PfeModal.styles, rh_dialog_css_default];
RhDialog.closeOnOutsideClick = true;
__decorate7([
  property5({ reflect: true })
], RhDialog.prototype, "type", void 0);
__decorate7([
  observed,
  property5({ reflect: true, type: Boolean })
], RhDialog.prototype, "open", void 0);
RhDialog = __decorate7([
  customElement6("rh-dialog")
], RhDialog);

// elements/rh-footer/RhFooter.js
import { __classPrivateFieldGet as __classPrivateFieldGet6, __decorate as __decorate14 } from "tslib";
import { LitElement as LitElement11, html as html12 } from "lit";
import { html as staticHtml, unsafeStatic } from "lit/static-html.js";
import { property as property9 } from "lit/decorators.js";
import { classMap as classMap4 } from "lit/directives/class-map.js";
import { getRandomId as getRandomId2 } from "@patternfly/pfe-core/functions/random.js";
import { Logger as Logger5 } from "@patternfly/pfe-core/controllers/logger.js";

// elements/rh-footer/rh-footer.css.js
import { css as css9 } from "lit";
var styles8 = css9`:host {
  /* apply sensible defaults based on redhat standards. */
  color: var(--rh-color-white, #ffffff);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
  line-height: var(--rh-line-height-body-text, 1.5);
  font-weight: var(--_font-weight);
  font-size: initial;
  display: flex;
  flex-direction: column;
}

footer,
.global-base {
  --_icon-color: var(--rh-footer-icon-color, var(--rh-color-black-500, #8a8d90));
  --_icon-color-hover: var(--rh-footer-icon-color-hover, var(--rh-color-black-400, #b8bbbe));
  --_border-color: var(--rh-footer-border-color, var(--rh-color-black-600, #6a6e73));
  --_accent-color: var(--rh-footer-accent-color, var(--rh-color-brand-red-on-light, #ee0000));
  --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
  --_accordion-background: var(--rh-color-white, #ffffff);
  --_logo-width: var(--rh-size-icon-04, 40px);
  --_font-weight: var(--rh-font-weight-body-text-regular, 400);

  /* Style Accordions */
  --pfe-accordion--Color: var(--_accordion-background);
  --pfe-accordion--Color--expanded: var(--_accordion-background);
  --pfe-accordion--Color--active: var(--_accordion-background);
  --pfe-accordion--BackgroundColor: transparent;
  --pfe-accordion--BackgroundColor--active: transparent;
  --pfe-accordion--BackgroundColor--expanded: var(--rh-color-surface-darkest, #151515);
  --pfe-accordion--BorderColor: var(--_border-color);
  --pfe-accordion--FontSize--header: initial;
  --pfe-accordion--FontWeight--header: var(--_font-weight);
  --pfe-accordion--accent--expanded: var(--_accent-color);
  --pfe-accordion--accent--active: var(--_accent-color);
}

pfe-accordion {
  --pfe-context-background-color: transparent;
}

* {
  box-sizing: border-box;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

/**
 * Debugging
 */
:host([debug]) *:not(.spacer, .base, a, svg) {
  /* make sure we have some */
  min-height: var(--rh-length-xl, 24px);
  position: relative;
  outline: var(--rh-length-3xs, 2px) dotted red;
}

:host([debug]) *:not(.spacer, .base, a, svg):after {
  content: attr(part);
  display: block;
  position: absolute;
  color: white;
  background-color: darkslategray;
  padding: var(--rh-space-xs, 4px);
  top: 0;
  right: 0;
  font-family: var(--rh-font-family-code, RedHatMono, "Red Hat Mono", "Courier New", Courier, monospace);
  font-size: var(--rh-font-size-code-xs, 0.75rem);
}

/**
 * Regions
 */
.section {
  padding: var(--rh-space-2xl, 32px) var(--_section-side-gap);
}

.header {
  background-color: var(--rh-color-surface-darker, #212427);

  /* children should flex wrap on mobile */
  display: flex;
  flex-wrap: wrap;
  gap: var(--rh-space-2xl, 32px);
  align-items: center;
  position: relative;
}

.header:after {
  display: block;
  content: "";
  background-color: var(--_border-color);
  height: var(--rh-length-4xs, 1px);
  position: absolute;
  bottom: 0;
  width: calc(100% - var(--_section-side-gap) * 2);
  left: var(--_section-side-gap);
}

.header-primary {
  flex: 1 1 auto;
}

.header-secondary {
  /* secondary should be push to the end */

  /* of the line on mobile */
  flex: 0 1 auto;
}

.main {
  background-color: var(--rh-color-surface-darker, #212427);
  display: grid;
  gap: var(--rh-space-2xl, 32px);
}

.main-secondary {
  display: grid;
  gap: var(--pf-global--spacer--xl, 32px);
  place-items: baseline;
  place-content: start;
}

.global-base {
  --rh-footer-link-font-size: var(--rh-font-size-body-text-xs, 0.75rem);

  /* reduce the line-height for global links */
  line-height: 100%;
  background-color: var(--rh-color-surface-darkest, #151515);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "logo"
    "primary"
    "spacer"
    "secondary"
    "tertiary";
  gap: var(--rh-space-2xl, 32px) var(--rh-space-xl, 24px);
}

.global-logo {
  grid-area: logo;
  width: var(--_logo-width);
}

.global-logo-image {
  fill: var(--_icon-color);
}

.global-logo-image:is(:hover, :focus-within) {
  fill: var(--_icon-color-hover);
}

.global-primary {
  grid-area: primary;
}

.global-secondary {
  grid-area: secondary;
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-lg, 16px);
  justify-content: space-between;
}

.global-tertiary {
  grid-area: tertiary;
  display: grid;
  justify-content: start;
  align-items: start;
}

.global-links-primary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

.global-links-secondary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

/* reduce the font size of the content in these regions */
:is(.global-primary, .global-secondary, .global-tertiary) ::slotted(*) {
  font-size: var(--rh-font-size-body-text-xs, 0.75rem);
}

.logo {
  /* fix wierd problem where there is extra space below logo */
  line-height: 0px;
}

.social-links {
  display: flex;
  margin-inline-start: 0;
  padding-inline-start: 0;
}

.social-links rh-footer-links,
.social-links slot::slotted(rh-footer-links) {
  display: flex;
  flex-direction: row;
  gap: var(--rh-space-xl, 24px);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(ul) {
  padding: 0;
  margin: 0;
  display: contents;
}

.isMobile .links {
  --rh-footer-link-header-font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile .links ::slotted(ul) {
  --rh-footer-link-font-size: 1em;

  display: grid;
  grid-template-columns: 1fr;
  gap: calc(var(--rh-space-2xl, 32px) / 2);
}

[part="base"]:not(.isMobile) .links {
  display: grid;
  grid-template-columns: repeat(1fr, 25%);
  grid-template-rows: repeat(1, min-content auto);
  grid-auto-columns: minmax(0, 1fr);
  row-gap: var(--rh-space-lg, 16px);
  column-gap: var(--rh-space-2xl, 32px);
  grid-auto-flow: column;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(1)) {
  grid-column: 1/2;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(2)) {
  grid-column: 2/3;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(3)) {
  grid-column: 3/4;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(4)) {
  grid-column: 4/5;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(5)) {
  grid-column: 1/2;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(6)) {
  grid-column: 2/3;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(7)) {
  grid-column: 3/4;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(8)) {
  grid-column: 4/5;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(1))) {
  grid-column: 1/2;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(2))) {
  grid-column: 2/3;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(3))) {
  grid-column: 3/4;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(4))) {
  grid-column: 4/5;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(5))) {
  grid-column: 1/2;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(6))) {
  grid-column: 2/3;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(7))) {
  grid-column: 3/4;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(8))) {
  grid-column: 4/5;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(ul) {
  gap: var(--rh-footer-links-gap, var(--rh-space-lg, 16px));
  display: flex;
  flex-direction: column;
}

#footer-logo {
  width: var(--_logo-width);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  margin-block: 0 !important;
  margin-block-start: var(--_link-header-margin, 0) !important;
  font-size:
    var(
      --rh-footer-link-header-font-size,
      var(--rh-font-size-body-text-sm, 0.875rem)
    ) !important;
  color: var(--rh-color-white, #ffffff) !important; 
}
`;
var rh_footer_css_default = styles8;

// elements/rh-footer/rh-footer-responsive.css.js
import { css as css10 } from "lit";
var responsiveStyles = css10`
  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .global-base {
      grid-template-columns: 4fr 4fr 4fr;
      grid-template-areas:
        'logo      logo      logo'
        'primary   primary   primary'
        'spacer    spacer    spacer'
        'secondary secondary secondary';
    }
    .global-base:is(.hasTertiary) {
      grid-template-columns: 4fr 4fr 4fr;
      grid-template-areas:
        'logo      logo      logo'
        'primary   primary   primary'
        'spacer    spacer    spacer'
        'secondary secondary tertiary';
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    /* :not(.nothing) is a hack to match CSS specificity with :is(.hasTertiary) */
    .global-base:not(.nothing) {
      grid-template-columns: auto 10fr 2fr;
      grid-template-rows: max-content max-content;
      grid-template-areas:
        'logo primary  tertiary'
        'logo secondary tertiary';
      gap: 24px 32px;
    }

    .global-primary {
      display: flex;
    }

    .main {
      padding-bottom: 64px;
    }
  }

  .spacer {
    grid-area: spacer;
    border-bottom: 1px solid var(--_border-color);
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .spacer {
      display: none;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .global-tertiary {
      display: grid;
      justify-content: flex-end;
      align-items: center;
    }
  }

  @media screen and (min-width: ${mobilePortraitBreakpoint}) {
    .global-links-primary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
    .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .global-links-primary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }

    .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }

    .hasTertiary .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .global-links-primary {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    :not(.hasTertiary) .global-links-secondary {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 8px 24px;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    .global-logo {
      grid-area: logo;
    }

    .global-primary {
      grid-area: primary;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    /* hide the header border on mobile */
    .header:after {
      display: none;
    }

    /* force the mobile links menu to go flush against the header */
    .main {
      padding-top: 0;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopLargeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${desktopLargeBreakpoint}) {
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .isMobile .links ::slotted(ul) {
      grid-template-columns: 1fr 1fr;
    }
  }
`;

// lib/MatchMediaController.js
import { __decorate as __decorate8 } from "tslib";
import { bound as bound2 } from "@patternfly/pfe-core/decorators/bound.js";
var MatchMediaController = class {
  constructor(host, mediaQuery = "", options) {
    this.host = host;
    this.mediaQuery = mediaQuery;
    this.mediaQueryList = null;
    this.host.addController(this);
    this.mediaQueryList = matchMedia(mediaQuery);
    this.onChange = options?.onChange;
  }
  hostConnected() {
    this.evaluate();
    this.mediaQueryList?.addEventListener("change", this.evaluate);
  }
  hostDisconnected() {
    this.mediaQueryList?.removeEventListener("change", this.evaluate);
  }
  evaluate() {
    this.host.requestUpdate();
    this.onChange?.(this.mediaQueryList ?? matchMedia(this.mediaQuery));
  }
};
__name(MatchMediaController, "MatchMediaController");
__decorate8([
  bound2
], MatchMediaController.prototype, "evaluate", null);

// elements/rh-footer/rh-footer-social-link.js
import { __decorate as __decorate9 } from "tslib";
import { LitElement as LitElement6, html as html7 } from "lit";
import { customElement as customElement7, property as property6 } from "lit/decorators.js";
import { Logger as Logger3 } from "@patternfly/pfe-core/controllers/logger.js";

// elements/rh-footer/rh-footer-social-link.css.js
import { css as css11 } from "lit";
var styles9 = css11`:host {
  display: block;

  --pfe-icon--color: var(--_icon-color);
  --pfe-icon--size: var(--rh-footer--social-icon--size, var(--rh-size-icon-02, 24px));
}

:host(:is(:hover, :focus-within)) {
  --pfe-icon--color: var(--_icon-color-hover);
}
`;
var rh_footer_social_link_css_default = styles9;

// elements/rh-footer/rh-footer-social-link.js
var RhFooterSocialLink = /* @__PURE__ */ __name(class RhFooterSocialLink2 extends LitElement6 {
  constructor() {
    super();
    this.logger = new Logger3(this);
    this.icon = null;
    this.setAttribute("role", "listitem");
  }
  render() {
    return html7`<slot></slot>`;
  }
  updated() {
    this.updateLightdom();
  }
  updateLightdom() {
    const oldDiv = this.querySelector("a");
    if (oldDiv) {
      const newDiv = oldDiv.cloneNode(true);
      newDiv.querySelectorAll("[_rendered]").forEach((i) => i.remove());
      newDiv.innerHTML = `<pfe-icon icon="${this.icon}">${newDiv.innerHTML}</pfe-icon>`;
      newDiv.setAttribute("aria-label", newDiv.textContent || "");
      if (!newDiv.getAttribute("aria-label")) {
        this.logger.warn("Must add aria-label to links");
      }
      if (oldDiv.parentNode) {
        oldDiv.parentNode.replaceChild(newDiv, oldDiv);
      }
    }
  }
}, "RhFooterSocialLink");
RhFooterSocialLink.styles = rh_footer_social_link_css_default;
__decorate9([
  property6()
], RhFooterSocialLink.prototype, "icon", void 0);
RhFooterSocialLink = __decorate9([
  customElement7("rh-footer-social-link")
], RhFooterSocialLink);

// elements/rh-footer/rh-footer-links.js
import { __decorate as __decorate10 } from "tslib";
import { LitElement as LitElement7, html as html8 } from "lit";
import { customElement as customElement8, property as property7 } from "lit/decorators.js";
import { SlotController } from "@patternfly/pfe-core/controllers/slot-controller.js";
import { initializer } from "@patternfly/pfe-core/decorators.js";
import { Logger as Logger4 } from "@patternfly/pfe-core/controllers/logger.js";
import { getRandomId } from "@patternfly/pfe-core/functions/random.js";

// elements/rh-footer/rh-footer-links.css.js
import { css as css12 } from "lit";
var styles10 = css12`:host {
  display: flex;
  flex-direction: column;
  gap: 0.625em;
}

[part] {
  display: contents;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: 500;
  font-size: 0.875em;
  margin-top: 0;
  margin-bottom: 0;
}

:host([header-hidden]) .header ::slotted(*) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
`;
var rh_footer_links_css_default = styles10;

// elements/rh-footer/rh-footer-links.js
var RhFooterLinks = /* @__PURE__ */ __name(class RhFooterLinks2 extends LitElement7 {
  constructor() {
    super(...arguments);
    this.headerHidden = false;
    this.logger = new Logger4(this);
    this.slots = new SlotController(this, {
      slots: ["header"]
    });
  }
  updateAccessibility() {
    const header = this.querySelector('[slot="header"]');
    const ul = this.querySelector("ul");
    if (header && ul) {
      header.id || (header.id = getRandomId("rh-footer-links"));
      ul.setAttribute("aria-labelledby", header.id);
    } else {
      this.logger.warn("This links set doesn't have a valid header associated with it.");
    }
  }
  render() {
    return html8`
      <div part="header" class="header">
        <slot name="header"></slot>
      </div>
      <div part="default" class="default">
        <slot name="panel"></slot>
        <slot></slot>
      </div>
    `;
  }
}, "RhFooterLinks");
RhFooterLinks.styles = rh_footer_links_css_default;
__decorate10([
  property7({ type: Boolean, attribute: "header-hidden", reflect: true })
], RhFooterLinks.prototype, "headerHidden", void 0);
__decorate10([
  initializer()
], RhFooterLinks.prototype, "updateAccessibility", null);
RhFooterLinks = __decorate10([
  customElement8("rh-footer-links")
], RhFooterLinks);

// elements/rh-footer/rh-footer-block.js
import { __decorate as __decorate11 } from "tslib";
import { LitElement as LitElement8, html as html9 } from "lit";
import { customElement as customElement9 } from "lit/decorators.js";

// elements/rh-footer/rh-footer-block.css.js
import { css as css13 } from "lit";
var styles11 = css13`:host {
  display: block;
  position: relative;
}

/** Add margin to blocks that aren't first in the sidebar. */

/** Add the separator to blocks in the middle */
:host(:not(:last-of-type, :first-of-type)):after {
  content: "";
  display: block;
  height: 1px;
  width: 100%;
  margin-block-start: var(--rh-space-2xl, 32px);
  background: var(--_border-color);
}

::slotted(*) {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  text-decoration: none;
  max-width: 650px;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  font-size: var(--rh-font-size-body-text-sm, 0.875rem) !important;
  margin-block: 0 var(--rh-space-lg, 16px) !important;
  color: var(--rh-color-white, #ffffff) !important; 
}

::slotted(:last-child) {
  margin-block-end: 0 !important;
}

.content ::slotted(*) {
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}
`;
var rh_footer_block_css_default = styles11;

// elements/rh-footer/rh-footer-block.js
var RhFooterBlock = /* @__PURE__ */ __name(class RhFooterBlock2 extends LitElement8 {
  render() {
    return html9`
      <div class="base" part="base">
        <div class="header" part="header">
          <slot name="header"></slot>
        </div>
        <div class="content" part="content">
          <slot></slot>
        </div>
      </div>
    `;
  }
}, "RhFooterBlock");
RhFooterBlock.styles = rh_footer_block_css_default;
RhFooterBlock = __decorate11([
  customElement9("rh-footer-block")
], RhFooterBlock);

// elements/rh-footer/rh-global-footer.js
import { __classPrivateFieldGet as __classPrivateFieldGet5, __decorate as __decorate13 } from "tslib";
import { SlotController as SlotController2 } from "@patternfly/pfe-core/controllers/slot-controller.js";
import { LitElement as LitElement10, html as html11 } from "lit";
import { customElement as customElement11, property as property8 } from "lit/decorators.js";
import { classMap as classMap3 } from "lit/directives/class-map.js";

// elements/rh-footer/rh-footer-copyright.js
import { __decorate as __decorate12 } from "tslib";
import { LitElement as LitElement9, html as html10 } from "lit";
import { customElement as customElement10 } from "lit/decorators.js";

// elements/rh-footer/rh-footer-copyright.css.js
import { css as css14 } from "lit";
var styles12 = css14`:host {
  flex: 1 1 auto;
  display: block;
  width: 100%;
}
`;
var rh_footer_copyright_css_default = styles12;

// elements/rh-footer/rh-footer-copyright.js
var currentYear = new Date().getFullYear();
var RhFooterCopyright = /* @__PURE__ */ __name(class RhFooterCopyright2 extends LitElement9 {
  render() {
    return html10`<slot>&copy; ${currentYear} Red Hat, Inc.</slot>`;
  }
}, "RhFooterCopyright");
RhFooterCopyright.styles = rh_footer_copyright_css_default;
RhFooterCopyright = __decorate12([
  customElement10("rh-footer-copyright")
], RhFooterCopyright);

// elements/rh-footer/rh-global-footer.js
var _RhGlobalFooter_slots;
var RhGlobalFooter = /* @__PURE__ */ __name(class RhGlobalFooter2 extends LitElement10 {
  constructor() {
    super(...arguments);
    this.colorPalette = "darker";
    _RhGlobalFooter_slots.set(this, new SlotController2(this, {
      slots: ["primary-start", "primary-end", "secondary-start", "secondary-end", "links-primary", "links-secondary", "tertiary"]
    }));
  }
  render() {
    const hasTertiary = __classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("tertiary");
    return html11`
      <div class="section global-base ${classMap3({ hasTertiary })}" part="section base">
        <slot name="base">
          <div class="global-logo" part="logo">
            <slot name="logo">
              <a class="global-logo-anchor"
                  part="logo-anchor"
                  href="/en"
                  alt="Visit Red Hat">
                <svg title="Red Hat logo"
                    class="global-logo-image"
                    part="logo-image"
                    data-name="Layer 1"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 192 145">
                  <defs>
                    <style>
                      .band {
                        fill: transparent;
                      }
                    </style>
                  </defs>
                  <path class="band" d="M157.77,62.61a14,14,0,0,1,.31,3.42c0,14.88-18.1,17.46-30.61,17.46C78.83,83.49,42.53,53.26,42.53,44a6.43,6.43,0,0,1,.22-1.94l-3.66,9.06a18.45,18.45,0,0,0-1.51,7.33c0,18.11,41,45.48,87.74,45.48,20.69,0,36.43-7.76,36.43-21.77,0-1.08,0-1.94-1.73-10.13Z" />
                  <path class="cls-1" d="M127.47,83.49c12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42l-7.45-32.36c-1.72-7.12-3.23-10.35-15.73-16.6C124.89,8.69,103.76.5,97.51.5,91.69.5,90,8,83.06,8c-6.68,0-11.64-5.6-17.89-5.6-6,0-9.91,4.09-12.93,12.5,0,0-8.41,23.72-9.49,27.16A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33C22.27,52,.5,55,.5,74.22c0,31.48,74.59,70.28,133.65,70.28,45.28,0,56.7-20.48,56.7-36.65,0-12.72-11-27.16-30.83-35.78" />
                </svg>
              </a>
            </slot>
          </div>
          <div class="global-primary" part="primary">
            <slot name="primary">
              <div class="global-primary-start" part="primary-start" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("primary-start")}>
                <slot name="primary-start"></slot>
              </div>
              <div class="global-links-primary" part="links-primary" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("links-primary")}>
                <slot name="links-primary"></slot>
              </div>
              <div class="global-primary-end" part="primary-end" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("primary-end")}>
                <slot name="primary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="spacer" part="spacer"></div>
          <div class="global-secondary" part="secondary">
            <slot name="secondary">
              <div class="global-secondary-start" part="secondary-start" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("secondary-start")}>
                <slot name="secondary-start"></slot>
              </div>
              <div class="global-links-secondary" part="links-secondary" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("links-secondary")}>
                <slot name="links-secondary"></slot>
              </div>
              <div class="global-secondary-end" part="secondary-end" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("secondary-end")}>
                <slot name="secondary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="global-tertiary" part="tertiary" ?hidden=${!__classPrivateFieldGet5(this, _RhGlobalFooter_slots, "f").hasSlotted("tertiary")}>
            <slot name="tertiary"></slot>
          </div>
        </slot>
      </div>
    `;
  }
}, "RhGlobalFooter");
_RhGlobalFooter_slots = /* @__PURE__ */ new WeakMap();
RhGlobalFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate13([
  colorContextProvider(),
  property8({ reflect: true, attribute: "color-palette" })
], RhGlobalFooter.prototype, "colorPalette", void 0);
RhGlobalFooter = __decorate13([
  customElement11("rh-global-footer")
], RhGlobalFooter);

// elements/rh-footer/RhFooter.js
import "@patternfly/pfe-icon";
import "@patternfly/pfe-accordion";
var _RhFooter_instances;
var _RhFooter_matchMedia;
var _RhFooter_logger;
var _RhFooter_renderLinksTemplate;
function isHeader(tagName) {
  return !!tagName.match(/^H[1-6]$/i);
}
__name(isHeader, "isHeader");
var RhFooter = class extends LitElement11 {
  constructor() {
    super(...arguments);
    _RhFooter_instances.add(this);
    _RhFooter_matchMedia.set(this, new MatchMediaController(this, `(min-width: ${tabletLandscapeBreakpoint})`));
    _RhFooter_logger.set(this, new Logger5(this));
    this.colorPalette = "darker";
  }
  static getImportURL(relativeLocation) {
    const url = new URL(relativeLocation, import.meta.url);
    if (url.protocol === "file:") {
      return new URL(relativeLocation, window.location.href);
    }
    return url;
  }
  connectedCallback() {
    super.connectedCallback();
    this.updateAccessibility();
  }
  render() {
    const isMobile = !__classPrivateFieldGet6(this, _RhFooter_matchMedia, "f").mediaQueryList?.matches;
    return html12`
      <footer class="base ${classMap4({ isMobile })}" part="base">
        <slot name="base">
          <div class="section header" part="section header">
            <slot name="header">
              <div class="header-primary" part="header-primary">
                <slot name="header-primary">
                  <div class="logo" part="logo">
                    <slot name="logo">
                      <a href="/en">
                        <img alt="Red Hat" src="https://static.redhat.com/libs/redhat/brand-assets/2/corp/logo--on-dark.svg"/>
                      </a>
                    </slot>
                  </div>
                </slot>
              </div>
              <div class="header-secondary" part="header-secondary">
                <slot name="header-secondary">
                  <div class="social-links">
                    <rh-footer-links class="social-links-item"
                      part="social-links"
                      aria-label="Red Hat social media links">
                      <slot name="social-links"></slot>
                    </rh-footer-links>
                  </div>
                </slot>
              </div>
            </slot>
          </div>
          <div class="section main" part="section main">
            <slot name="main">
              <div class="main-primary" part="main-primary">
                <slot name="main-primary">
                  <div class="links" part="links">
                    ${__classPrivateFieldGet6(this, _RhFooter_instances, "m", _RhFooter_renderLinksTemplate).call(this, isMobile)}
                  </div>
                </slot>
              </div>
              <div class="main-secondary" part="main-secondary">
                <slot name="main-secondary"></slot>
              </div>
            </slot>
          </div>
          <slot name="global"></slot>
        </slot>
      </footer>
    `;
  }
  updateAccessibility() {
    const listsSelector = ":is([slot^=links],[slot=footer-links-primary],[slot=footer-links-secondary]):is(ul)";
    for (const list of this.querySelectorAll(listsSelector)) {
      if (!list.hasAttribute("aria-labelledby")) {
        const header = isHeader(list.previousElementSibling?.tagName ?? "") ? list.previousElementSibling : null;
        if (!header) {
          return __classPrivateFieldGet6(this, _RhFooter_logger, "f").warn("This links set doesn't have a valid header associated with it.");
        } else {
          header.id || (header.id = getRandomId2("rh-footer"));
          list.setAttribute("aria-labelledby", header.id);
        }
      }
    }
  }
};
__name(RhFooter, "RhFooter");
_RhFooter_matchMedia = /* @__PURE__ */ new WeakMap(), _RhFooter_logger = /* @__PURE__ */ new WeakMap(), _RhFooter_instances = /* @__PURE__ */ new WeakSet(), _RhFooter_renderLinksTemplate = /* @__PURE__ */ __name(function _RhFooter_renderLinksTemplate2(isMobile = false) {
  const children = Array.from(this.querySelectorAll(":scope > [slot^=links]"), (ref) => ({
    type: isHeader(ref.tagName) ? "header" : "panel",
    ref
  }));
  children.forEach(({ ref }, i) => ref.setAttribute("slot", isMobile ? `links-${i}` : "links"));
  return !(isMobile && children) ? html12`
      <slot name="links"></slot>
      ` : html12`
      <pfe-accordion on="dark" color-palette="darkest">${children.map((child, index) => staticHtml`
        <pfe-accordion-${unsafeStatic(child.type)} part="links-accordion-${child.type}">
          <slot name="links-${index}"></slot>
         </pfe-accordion-${unsafeStatic(child.type)}>`)}
      </pfe-accordion>
    `;
}, "_RhFooter_renderLinksTemplate");
RhFooter.version = "{{version}}";
RhFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate14([
  colorContextProvider(),
  property9({ reflect: true, attribute: "color-palette" })
], RhFooter.prototype, "colorPalette", void 0);

// elements/rh-footer/rh-footer.js
customElements.define("rh-footer", RhFooter);

// elements/rh-pagination/rh-pagination.js
import { __classPrivateFieldGet as __classPrivateFieldGet7, __classPrivateFieldSet as __classPrivateFieldSet2, __decorate as __decorate15 } from "tslib";
import { LitElement as LitElement12, html as html13 } from "lit";
import { customElement as customElement12, property as property10, query } from "lit/decorators.js";
import { classMap as classMap5 } from "lit/directives/class-map.js";
import { ifDefined } from "lit/directives/if-defined.js";
import { Logger as Logger6 } from "@patternfly/pfe-core/controllers/logger.js";

// elements/rh-pagination/rh-pagination.css.js
import { css as css15 } from "lit";
var styles13 = css15`:host {
  display: block;
  min-height: 4em;
}

[hidden] {
  display: none !important;
}

#container {
  display: flex;
  gap: calc(var(--rh-space-xs, 4px) / 2);
  flex-wrap: wrap;
}

nav {
  display: contents;
}

svg {
  fill: currentcolor;
}

.stepper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 50px;
  width: 50px;
  background: var(--rh-color-surface-light, #f0f0f0);
  outline: none;
  color: var(--rh-pagination-stepper-color, var(--rh-color-black-600, #6a6e73));
  box-sizing: border-box;
}

.stepper:focus {
  border: 2px solid var(--rh-color-border-interactive-on-light, #0066cc);
}

.stepper svg {
  height: 14px;
}

:is(#next, #last) svg {
  rotate: 180deg;
}

.stepper[inert] {
  pointer-events: none;
  color: var(--rh-pagination-background-focused, var(--rh-color-black-300, #d2d2d2));
}

/* MOBILE styles */

.mobile .stepper:hover {
  background: var(--rh-color-black-300, #d2d2d2);
}

#numeric {
  margin-block-start: var(--rh-space-2xl, 32px);
  width: 100%;
  display: flex;
  align-items: center;
  flex: 1 1 100%;
  gap: 0.5em;
}

input {
  height: var(--rh-length-2xl, 32px);
  width: var(--rh-length-4xl, 64px);
  font-size: var(--rh-font-size-body-text-md, 1rem);
  background: var(--rh-color-surface-lightest, #ffffff);
  border: 1px solid var(--rh-color-black-300, #d2d2d2);
  border-block-end: 1px solid var(--rh-color-black-600, #6a6e73);
  box-sizing: border-box;
  padding: 2px;
}

input:focus {
  outline: none;
  border: 2px solid var(--rh-pagination-accent-color, var(--rh-color-interactive-blue, #0066cc));
  padding: 1px;
}

input:invalid {
  border-block-end: 1px solid var(--rh-color-border-danger-on-light, #ee0000);
}

:host([on="dark"]) input:invalid {
  border-block-end: 1px solid var(--rh-color-border-danger-on-dark, #ff3333);
}

#numeric a {
  text-decoration: none;
  color: var(--rh-color-interactive-blue-darker, #0066cc);
}

#numeric a:hover {
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

#numeric a:visited {
  color: var(--rh-color-interactive-purple-darker, #6753ac);
}

#numeric a:visited:hover {
  color: var(--rh-color-interactive-purple-darkest, #1f0066);
}

@media (min-width: 700px) {
  #numeric {
    margin-block-start: 0;
    margin-inline-start: var(--rh-space-xl, 24px);
    flex: 1 0 0%;
  }

  #container {
    flex-wrap: nowrap;
  }
}
`;
var rh_pagination_css_default = styles13;

// elements/rh-pagination/rh-pagination.js
var _RhPagination_instances;
var _RhPagination_mo;
var _RhPagination_screen;
var _RhPagination_logger;
var _RhPagination_ol;
var _RhPagination_links;
var _RhPagination_firstLink;
var _RhPagination_lastLink;
var _RhPagination_nextLink;
var _RhPagination_prevLink;
var _RhPagination_currentLink;
var _RhPagination_currentIndex;
var _RhPagination_currentPage_get;
var _RhPagination_update;
var _RhPagination_getOverflow;
var _RhPagination_getCurrentLink;
var _RhPagination_updateLightDOMRefs;
var _RhPagination_checkValidity;
var _RhPagination_go;
var _RhPagination_onKeyup;
var _RhPagination_onChange;
var L1 = html13`
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 14">
    <path d="M.3 6.26 6.24.3C6.63-.1 7.3-.1 7.7.3l.99.99c.4.4.4 1.07 0 1.48L4.49 7l4.2 4.22c.41.4.41 1.07 0 1.48l-.98 1c-.41.4-1.07.4-1.48 0L.31 7.73a1.05 1.05 0 0 1 0-1.48Z"/>
  </svg>`;
var L2 = html13`
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 17.44 14">
    <path d="M8.7 6.26 14.66.3a1.05 1.05 0 0 1 1.49 0l.98.99c.42.4.42 1.07 0 1.48L12.92 7l4.2 4.22c.42.4.42 1.07 0 1.48l-.98 1c-.41.4-1.08.4-1.48 0L8.7 7.73a1.05 1.05 0 0 1 0-1.48zM.3 7.74l5.96 5.95c.4.41 1.07.41 1.48 0l.99-.99c.4-.4.4-1.07 0-1.48L4.52 7l4.21-4.22c.41-.4.41-1.07 0-1.48l-.99-1a1.05 1.05 0 0 0-1.48 0L.31 6.27a1.05 1.05 0 0 0 0 1.48z"/>
  </svg>`;
var RhPagination = /* @__PURE__ */ __name(class RhPagination2 extends LitElement12 {
  constructor() {
    super(...arguments);
    _RhPagination_instances.add(this);
    this.overflow = null;
    this.label = "Page navigation";
    this.labelFirst = "first page";
    this.labelPrevious = "previous page";
    this.labelNext = "next page";
    this.labelLast = "last page";
    _RhPagination_mo.set(this, new MutationObserver(() => __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_update).call(this)));
    _RhPagination_screen.set(this, new ScreenSizeController(this));
    _RhPagination_logger.set(this, new Logger6(this));
    _RhPagination_ol.set(this, this.querySelector("ol"));
    _RhPagination_links.set(this, __classPrivateFieldGet7(this, _RhPagination_ol, "f")?.querySelectorAll("li a"));
    _RhPagination_firstLink.set(this, null);
    _RhPagination_lastLink.set(this, null);
    _RhPagination_nextLink.set(this, null);
    _RhPagination_prevLink.set(this, null);
    _RhPagination_currentLink.set(this, __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_getCurrentLink).call(this));
    _RhPagination_currentIndex.set(this, 0);
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet7(this, _RhPagination_mo, "f").observe(this, { childList: true, subtree: true });
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    __classPrivateFieldGet7(this, _RhPagination_mo, "f").disconnect();
  }
  update(changed) {
    __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_update).call(this);
    super.update(changed);
  }
  render() {
    const { mobile, size } = __classPrivateFieldGet7(this, _RhPagination_screen, "f");
    const { label, labelFirst, labelPrevious, labelNext, labelLast } = this;
    const firstHref = __classPrivateFieldGet7(this, _RhPagination_currentLink, "f") === __classPrivateFieldGet7(this, _RhPagination_firstLink, "f") ? void 0 : __classPrivateFieldGet7(this, _RhPagination_firstLink, "f")?.href;
    const prevHref = __classPrivateFieldGet7(this, _RhPagination_prevLink, "f")?.href;
    const nextHref = __classPrivateFieldGet7(this, _RhPagination_nextLink, "f")?.href;
    const lastHref = __classPrivateFieldGet7(this, _RhPagination_currentLink, "f") === __classPrivateFieldGet7(this, _RhPagination_lastLink, "f") ? void 0 : __classPrivateFieldGet7(this, _RhPagination_lastLink, "f")?.href;
    const currentPage = __classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get).toString();
    return html13`
      <div id="container" class=${classMap5({ mobile, [size]: true })}>
        <a id="first" class="stepper" href=${ifDefined(firstHref)} ?inert=${!firstHref} aria-label=${labelFirst}>${L2}</a>
        <a id="prev" class="stepper" href=${ifDefined(prevHref)} ?inert=${!prevHref} aria-label=${labelPrevious}>${L1}</a>

        <nav ?hidden=${mobile} ?inert=${mobile} aria-label=${label}>
          <slot></slot>
        </nav>

        <a id="next" class="stepper" href=${ifDefined(nextHref)} ?inert=${!nextHref} aria-label=${labelNext}>${L1}</a>
        <a id="last" class="stepper" href=${ifDefined(lastHref)} ?inert=${!lastHref} aria-label=${labelLast}>${L2}</a>

        <div id="numeric">
          <span id="go-to-page">
            <slot name="go-to-page">Go to page</slot>
          </span>
          <input inputmode="numeric"
              required
              min=1 max=${__classPrivateFieldGet7(this, _RhPagination_links, "f")?.length ?? 1}
              aria-labelledby="go-to-page"
              @change=${__classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_onChange)}
              @keyup=${__classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_onKeyup)}
              .value=${currentPage}>
          <slot name="out-of">of</slot>
          <a href=${ifDefined(lastHref)}>${__classPrivateFieldGet7(this, _RhPagination_links, "f")?.length}</a>
        </div>
      </div>
    `;
  }
  first() {
    return __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "first");
  }
  prev() {
    return __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "prev");
  }
  next() {
    return __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "next");
  }
  last() {
    return __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "last");
  }
  go(page) {
    return __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, page);
  }
}, "RhPagination");
_RhPagination_mo = /* @__PURE__ */ new WeakMap(), _RhPagination_screen = /* @__PURE__ */ new WeakMap(), _RhPagination_logger = /* @__PURE__ */ new WeakMap(), _RhPagination_ol = /* @__PURE__ */ new WeakMap(), _RhPagination_links = /* @__PURE__ */ new WeakMap(), _RhPagination_firstLink = /* @__PURE__ */ new WeakMap(), _RhPagination_lastLink = /* @__PURE__ */ new WeakMap(), _RhPagination_nextLink = /* @__PURE__ */ new WeakMap(), _RhPagination_prevLink = /* @__PURE__ */ new WeakMap(), _RhPagination_currentLink = /* @__PURE__ */ new WeakMap(), _RhPagination_currentIndex = /* @__PURE__ */ new WeakMap(), _RhPagination_instances = /* @__PURE__ */ new WeakSet(), _RhPagination_currentPage_get = /* @__PURE__ */ __name(function _RhPagination_currentPage_get2() {
  return __classPrivateFieldGet7(this, _RhPagination_currentIndex, "f") + 1;
}, "_RhPagination_currentPage_get"), _RhPagination_update = /* @__PURE__ */ __name(function _RhPagination_update2() {
  this.querySelector('[aria-current="page"]')?.removeAttribute("aria-current");
  __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_updateLightDOMRefs).call(this);
  this.overflow = __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_getOverflow).call(this);
  __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_checkValidity).call(this);
}, "_RhPagination_update"), _RhPagination_getOverflow = /* @__PURE__ */ __name(function _RhPagination_getOverflow2() {
  const overflowAt = 9;
  const length = __classPrivateFieldGet7(this, _RhPagination_links, "f")?.length ?? 0;
  if (length <= overflowAt) {
    return null;
  }
  const current = __classPrivateFieldGet7(this, _RhPagination_currentIndex, "f") + 1;
  if (current > overflowAt - 4 && current < length - 4) {
    return "both";
  } else if (current <= overflowAt - 4) {
    return "end";
  } else {
    return "start";
  }
}, "_RhPagination_getOverflow"), _RhPagination_getCurrentLink = /* @__PURE__ */ __name(function _RhPagination_getCurrentLink2() {
  const ariaCurrent = this.querySelector('li a[aria-current="page"]');
  if (ariaCurrent) {
    return ariaCurrent;
  }
  for (const link of __classPrivateFieldGet7(this, _RhPagination_links, "f") ?? []) {
    const url = new URL(link.href);
    if (url.pathname === location.pathname && url.search === location.search && url.hash === location.hash) {
      return link;
    }
  }
  __classPrivateFieldGet7(this, _RhPagination_logger, "f").warn("could not determine current link");
  return null;
}, "_RhPagination_getCurrentLink"), _RhPagination_updateLightDOMRefs = /* @__PURE__ */ __name(function _RhPagination_updateLightDOMRefs2() {
  __classPrivateFieldSet2(this, _RhPagination_ol, this.querySelector("ol"), "f");
  __classPrivateFieldSet2(this, _RhPagination_links, this.querySelectorAll("li a"), "f");
  __classPrivateFieldSet2(this, _RhPagination_firstLink, this.querySelector("li:first-child a"), "f");
  __classPrivateFieldSet2(this, _RhPagination_lastLink, this.querySelector("li:last-child a"), "f");
  __classPrivateFieldSet2(this, _RhPagination_currentLink, __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_getCurrentLink).call(this), "f");
  if (__classPrivateFieldGet7(this, _RhPagination_currentLink, "f")) {
    const links = Array.from(__classPrivateFieldGet7(this, _RhPagination_links, "f"));
    __classPrivateFieldSet2(this, _RhPagination_currentIndex, links.indexOf(__classPrivateFieldGet7(this, _RhPagination_currentLink, "f")), "f");
    __classPrivateFieldSet2(this, _RhPagination_prevLink, __classPrivateFieldGet7(this, _RhPagination_links, "f")[__classPrivateFieldGet7(this, _RhPagination_currentIndex, "f") - 1], "f");
    __classPrivateFieldSet2(this, _RhPagination_nextLink, __classPrivateFieldGet7(this, _RhPagination_links, "f")[__classPrivateFieldGet7(this, _RhPagination_currentIndex, "f") + 1], "f");
    for (const link of this.querySelectorAll("[data-page]")) {
      link.removeAttribute("data-page");
    }
    __classPrivateFieldGet7(this, _RhPagination_currentLink, "f").closest("li")?.setAttribute("data-page", "current");
    __classPrivateFieldGet7(this, _RhPagination_prevLink, "f")?.closest("li")?.setAttribute("data-page", "previous");
    __classPrivateFieldGet7(this, _RhPagination_nextLink, "f")?.closest("li")?.setAttribute("data-page", "next");
    if (__classPrivateFieldGet7(this, _RhPagination_currentLink, "f")?.getAttribute("aria-current") !== "page") {
      __classPrivateFieldGet7(this, _RhPagination_currentLink, "f")?.setAttribute("aria-current", "page");
    }
  }
}, "_RhPagination_updateLightDOMRefs"), _RhPagination_checkValidity = /* @__PURE__ */ __name(function _RhPagination_checkValidity2() {
  let message = "";
  if (!__classPrivateFieldGet7(this, _RhPagination_ol, "f") || this.children.length > 1) {
    message = "must have a single <ol> element as it's only child";
  }
  if (this.input && __classPrivateFieldGet7(this, _RhPagination_links, "f")) {
    if (Number.isNaN(__classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get))) {
      message = `${__classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get)} is not a valid page number`;
    } else if (__classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get) > __classPrivateFieldGet7(this, _RhPagination_links, "f").length || __classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get) < 1) {
      message = `cannot navigate to page ${__classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get)}`;
    }
    this.input.setCustomValidity(message);
  }
  if (message) {
    __classPrivateFieldGet7(this, _RhPagination_logger, "f").warn(this.input?.validationMessage || "could not navigate");
  }
  this.input?.reportValidity();
  return !message;
}, "_RhPagination_checkValidity"), _RhPagination_go = /* @__PURE__ */ __name(async function _RhPagination_go2(id) {
  await this.updateComplete;
  if (typeof id === "number") {
    const link = __classPrivateFieldGet7(this, _RhPagination_links, "f")?.[id - 1];
    link?.click?.();
  } else {
    this.shadowRoot?.getElementById(id)?.click();
  }
  this.requestUpdate();
  await this.updateComplete;
  return __classPrivateFieldGet7(this, _RhPagination_currentIndex, "f");
}, "_RhPagination_go"), _RhPagination_onKeyup = /* @__PURE__ */ __name(function _RhPagination_onKeyup2(event) {
  if (!(event.target instanceof HTMLInputElement) || !__classPrivateFieldGet7(this, _RhPagination_links, "f")) {
    return;
  }
  const max = __classPrivateFieldGet7(this, _RhPagination_links, "f").length.toString();
  const input = event.target;
  if (parseInt(input.value) > parseInt(max)) {
    input.value = max;
  }
}, "_RhPagination_onKeyup"), _RhPagination_onChange = /* @__PURE__ */ __name(function _RhPagination_onChange2() {
  if (!this.input || !__classPrivateFieldGet7(this, _RhPagination_links, "f")) {
    return;
  }
  const inputNum = parseInt(this.input.value);
  __classPrivateFieldSet2(this, _RhPagination_currentIndex, inputNum - 1, "f");
  if (__classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_checkValidity).call(this)) {
    __classPrivateFieldGet7(this, _RhPagination_instances, "m", _RhPagination_go).call(this, __classPrivateFieldGet7(this, _RhPagination_instances, "a", _RhPagination_currentPage_get));
  }
}, "_RhPagination_onChange");
RhPagination.version = "{{version}}";
RhPagination.styles = [rh_pagination_css_default];
__decorate15([
  property10({ reflect: true })
], RhPagination.prototype, "overflow", void 0);
__decorate15([
  property10()
], RhPagination.prototype, "label", void 0);
__decorate15([
  property10({ attribute: "label-first" })
], RhPagination.prototype, "labelFirst", void 0);
__decorate15([
  property10({ attribute: "label-previous" })
], RhPagination.prototype, "labelPrevious", void 0);
__decorate15([
  property10({ attribute: "label-next" })
], RhPagination.prototype, "labelNext", void 0);
__decorate15([
  property10({ attribute: "label-last" })
], RhPagination.prototype, "labelLast", void 0);
__decorate15([
  query("input")
], RhPagination.prototype, "input", void 0);
RhPagination = __decorate15([
  customElement12("rh-pagination")
], RhPagination);

// elements/rh-secondary-nav/rh-secondary-nav.js
import { __classPrivateFieldGet as __classPrivateFieldGet10, __decorate as __decorate20 } from "tslib";
import { LitElement as LitElement17, html as html18 } from "lit";
import { customElement as customElement17, property as property13, query as query4, state as state4 } from "lit/decorators.js";
import { classMap as classMap8 } from "lit/directives/class-map.js";
import { bound as bound4, observed as observed5 } from "@patternfly/pfe-core/decorators.js";
import { Logger as Logger9 } from "@patternfly/pfe-core/controllers/logger.js";

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
import { __classPrivateFieldGet as __classPrivateFieldGet8, __decorate as __decorate16 } from "tslib";
import { html as html14, LitElement as LitElement13 } from "lit";
import { customElement as customElement13 } from "lit/decorators.js";
import { getRandomId as getRandomId3 } from "@patternfly/pfe-core/functions/random.js";
import { Logger as Logger7 } from "@patternfly/pfe-core/controllers/logger.js";

// lib/functions.js
function isHeadingElement(node) {
  return node instanceof HTMLHeadingElement;
}
__name(isHeadingElement, "isHeadingElement");

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.css.js
import { css as css16 } from "lit";
var styles14 = css16`:host {
  display: block;
}

::slotted([slot="header"]) {
  padding: 0;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

::slotted([slot="links"]:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--rh-font-size-body-text-md, 1rem);
}

::slotted([slot="cta"]) {
  padding: var(--rh-space-xl, 24px) 0 0;
}

::slotted([slot="cta"]:last-of-type) {
  padding: var(--rh-space-xl, 24px) 0;
}

@media screen and (min-width: 992px) {
  ::slotted([slot="header"]) {
    padding: 0;
  }

  ::slotted([slot="links"]) {
    padding: 0;
    margin: 0;
  }
}
`;
var rh_secondary_nav_menu_section_css_default = styles14;

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
var _RhSecondaryNavMenuSection_instances;
var _RhSecondaryNavMenuSection_logger;
var _RhSecondaryNavMenuSection_updateAccessibility;
var RhSecondaryNavMenuSection = /* @__PURE__ */ __name(class RhSecondaryNavMenuSection2 extends LitElement13 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavMenuSection_instances.add(this);
    _RhSecondaryNavMenuSection_logger.set(this, new Logger7(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet8(this, _RhSecondaryNavMenuSection_instances, "m", _RhSecondaryNavMenuSection_updateAccessibility).call(this);
  }
  render() {
    return html14`
      <section part="container">
        <slot name="header"></slot>
        <slot name="links"></slot>
        <slot name="cta"></slot>
      </section>
    `;
  }
}, "RhSecondaryNavMenuSection");
_RhSecondaryNavMenuSection_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavMenuSection_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavMenuSection_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNavMenuSection_updateAccessibility2() {
  const lists = this.querySelectorAll(':is([slot="links"]):is(ul, ol)');
  for (const list of lists) {
    if (!list.hasAttribute("aria-labelledby")) {
      const header = isHeadingElement(list.previousElementSibling) ? list.previousElementSibling : null;
      if (!header) {
        return __classPrivateFieldGet8(this, _RhSecondaryNavMenuSection_logger, "f").warn("This links set doesn't have a valid header associated with it.");
      } else {
        header.id || (header.id = getRandomId3("rh-secondary-nav-menu-section"));
        list.setAttribute("aria-labelledby", header.id);
      }
    }
  }
}, "_RhSecondaryNavMenuSection_updateAccessibility");
RhSecondaryNavMenuSection.styles = [rh_secondary_nav_menu_section_css_default];
RhSecondaryNavMenuSection = __decorate16([
  customElement13("rh-secondary-nav-menu-section")
], RhSecondaryNavMenuSection);

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
import { __decorate as __decorate17 } from "tslib";
import { html as html15, LitElement as LitElement14 } from "lit";
import { customElement as customElement14, state } from "lit/decorators.js";
import { ComposedEvent } from "@patternfly/pfe-core";
import { observed as observed2 } from "@patternfly/pfe-core/decorators.js";

// elements/rh-secondary-nav/rh-secondary-nav-overlay.css.js
import { css as css17 } from "lit";
var styles15 = css17`:host {
  position: fixed;
  background: rgb(21, 21, 21, 0.75);
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--rh-secondary-nav-overlay-z-index, -1);
}

:host([open]) {
  display: block;
}

:host(:not([open])) {
  display: none;
}
`;
var rh_secondary_nav_overlay_css_default = styles15;

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
var SecondaryNavOverlayChangeEvent = class extends ComposedEvent {
  constructor(open, toggle) {
    super("overlay-change");
    this.open = open;
    this.toggle = toggle;
  }
};
__name(SecondaryNavOverlayChangeEvent, "SecondaryNavOverlayChangeEvent");
var RhSecondaryNavOverlay = /* @__PURE__ */ __name(class RhSecondaryNavOverlay2 extends LitElement14 {
  constructor() {
    super(...arguments);
    this.open = false;
  }
  render() {
    return html15``;
  }
  _openChanged(_oldValue, newValue) {
    this.toggleAttribute("open", newValue);
  }
}, "RhSecondaryNavOverlay");
RhSecondaryNavOverlay.styles = [rh_secondary_nav_overlay_css_default];
__decorate17([
  observed2,
  state()
], RhSecondaryNavOverlay.prototype, "open", void 0);
RhSecondaryNavOverlay = __decorate17([
  customElement14("rh-secondary-nav-overlay")
], RhSecondaryNavOverlay);

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
import { __classPrivateFieldGet as __classPrivateFieldGet9, __decorate as __decorate19 } from "tslib";
import { html as html17, LitElement as LitElement16 } from "lit";
import { customElement as customElement16, state as state3, query as query3, property as property12 } from "lit/decorators.js";
import { classMap as classMap7 } from "lit/directives/class-map.js";
import { ComposedEvent as ComposedEvent2 } from "@patternfly/pfe-core";
import { Logger as Logger8 } from "@patternfly/pfe-core/controllers/logger.js";
import { bound as bound3, observed as observed4 } from "@patternfly/pfe-core/decorators.js";
import { SlotController as SlotController3 } from "@patternfly/pfe-core/controllers/slot-controller.js";
import { getRandomId as getRandomId5 } from "@patternfly/pfe-core/functions/random.js";

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
import { __decorate as __decorate18 } from "tslib";
import { html as html16, LitElement as LitElement15 } from "lit";
import { customElement as customElement15, property as property11, query as query2, state as state2 } from "lit/decorators.js";
import { classMap as classMap6 } from "lit/directives/class-map.js";
import { observed as observed3 } from "@patternfly/pfe-core/decorators.js";
import { getRandomId as getRandomId4 } from "@patternfly/pfe-core/functions/random.js";

// elements/rh-secondary-nav/rh-secondary-nav-menu.css.js
import { css as css18 } from "lit";
var styles16 = css18`:host {
  display: block;
}

#container {
  position: relative;
}

#container:not(:is(.visible)) {
  display: none;
}

#container.visible {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#sections {
  padding: var(--rh-space-xl, 24px);
}

:host(:not([type="fixed-width"])) #sections {
  display: grid;
  grid-template-columns:
    var(
      --rh-secondary-nav-menu-section-grid,
      repeat(auto-fit, minmax(15.5rem, 1fr))
    );
  grid-template-rows: auto;
  gap: var(--rh-secondary-nav-menu-section-grid-gap, var(--rh-space-2xl, 32px));
}

::slotted(:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--rh-font-size-body-text-md, 1rem);
}

@media screen and (min-width: 992px) {
  #container.visible {
    position: absolute;
    left: 0;
    right: 0;
    padding: 
      var(--rh-space-4xl, 64px)
      var(--rh-space-2xl, 32px)
      var(--rh-space-3xl, 48px);
    box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
    z-index: -1;
    max-height: calc(100vh - (var(--rh-space-4xl, 64px)) - var(--_nav-min-height));
    overflow-y: scroll;
  }

  :host([layout="fixed-width"]) #container {
    position: absolute;
    top: var(--_nav-height);
    left: auto;
    right: auto;
    bottom: auto;
    margin-top: 0;
    padding: 0;
  }

  #sections {
    padding: 0;
    max-width: var(--rh-secondary-nav-menu-content-max-width, 1136px);
    margin: auto;
  }

  :host([layout="fixed-width"]) #sections {
    padding: var(--rh-space-2xl, 32px);
  }
}

@media screen and (min-width: 1200px) {
  #container.visible {
    padding: var(--rh-space-3xl, 48px) var(--rh-space-2xl, 32px);
  }
}

@media screen and (min-width: 1440px) {
  #container.visible {
    padding: var(--rh-space-3xl, 48px) var(--rh-space-4xl, 64px);
  }
}

@media screen and (min-width: 1600px) {
  #full-width {
    margin: auto;
  }
}
`;
var rh_secondary_nav_menu_css_default = styles16;

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
var _RhSecondaryNavMenu_screenSize;
var RhSecondaryNavMenu = /* @__PURE__ */ __name(class RhSecondaryNavMenu2 extends LitElement15 {
  constructor() {
    super(...arguments);
    this.layout = "full-width";
    _RhSecondaryNavMenu_screenSize.set(this, new ScreenSizeController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this.visible = false;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = getRandomId4("rh-secondary-nav-menu"));
  }
  render() {
    const classes = { "compact": this._compact, "visible": this.visible };
    return html16`
      <div id="container" class="${classMap6(classes)}">${this.layout === "full-width" ? html16`
        <div id="full-width" part="full-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>` : html16`
        <div id="fixed-width" part="fixed-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>`}
      </div>
    `;
  }
}, "RhSecondaryNavMenu");
_RhSecondaryNavMenu_screenSize = /* @__PURE__ */ new WeakMap();
RhSecondaryNavMenu.styles = [rh_secondary_nav_menu_css_default];
__decorate18([
  property11({ reflect: true })
], RhSecondaryNavMenu.prototype, "layout", void 0);
__decorate18([
  query2("#container")
], RhSecondaryNavMenu.prototype, "_container", void 0);
__decorate18([
  observed3,
  state2()
], RhSecondaryNavMenu.prototype, "_compact", void 0);
__decorate18([
  state2()
], RhSecondaryNavMenu.prototype, "visible", void 0);
RhSecondaryNavMenu = __decorate18([
  customElement15("rh-secondary-nav-menu")
], RhSecondaryNavMenu);

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.css.js
import { css as css19 } from "lit";
var styles17 = css19`:host {
  display: block;
}

#container {
  border-inline-start: 3px solid transparent;
  border-inline-end: 1px solid transparent;
  display: block;
  height: 100%;
}

/*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
#container.expanded {
  border-inline-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-inline-end-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
}

::slotted([slot="link"]) {
  justify-content: space-between;
  position: relative;
  gap: calc(var(--rh-font-size-body-text-md, 1rem) / 2);
}

::slotted([slot="link"]):after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

#container.expanded ::slotted([slot="link"]):after {
  transform: var(--_chevron-transform-expanded);
}

@media screen and (min-width: 992px) {
  #container {
    border-inline-start: none;
    border-inline-end: none;
  }

  /*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
  #container.expanded {
    box-shadow: none;
  }

  ::slotted([slot="link"][aria-expanded="true"]) {
    background: var(--rh-color-surface-lightest, #ffffff) !important;
    border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
    color: var(--rh-color-text-primary-on-light, #151515);

    --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  }
}
`;
var rh_secondary_nav_dropdown_css_default = styles17;

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
var _RhSecondaryNavDropdown_instances;
var _RhSecondaryNavDropdown_slots;
var _RhSecondaryNavDropdown_logger;
var _RhSecondaryNavDropdown_open;
var _RhSecondaryNavDropdown_close;
var SecondaryNavDropdownExpandEvent = class extends ComposedEvent2 {
  constructor(expanded, toggle) {
    super("expand-request");
    this.expanded = expanded;
    this.toggle = toggle;
  }
};
__name(SecondaryNavDropdownExpandEvent, "SecondaryNavDropdownExpandEvent");
var RhSecondaryNavDropdown = /* @__PURE__ */ __name(class RhSecondaryNavDropdown2 extends LitElement16 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavDropdown_instances.add(this);
    _RhSecondaryNavDropdown_slots.set(this, new SlotController3(this, { slots: ["link", "menu"] }));
    _RhSecondaryNavDropdown_logger.set(this, new Logger8(this));
    this.expanded = false;
    this.colorPalette = "lighter";
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = getRandomId5("rh-secondary-nav-dropdown"));
    const [link] = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link");
    const [menu] = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu");
    if (link === void 0) {
      __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="link"] expects a slotted <a> tag');
      return;
    }
    if (menu === void 0) {
      __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="menu"] expects a slotted <rh-secondary-nav-menu> tag');
      return;
    }
    link.setAttribute("role", "button");
    link.setAttribute("aria-expanded", "false");
    link.setAttribute("aria-controls", menu.id);
    link.addEventListener("click", this._clickHandler);
  }
  render() {
    const classes = { "expanded": this.expanded };
    return html17`
      <div id="container" part="container" class="${classMap7(classes)}">
        <slot name="link"></slot>
        <slot name="menu"></slot>
      </div>
    `;
  }
  _expandedChanged(oldVal, newVal) {
    if (newVal === oldVal) {
      return;
    }
    newVal ? __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_open).call(this) : __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_close).call(this);
  }
  _clickHandler(event) {
    event.preventDefault();
    this.expanded = !this.expanded;
    this.dispatchEvent(new SecondaryNavDropdownExpandEvent(this.expanded, this));
  }
}, "RhSecondaryNavDropdown");
_RhSecondaryNavDropdown_slots = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavDropdown_open = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_open2() {
  const link = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "true");
  const menu = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = true;
}, "_RhSecondaryNavDropdown_open"), _RhSecondaryNavDropdown_close = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_close2() {
  const link = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "false");
  const menu = __classPrivateFieldGet9(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = false;
}, "_RhSecondaryNavDropdown_close");
RhSecondaryNavDropdown.styles = [rh_secondary_nav_dropdown_css_default];
__decorate19([
  query3("#container")
], RhSecondaryNavDropdown.prototype, "_container", void 0);
__decorate19([
  observed4,
  state3()
], RhSecondaryNavDropdown.prototype, "expanded", void 0);
__decorate19([
  colorContextProvider(),
  property12({ reflect: true, attribute: "color-palette" })
], RhSecondaryNavDropdown.prototype, "colorPalette", void 0);
__decorate19([
  bound3
], RhSecondaryNavDropdown.prototype, "_clickHandler", null);
RhSecondaryNavDropdown = __decorate19([
  customElement16("rh-secondary-nav-dropdown")
], RhSecondaryNavDropdown);

// elements/rh-secondary-nav/rh-secondary-nav.css.js
import { css as css20 } from "lit";
var styles18 = css20`:host {
  --_chevron-size: calc(var(--rh-font-size-body-text-md, 1rem) * 0.35);
  --_chevron-thickness: calc(var(--rh-font-size-body-text-md, 1rem) * 0.125);
  --_chevron-up: 45deg;
  --_chevron-down: -135deg;
  --_chevron-correction-x: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);
  --_chevron-correction-y: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  --_chevron-transform-collapsed: 
      rotate(var(--_chevron-up)) 
      translate(var(--_chevron-correction-x), var(--_chevron-correction-x));
  --_chevron-transform-expanded: 
      rotate(var(--_chevron-down))
      translate(var(--_chevron-correction-y), var(--_chevron-correction-y));
  --_button-font-color: var(--rh-color-text-primary-on-light, #151515);
  --_nav-max-height: var(--_max-height, max-content);
  --_nav-min-height: var(--_min-height, 74px);

  z-index: var(--rh-secondary-nav-z-index, 102);
}

:host([color-palette="darker"]) {
  --_button-font-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --_chevron-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

nav {
  position: absolute;
  height: 100%;
  width: 100%;
  min-height: var(--_min-height);
  z-index: var(--rh-secondary-nav-z-index, 102);
}

:host([color-palette="darker"])nav.compact {
  border-block-end: 1px solid var(--rh-color-border-subtle-on-dark, #6a6e73);
}

nav.rtl {
  --_chevron-transform-collapsed: 
      rotate(calc(-1 * var(--_chevron-up))) 
      translate(calc(1 * var(--_chevron-correction-y)), var(--_chevron-correction-y));
  --_chevron-transform-expanded: 
      rotate(calc(-1 * var(--_chevron-down))) 
      translate(calc(1 * var(--_chevron-correction-x)), var(--_chevron-correction-x));
}

#container {
  display: grid;
  position: relative;
  z-index: var(--rh-secondary-nav-z-index, 102);
  background-color: var(--rh-color-surface-light, #f0f0f0);
  gap: 0 var(--rh-space-lg, 16px);
  grid-template-rows: minmax(var(--_nav-min-height), var(--_nav-max-height)) max-content max-content;
  grid-template-columns: 1fr max-content;
  grid-template-areas:
    "logo menu"
    "nav nav"
    "cta cta";
  height: fit-content;
  min-height: var(--_min-height);
  max-height: 100vh;
  overflow-y: auto;
}

#cta {
  grid-area: cta;
}

#container.expanded {
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
}

:host([color-palette="darker"]) #container {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

#container.expanded ::slotted([slot="nav"]),
#container.expanded ::slotted([slot="cta"]) {
  display: flex !important;
}

#container.expanded ::slotted([slot="nav"]) {
  list-style: none;
  flex-direction: column;
  padding: 2rem 1rem 0;
  padding: 
    var(--rh-space-2xl, 32px)
    var(--rh-space-lg, 16px)
    0
    var(--rh-space-lg, 16px);
  margin: 0 !important;
}

nav.compact #container.expanded ::slotted([slot="nav"]) {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#container.expanded ::slotted([slot="cta"]) {
  padding: 2rem 1rem;
}

nav.compact #container.expanded #cta {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

button {
  grid-area: menu;
  border: none;
  display: flex;
  height: 100%;
  align-items: center;
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-md, 1rem);
  padding: var(--rh-space-lg, 16px);
  border-block-start: var(--rh-border-width-lg, 3px) solid transparent;
  margin-inline-end: var(--rh-space-lg, 16px);
  color: var(--_button-font-color);
  background-color: var(--rh-color-surface-light, #f0f0f0);
  gap: var(--rh-space-md, 8px);
}

button:hover {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

button:after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

button[aria-expanded="true"]:after {
  transform: var(--_chevron-transform-expanded);
}

button:focus {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

:host([color-palette="darker"]) button {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

button:active,
button[aria-expanded="true"],
:host([color-palette="darker"]) button[aria-expanded="true"] {
  color: var(--rh-color-text-primary-on-light, #151515);
  background-color: var(--rh-color-surface-lightest, #ffffff);
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-block-end: none;
}

:host([color-palette="darker"]) button:active {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
}

:host([color-palette="darker"]) button[aria-expanded="true"]:active {
  color: var(--rh-color-text-primary-on-light, #151515);
}

@media screen and (min-width: 768px) {
  button {
    margin-inline-end: var(--rh-space-2xl, 32px);
  }

  #container.expanded ::slotted([slot="nav"]) {
    padding: 
      var(--rh-space-2xl, 32px) 
      var(--rh-space-2xl, 32px)
      0 !important;
  }

  #container.expanded ::slotted([slot="cta"]) {
    padding: var(--rh-space-2xl, 32px) !important;
  }
}

@media screen and (min-width: 992px) {
  nav {
    position: relative;
  }

  #container {
    grid-template-areas: "logo nav cta";
    grid-template-rows: auto;
    grid-template-columns: max-content 1fr max-content;
    height: 100%;
    max-height: initial;
    overflow-y: initial;
  }

  #container.expanded ::slotted([slot="nav"]) {
    max-height: calc(100vh - var(--_nav-min-height));
  }

  button {
    display: none;
  }
}
`;
var rh_secondary_nav_css_default = styles18;

// elements/rh-secondary-nav/rh-secondary-nav.js
var _RhSecondaryNav_instances;
var _RhSecondaryNav_logger;
var _RhSecondaryNav_logoCopy;
var _RhSecondaryNav_dir;
var _RhSecondaryNav_getOpenDropdowns;
var _RhSecondaryNav_getDropdownIndex;
var _RhSecondaryNav_dropdownByIndex;
var _RhSecondaryNav_expand;
var _RhSecondaryNav_allDropdowns;
var _RhSecondaryNav_closeDropdown;
var _RhSecondaryNav_openDropdown;
var _RhSecondaryNav_updateAccessibility;
var _RhSecondaryNav_toggleMobileMenu;
var _RhSecondaryNav_setNavOrder;
var RhSecondaryNav_1;
var RhSecondaryNav = RhSecondaryNav_1 = /* @__PURE__ */ __name(class RhSecondaryNav2 extends LitElement17 {
  constructor() {
    super(...arguments);
    _RhSecondaryNav_instances.add(this);
    _RhSecondaryNav_logger.set(this, new Logger9(this));
    _RhSecondaryNav_logoCopy.set(this, null);
    _RhSecondaryNav_dir.set(this, new DirController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this._mobileMenuExpanded = false;
    this.mainNav = false;
    this.colorPalette = "lighter";
    this._ctaColorPalette = this.colorPalette;
  }
  static isDropdown(element) {
    return element instanceof RhSecondaryNavDropdown;
  }
  async connectedCallback() {
    super.connectedCallback();
    this.addEventListener("expand-request", this._dropdownChangeHandler);
    this.addEventListener("overlay-change", this._toggleNavOverlay);
    this.addEventListener("focusout", this._focusOutHandler);
    this.addEventListener("keydown", this._keyboardControls);
    __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_updateAccessibility).call(this);
  }
  firstUpdated() {
    this._overlay.addEventListener("click", this._overlayClickHandler);
    if (this.colorPalette === "darker" && this._compact) {
      this._ctaColorPalette = "lightest";
    }
  }
  render() {
    const navClasses = { compact: this._compact, rtl: __classPrivateFieldGet10(this, _RhSecondaryNav_dir, "f").dir === "rtl" };
    const containerClasses = { "expanded": this._mobileMenuExpanded };
    return html18`
      <nav part="nav" class="${classMap8(navClasses)}" aria-label="${__classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_setNavOrder).call(this)}">
        ${__classPrivateFieldGet10(this, _RhSecondaryNav_logoCopy, "f")}
        <div id="container" part="container" class="${classMap8(containerClasses)}">
          <slot name="logo" id="logo"></slot>
          <button aria-controls="container" aria-expanded="${this._mobileMenuExpanded}" @click="${__classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_toggleMobileMenu)}"><slot name="mobile-menu">Menu</slot></button>
          <slot name="nav"></slot>
          <div id="cta" part="cta">
            <rh-context-provider color-palette="${this._ctaColorPalette}">
              <slot name="cta"><slot>
            </rh-context-provider>
          </div>
        </div>
      </nav>
      <rh-secondary-nav-overlay></rh-secondary-nav-overlay>
    `;
  }
  open(index) {
    if (index == null) {
      return;
    }
    const dropdown = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
    if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
      this.close();
      __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      dropdown?.querySelector("a")?.focus();
      this._overlay.open = true;
    }
  }
  close() {
    const dropdowns = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
    dropdowns.forEach((dropdown) => __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_closeDropdown).call(this, dropdown));
  }
  _dropdownChangeHandler(event) {
    if (event instanceof SecondaryNavDropdownExpandEvent) {
      const index = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getDropdownIndex).call(this, event.target);
      if (index === null || index === void 0) {
        return;
      }
      this.close();
      if (event.expanded) {
        __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      }
      if (!this._nav?.classList.contains("compact")) {
        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));
      }
    }
  }
  _focusOutHandler(event) {
    const target = event.relatedTarget;
    if (target?.closest("rh-secondary-nav") === this || target === null) {
      return;
    } else {
      if (this._compact) {
        this._mobileMenuExpanded = false;
      }
      this.close();
      this._overlay.open = false;
    }
  }
  _overlayClickHandler() {
    this.close();
    this._overlay.open = false;
    if (this._compact) {
      this._mobileMenuExpanded = false;
    }
  }
  __compactChanged(oldVal, newVal) {
    if (newVal === void 0 || newVal === oldVal) {
      return;
    }
    const dropdownsOpen = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this).length;
    if (newVal === true) {
      if (dropdownsOpen > 0) {
        this._mobileMenuExpanded = true;
      }
      if (this.colorPalette === "darker") {
        this._ctaColorPalette = "lightest";
      }
    } else {
      this._mobileMenuExpanded = false;
      if (dropdownsOpen === 0) {
        if (this._overlay) {
          this._overlay.open = false;
        }
      }
      if (this.colorPalette === "darker") {
        this._ctaColorPalette = this.colorPalette;
      }
    }
  }
  _keyboardControls(event) {
    switch (event.key) {
      case "Escape":
        if (this._compact) {
          this._mobileMenuExpanded = false;
          this._mobileMenuButton?.focus();
        } else {
          const open = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this);
          open[0].querySelector("a")?.focus();
        }
        this.close();
        this._overlay.open = false;
        break;
      default:
        break;
    }
  }
  _toggleNavOverlay(event) {
    if (event instanceof SecondaryNavOverlayChangeEvent) {
      if (this.contains(event.toggle)) {
        this._overlay.open = event.open;
      }
    }
  }
}, "RhSecondaryNav");
_RhSecondaryNav_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_logoCopy = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_dir = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNav_getOpenDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_getOpenDropdowns2() {
  const dropdowns = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const openDropdowns = [];
  dropdowns.forEach((dropdown) => {
    if (dropdown.expanded) {
      openDropdowns.push(dropdown);
    }
  });
  return openDropdowns;
}, "_RhSecondaryNav_getOpenDropdowns"), _RhSecondaryNav_getDropdownIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_getDropdownIndex2(element) {
  if (!RhSecondaryNav_1.isDropdown(element)) {
    __classPrivateFieldGet10(this, _RhSecondaryNav_logger, "f").warn("The getDropdownIndex method expects to receive a dropdown element.");
    return;
  }
  const dropdowns = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const index = dropdowns.findIndex((dropdown) => dropdown.id === element.id);
  return index;
}, "_RhSecondaryNav_getDropdownIndex"), _RhSecondaryNav_dropdownByIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_dropdownByIndex2(index) {
  const dropdowns = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  if (dropdowns[index] === void 0) {
    __classPrivateFieldGet10(this, _RhSecondaryNav_logger, "f").error("This dropdown index does not exist.");
    return;
  }
  return dropdowns[index];
}, "_RhSecondaryNav_dropdownByIndex"), _RhSecondaryNav_expand = /* @__PURE__ */ __name(function _RhSecondaryNav_expand2(index) {
  if (index == null) {
    return;
  }
  const dropdown = __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
  if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
    __classPrivateFieldGet10(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_openDropdown).call(this, dropdown);
  }
}, "_RhSecondaryNav_expand"), _RhSecondaryNav_allDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_allDropdowns2() {
  return Array.from(this.querySelectorAll("rh-secondary-nav-dropdown")).filter(RhSecondaryNav_1.isDropdown);
}, "_RhSecondaryNav_allDropdowns"), _RhSecondaryNav_closeDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_closeDropdown2(dropdown) {
  if (dropdown.expanded === false) {
    return;
  }
  dropdown.expanded = false;
}, "_RhSecondaryNav_closeDropdown"), _RhSecondaryNav_openDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_openDropdown2(dropdown) {
  if (dropdown.expanded === true) {
    return;
  }
  dropdown.expanded = true;
}, "_RhSecondaryNav_openDropdown"), _RhSecondaryNav_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNav_updateAccessibility2() {
  this.removeAttribute("role");
  const nav = this.querySelector(':is([slot="nav"]):is(ul)');
  nav?.removeAttribute("aria-labelledby");
}, "_RhSecondaryNav_updateAccessibility"), _RhSecondaryNav_toggleMobileMenu = /* @__PURE__ */ __name(function _RhSecondaryNav_toggleMobileMenu2() {
  if (this._mobileMenuExpanded) {
    this._mobileMenuExpanded = false;
  } else {
    this._mobileMenuExpanded = true;
  }
  this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this._mobileMenuExpanded, this));
}, "_RhSecondaryNav_toggleMobileMenu"), _RhSecondaryNav_setNavOrder = /* @__PURE__ */ __name(function _RhSecondaryNav_setNavOrder2() {
  return this.mainNav ? "main" : "secondary";
}, "_RhSecondaryNav_setNavOrder");
RhSecondaryNav.version = "{{version}}";
RhSecondaryNav.styles = [rh_secondary_nav_css_default];
__decorate20([
  query4("rh-secondary-nav-overlay")
], RhSecondaryNav.prototype, "_overlay", void 0);
__decorate20([
  query4("#container")
], RhSecondaryNav.prototype, "_container", void 0);
__decorate20([
  query4("nav")
], RhSecondaryNav.prototype, "_nav", void 0);
__decorate20([
  query4("button")
], RhSecondaryNav.prototype, "_mobileMenuButton", void 0);
__decorate20([
  observed5,
  state4()
], RhSecondaryNav.prototype, "_compact", void 0);
__decorate20([
  state4()
], RhSecondaryNav.prototype, "_mobileMenuExpanded", void 0);
__decorate20([
  property13({ reflect: true, attribute: "main", type: Boolean })
], RhSecondaryNav.prototype, "mainNav", void 0);
__decorate20([
  colorContextProvider(),
  property13({ reflect: true, attribute: "color-palette" })
], RhSecondaryNav.prototype, "colorPalette", void 0);
__decorate20([
  state4()
], RhSecondaryNav.prototype, "_ctaColorPalette", void 0);
__decorate20([
  bound4
], RhSecondaryNav.prototype, "_dropdownChangeHandler", null);
__decorate20([
  bound4
], RhSecondaryNav.prototype, "_focusOutHandler", null);
__decorate20([
  bound4
], RhSecondaryNav.prototype, "_overlayClickHandler", null);
__decorate20([
  bound4
], RhSecondaryNav.prototype, "_keyboardControls", null);
__decorate20([
  bound4
], RhSecondaryNav.prototype, "_toggleNavOverlay", null);
RhSecondaryNav = RhSecondaryNav_1 = __decorate20([
  customElement17("rh-secondary-nav")
], RhSecondaryNav);

// elements/rh-stat/rh-stat.js
import { __classPrivateFieldGet as __classPrivateFieldGet11, __decorate as __decorate21 } from "tslib";
import { LitElement as LitElement18, html as html19 } from "lit";
import { customElement as customElement18, property as property14 } from "lit/decorators.js";
import { classMap as classMap9 } from "lit/directives/class-map.js";
import { colorContextConsumer as colorContextConsumer2 } from "@patternfly/pfe-core/decorators.js";
import { SlotController as SlotController4 } from "@patternfly/pfe-core/controllers/slot-controller.js";
import { Logger as Logger10 } from "@patternfly/pfe-core/controllers/logger.js";

// elements/rh-stat/rh-stat.css.js
import { css as css21 } from "lit";
var styles19 = css21`:host {
  display: block;
}

div {
  width: 100%;
  height: 100%;
  display: flex;

  --_accent-color: var(--rh-color-brand-red, #ee0000);

  flex-direction: column;
  align-items: center;
  align-content: center;
  justify-content: space-around;
}

:host([on="dark"]) div {
  --_accent-color: #ffffff;
}

span,
::slotted(*) {
  display: block;
  text-align: center;
}

pfe-icon[size="md"],
::slotted(pfe-icon[size="md"]) {
  --pfe-icon--size: var(--rh-font-size-heading-xl, 2.5rem);

  display: contents;
}

.hasIcon ::slotted([slot="icon"]),
.hasIcon pfe-icon[size="md"] {
  order: 1;
  display: block;
  color: black;
  margin-bottom: 16px;
}

#title {
  order: 1;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-regular, 400);
  text-transform: uppercase;
}

#statistic {
  order: 2;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-heading-lg, 2.25rem);
  font-weight: var(--rh-font-weight-regular, 300);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
}

#content {
  order: 3;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-sm, 6px);
}

#cta {
  order: 4;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-lg, 16px);
}

:not(.hasIcon) #icon,
:not(.hasStatistic) #statistic,
:not(.hasTitle) #title,
:not(.hasCta) #cta {
  display: none;
}

:host([size="large"]) #statistic {
  font-size: var(--rh-font-size-heading-2xl, 3rem);
}

.isMobile #content {
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile #statistic {
  font-size: 32px;
}

:host([top="statistic"]) #statistic {
  order: 1;
}

:host([top="statistic"]) #title {
  order: 2;
}
`;
var rh_stat_css_default = styles19;

// elements/rh-stat/rh-stat.js
var _RhStat_instances;
var _RhStat_screenSize;
var _RhStat_slots;
var _RhStat_mo;
var _RhStat_logger;
var _RhStat_updateIcons;
var _RhStat_onMutation;
var RhStat = /* @__PURE__ */ __name(class RhStat2 extends LitElement18 {
  constructor() {
    super(...arguments);
    _RhStat_instances.add(this);
    this.on = "light";
    this.top = "default";
    this.size = "default";
    this.isMobile = false;
    _RhStat_screenSize.set(this, new ScreenSizeController(this));
    _RhStat_slots.set(this, new SlotController4(this, null, "icon", "title", "statistic", "cta"));
    _RhStat_mo.set(this, new MutationObserver(() => __classPrivateFieldGet11(this, _RhStat_instances, "m", _RhStat_onMutation).call(this)));
    _RhStat_logger.set(this, new Logger10(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet11(this, _RhStat_instances, "m", _RhStat_updateIcons).call(this);
    __classPrivateFieldGet11(this, _RhStat_mo, "f").observe(this, { childList: true });
    __classPrivateFieldGet11(this, _RhStat_instances, "m", _RhStat_onMutation).call(this);
  }
  render() {
    const hasIcon = __classPrivateFieldGet11(this, _RhStat_slots, "f").hasSlotted("icon") || !!this.icon;
    const hasTitle = __classPrivateFieldGet11(this, _RhStat_slots, "f").hasSlotted("title");
    const hasStatistic = __classPrivateFieldGet11(this, _RhStat_slots, "f").hasSlotted("statistic");
    const hasCta = __classPrivateFieldGet11(this, _RhStat_slots, "f").hasSlotted("cta");
    const isMobile = !__classPrivateFieldGet11(this, _RhStat_screenSize, "f").matches.has("tabletPortrait");
    return html19`
      <div class="${classMap9({ isMobile, hasIcon, hasTitle, hasStatistic, hasCta })}">
        <span id="icon">
          <slot name="icon" @slotchange="${__classPrivateFieldGet11(this, _RhStat_instances, "m", _RhStat_updateIcons)}">${!this.icon ? "" : html19`
            <pfe-icon size=${this.size === "default" ? "md" : "lg"} icon=${this.icon}></pfe-icon>`}
          </slot>
        </span>
        <span id="title"><slot name="title"></slot></span>
        <span id="statistic"><slot name="statistic"></slot></span>
        <span id="content"><slot></slot></span>
        <span id="cta"><slot name="cta"></slot></span>
      </div>
    `;
  }
}, "RhStat");
_RhStat_screenSize = /* @__PURE__ */ new WeakMap(), _RhStat_slots = /* @__PURE__ */ new WeakMap(), _RhStat_mo = /* @__PURE__ */ new WeakMap(), _RhStat_logger = /* @__PURE__ */ new WeakMap(), _RhStat_instances = /* @__PURE__ */ new WeakSet(), _RhStat_updateIcons = /* @__PURE__ */ __name(function _RhStat_updateIcons2() {
  this.querySelector('pfe-icon[slot="icon"]')?.setAttribute?.("size", this.size === "default" ? "md" : "lg");
}, "_RhStat_updateIcons"), _RhStat_onMutation = /* @__PURE__ */ __name(function _RhStat_onMutation2() {
  if (!__classPrivateFieldGet11(this, _RhStat_slots, "f").hasSlotted("stat")) {
    __classPrivateFieldGet11(this, _RhStat_logger, "f").warn("Must contain stat content");
  }
  if (!this.querySelectorAll(":not([slot])").length) {
    __classPrivateFieldGet11(this, _RhStat_logger, "f").warn("Must contain description content");
  }
}, "_RhStat_onMutation");
RhStat.version = "{{version}}";
RhStat.styles = [rh_stat_css_default];
__decorate21([
  colorContextConsumer2(),
  property14({ reflect: true })
], RhStat.prototype, "on", void 0);
__decorate21([
  property14({ reflect: true, type: String })
], RhStat.prototype, "icon", void 0);
__decorate21([
  property14({ reflect: true, type: String })
], RhStat.prototype, "top", void 0);
__decorate21([
  property14({ reflect: true, type: String })
], RhStat.prototype, "size", void 0);
__decorate21([
  property14({ type: Boolean, reflect: true, attribute: "is-mobile" })
], RhStat.prototype, "isMobile", void 0);
RhStat = __decorate21([
  customElement18("rh-stat")
], RhStat);

// elements/rh-tooltip/rh-tooltip.js
import { __decorate as __decorate22 } from "tslib";
import { customElement as customElement19, property as property15 } from "lit/decorators.js";
import { colorContextConsumer as colorContextConsumer3 } from "@patternfly/pfe-core/decorators.js";
import { BaseTooltip } from "@patternfly/pfe-tooltip/BaseTooltip.js";

// elements/rh-tooltip/rh-tooltip.css.js
import { css as css22 } from "lit";
var styles20 = css22`:host([on="dark"]) {
  --pf-c-tooltip__content--BackgroundColor: #ffffff;
  --pf-c-tooltip__content--Color: #151515;
}

:host {
  --pf-c-tooltip--BoxShadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
  --pf-c-tooltip__content--PaddingTop: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingRight: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingBottom: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingLeft: var(--rh-space-lg, 16px);
  --pf-c-tooltip__arrow--Width: 11px;
  --pf-c-tooltip__arrow--Height: 11px;
}
`;
var rh_tooltip_css_default = styles20;

// elements/rh-tooltip/rh-tooltip.js
var RhTooltip = /* @__PURE__ */ __name(class RhTooltip2 extends BaseTooltip {
  constructor() {
    super();
    this.on = "light";
    if (["top", "bottom"].includes(this.position)) {
      this.offset = [-4, 16];
    }
  }
}, "RhTooltip");
RhTooltip.version = "{{version}}";
RhTooltip.styles = [...BaseTooltip.styles, rh_tooltip_css_default];
__decorate22([
  colorContextConsumer3(),
  property15({ reflect: true })
], RhTooltip.prototype, "on", void 0);
RhTooltip = __decorate22([
  customElement19("rh-tooltip")
], RhTooltip);
export {
  ContextProvider,
  RhAlert,
  RhBlockquote,
  RhCta,
  RhDemo,
  RhDialog,
  RhPagination,
  RhSecondaryNav,
  RhStat,
  RhTooltip
};
//# sourceMappingURL=rhds.min.js.map
